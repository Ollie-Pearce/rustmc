# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Coverage targets




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/genmc
pkgincludedir = $(includedir)/genmc
pkglibdir = $(libdir)/genmc
pkglibexecdir = $(libexecdir)/genmc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = genmc$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_llvm.m4 \
	$(top_srcdir)/m4/ax_clang.m4 $(top_srcdir)/m4/ax_git_commit.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_prog_doxygen.m4 $(top_srcdir)/m4/gcov.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(nobase_genmc_HEADERS) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(genmcdir)"
PROGRAMS = $(bin_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgenmc_a_AR = $(AR) $(ARFLAGS)
libgenmc_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libgenmc_a_OBJECTS = src/AccessFilter.$(OBJEXT) src/ASize.$(OBJEXT) \
	src/BisimilarityCheckerPass.$(OBJEXT) \
	src/BoundDecider.$(OBJEXT) \
	src/CallInfoCollectionPass.$(OBJEXT) \
	src/CodeCondenserPass.$(OBJEXT) \
	src/ContextBoundDecider.$(OBJEXT) \
	src/ConfirmationAnnotationPass.$(OBJEXT) src/Config.$(OBJEXT) \
	src/DeclareInternalsPass.$(OBJEXT) \
	src/DefineLibcFunsPass.$(OBJEXT) \
	src/DepExecutionGraph.$(OBJEXT) src/DepInfo.$(OBJEXT) \
	src/DepView.$(OBJEXT) src/EliminateAnnotationsPass.$(OBJEXT) \
	src/EliminateCASPHIsPass.$(OBJEXT) \
	src/EliminateCastsPass.$(OBJEXT) \
	src/EliminateRedundantInstPass.$(OBJEXT) \
	src/EliminateUnusedCodePass.$(OBJEXT) \
	src/EscapeCheckerPass.$(OBJEXT) src/Event.$(OBJEXT) \
	src/EventLabel.$(OBJEXT) src/Execution.$(OBJEXT) \
	src/ExecutionGraph.$(OBJEXT) src/ExternalFunctions.$(OBJEXT) \
	src/FunctionInlinerPass.$(OBJEXT) src/GenMCDriver.$(OBJEXT) \
	src/InstAnnotator.$(OBJEXT) src/Interpreter.$(OBJEXT) \
	src/InterpreterEnumAPI.$(OBJEXT) \
	src/IntrinsicLoweringPass.$(OBJEXT) \
	src/LoadAnnotationPass.$(OBJEXT) \
	src/LocalSimplifyCFGPass.$(OBJEXT) src/LLVMModule.$(OBJEXT) \
	src/LLVMUtils.$(OBJEXT) src/LoopUnrollPass.$(OBJEXT) \
	src/LoopJumpThreadingPass.$(OBJEXT) \
	src/MDataCollectionPass.$(OBJEXT) src/MemAccess.$(OBJEXT) \
	src/MMDetectorPass.$(OBJEXT) src/ModuleInfo.$(OBJEXT) \
	src/NameInfo.$(OBJEXT) src/Parser.$(OBJEXT) \
	src/PromoteMemIntrinsicPass.$(OBJEXT) \
	src/PropagateAssumesPass.$(OBJEXT) src/RADriver.$(OBJEXT) \
	src/Revisit.$(OBJEXT) src/RoundBoundDecider.$(OBJEXT) \
	src/SAddr.$(OBJEXT) src/Stamp.$(OBJEXT) src/SVal.$(OBJEXT) \
	src/SpinAssumePass.$(OBJEXT) src/ThreadPinner.$(OBJEXT) \
	src/ThreadPool.$(OBJEXT) src/WorkSet.$(OBJEXT) \
	src/Verbosity.$(OBJEXT) src/VectorClock.$(OBJEXT) \
	src/VerificationError.$(OBJEXT) src/View.$(OBJEXT)
libgenmc_a_OBJECTS = $(am_libgenmc_a_OBJECTS)
am_genmc_OBJECTS = src/main.$(OBJEXT)
genmc_OBJECTS = $(am_genmc_OBJECTS)
am__DEPENDENCIES_1 =
genmc_DEPENDENCIES = libgenmc.a $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = src/$(DEPDIR)/ASize.Po \
	src/$(DEPDIR)/AccessFilter.Po \
	src/$(DEPDIR)/BisimilarityCheckerPass.Po \
	src/$(DEPDIR)/BoundDecider.Po \
	src/$(DEPDIR)/CallInfoCollectionPass.Po \
	src/$(DEPDIR)/CodeCondenserPass.Po src/$(DEPDIR)/Config.Po \
	src/$(DEPDIR)/ConfirmationAnnotationPass.Po \
	src/$(DEPDIR)/ContextBoundDecider.Po \
	src/$(DEPDIR)/DeclareInternalsPass.Po \
	src/$(DEPDIR)/DefineLibcFunsPass.Po \
	src/$(DEPDIR)/DepExecutionGraph.Po src/$(DEPDIR)/DepInfo.Po \
	src/$(DEPDIR)/DepView.Po \
	src/$(DEPDIR)/EliminateAnnotationsPass.Po \
	src/$(DEPDIR)/EliminateCASPHIsPass.Po \
	src/$(DEPDIR)/EliminateCastsPass.Po \
	src/$(DEPDIR)/EliminateRedundantInstPass.Po \
	src/$(DEPDIR)/EliminateUnusedCodePass.Po \
	src/$(DEPDIR)/EscapeCheckerPass.Po src/$(DEPDIR)/Event.Po \
	src/$(DEPDIR)/EventLabel.Po src/$(DEPDIR)/Execution.Po \
	src/$(DEPDIR)/ExecutionGraph.Po \
	src/$(DEPDIR)/ExternalFunctions.Po \
	src/$(DEPDIR)/FunctionInlinerPass.Po \
	src/$(DEPDIR)/GenMCDriver.Po src/$(DEPDIR)/InstAnnotator.Po \
	src/$(DEPDIR)/Interpreter.Po \
	src/$(DEPDIR)/InterpreterEnumAPI.Po \
	src/$(DEPDIR)/IntrinsicLoweringPass.Po \
	src/$(DEPDIR)/LLVMModule.Po src/$(DEPDIR)/LLVMUtils.Po \
	src/$(DEPDIR)/LoadAnnotationPass.Po \
	src/$(DEPDIR)/LocalSimplifyCFGPass.Po \
	src/$(DEPDIR)/LoopJumpThreadingPass.Po \
	src/$(DEPDIR)/LoopUnrollPass.Po \
	src/$(DEPDIR)/MDataCollectionPass.Po \
	src/$(DEPDIR)/MMDetectorPass.Po src/$(DEPDIR)/MemAccess.Po \
	src/$(DEPDIR)/ModuleInfo.Po src/$(DEPDIR)/NameInfo.Po \
	src/$(DEPDIR)/Parser.Po \
	src/$(DEPDIR)/PromoteMemIntrinsicPass.Po \
	src/$(DEPDIR)/PropagateAssumesPass.Po \
	src/$(DEPDIR)/RADriver.Po src/$(DEPDIR)/Revisit.Po \
	src/$(DEPDIR)/RoundBoundDecider.Po src/$(DEPDIR)/SAddr.Po \
	src/$(DEPDIR)/SVal.Po src/$(DEPDIR)/SpinAssumePass.Po \
	src/$(DEPDIR)/Stamp.Po src/$(DEPDIR)/ThreadPinner.Po \
	src/$(DEPDIR)/ThreadPool.Po src/$(DEPDIR)/VectorClock.Po \
	src/$(DEPDIR)/Verbosity.Po src/$(DEPDIR)/VerificationError.Po \
	src/$(DEPDIR)/View.Po src/$(DEPDIR)/WorkSet.Po \
	src/$(DEPDIR)/main.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libgenmc_a_SOURCES) $(genmc_SOURCES)
DIST_SOURCES = $(libgenmc_a_SOURCES) $(genmc_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
HEADERS = $(nobase_genmc_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \
	config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.am.coverage $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in COPYING README.md ar-lib compile depcomp \
	install-sh missing test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} '/root/genmc-tool/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} '/root/genmc-tool/missing' autoconf
AUTOHEADER = ${SHELL} '/root/genmc-tool/missing' autoheader
AUTOMAKE = ${SHELL} '/root/genmc-tool/missing' automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLANG = /usr/bin/clang-16
CLANGXX = /usr/bin/clang++-16
COVERAGE_CFLAGS = 
COVERAGE_CXXFLAGS = 
COVERAGE_LDFLAGS = 
CPPFLAGS = 
CPPLINT = no
CSCOPE = cscope
CTAGS = ctags
CXX = g++ -std=c++20
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -I/usr/lib/llvm-16/include    -fno-exceptions -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DX_CONFIG = doc/Doxyfile
DX_DOCDIR = doc/doxygen
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='genmc' VERSION='0.10.1' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = genmc
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ETAGS = etags
EXEEXT = 
GENHTML = 
GIT = /usr/bin/git
HAVE_CXX20 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LDFLAGS =  -L/usr/lib/llvm-16/lib  
LIBOBJS = 
LIBS = -lhwloc -lffi -ldl  -lLLVM-16
LLVMCONFIG = /usr/lib/llvm-16/bin/llvm-config
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/root/genmc-tool/missing' makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = genmc
PACKAGE_BUGREPORT = michalis@mpi-sws.org
PACKAGE_NAME = GenMC
PACKAGE_STRING = GenMC 0.10.1
PACKAGE_TARNAME = genmc
PACKAGE_URL = https://plv.mpi-sws.org/genmc
PACKAGE_VERSION = 0.10.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
STRIP = 
VERSION = 0.10.1
abs_builddir = /root/genmc-tool
abs_srcdir = /root/genmc-tool
abs_top_builddir = /root/genmc-tool
abs_top_srcdir = /root/genmc-tool
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/genmc-tool/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# where to install the headers on the system
genmcdir = $(pkgincludedir)

# the list of header files that belong to the library
nobase_genmc_HEADERS = \
  include/assert.h \
  include/atomic \
  include/bits/stat.h \
  include/cassert \
  include/errno.h \
  include/fcntl.h \
  include/genmc.h \
  include/genmc_internal.h \
  include/lkmm.h \
  include/pthread.h \
  include/stdatomic.h \
  include/stdio.h \
  include/stdlib.h \
  include/sys/stat.h \
  include/sys/types.h \
  include/thread \
  include/threads.h \
  include/unistd.h

noinst_LIBRARIES = libgenmc.a
libgenmc_a_SOURCES = \
  src/AccessFilter.cpp src/AccessFilter.hpp \
  src/ASize.cpp src/ASize.hpp \
  src/BisimilarityCheckerPass.cpp src/BisimilarityCheckerPass.hpp \
  src/Bitmask.hpp \
  src/BoundDecider.cpp src/BoundDecider.hpp \
  src/CallInfoCollectionPass.cpp src/CallInfoCollectionPass.hpp \
  src/CodeCondenserPass.cpp src/CodeCondenserPass.hpp \
  src/ContextBoundDecider.cpp src/ContextBoundDecider.hpp \
  src/Calculator.hpp \
  src/CallInstWrapper.hpp \
  src/CombinatoricUtils.hpp \
  src/ConfirmationAnnotationPass.cpp src/ConfirmationAnnotationPass.hpp \
  src/Config.cpp src/Config.hpp \
  src/DeclareInternalsPass.cpp src/DeclareInternalsPass.hpp \
  src/DefineLibcFunsPass.cpp src/DefineLibcFunsPass.hpp \
  src/DepExecutionGraph.cpp src/DepExecutionGraph.hpp \
  src/DepInfo.cpp src/DepInfo.hpp \
  src/DepTracker.hpp \
  src/DepView.cpp src/DepView.hpp \
  src/DriverFactory.hpp \
  src/EliminateAnnotationsPass.cpp src/EliminateAnnotationsPass.hpp \
  src/EliminateCASPHIsPass.cpp src/EliminateCASPHIsPass.hpp \
  src/EliminateCastsPass.cpp src/EliminateCastsPass.hpp \
  src/EliminateRedundantInstPass.cpp src/EliminateRedundantInstPass.hpp \
  src/EliminateUnusedCodePass.cpp src/EliminateUnusedCodePass.hpp \
  src/Error.hpp \
  src/EscapeCheckerPass.cpp src/EscapeCheckerPass.hpp \
  src/Event.cpp src/Event.hpp \
  src/EventAttr.hpp \
  src/EventLabel.cpp src/EventLabel.hpp \
  src/Execution.cpp \
  src/ExecutionGraph.cpp src/ExecutionGraph.hpp \
  src/ExternalFunctions.cpp \
  src/FunctionInlinerPass.cpp src/FunctionInlinerPass.hpp \
  src/GenMCDriver.cpp src/GenMCDriver.hpp \
  src/GraphIterators.hpp \
  src/InstAnnotator.cpp src/InstAnnotator.hpp \
  src/Interpreter.cpp Interpreter.h \
  src/InterpreterEnumAPI.cpp src/InterpreterEnumAPI.hpp \
  src/IntrinsicLoweringPass.cpp src/IntrinsicLoweringPass.hpp \
  src/LabelVisitor.hpp \
  src/LoadAnnotationPass.cpp src/LoadAnnotationPass.hpp \
  src/LocalSimplifyCFGPass.cpp src/LocalSimplifyCFGPass.hpp \
  src/Logger.hpp \
  src/LLVMModule.cpp src/LLVMModule.hpp \
  src/LLVMUtils.cpp src/LLVMUtils.hpp \
  src/LoopUnrollPass.cpp src/LoopUnrollPass.hpp \
  src/LoopJumpThreadingPass.cpp src/LoopJumpThreadingPass.hpp \
  src/Matrix2D.hpp Matrix2D.tcc \
  src/MaximalIterator.hpp \
  src/MDataCollectionPass.hpp src/MDataCollectionPass.cpp \
  src/MemAccess.hpp src/MemAccess.cpp \
  src/MMDetectorPass.cpp src/MMDetectorPass.hpp \
  src/ModuleID.hpp \
  src/ModuleInfo.cpp src/ModuleInfo.hpp \
  src/NameInfo.cpp src/NameInfo.hpp \
  src/Parser.cpp src/Parser.hpp \
  src/PromoteMemIntrinsicPass.cpp src/PromoteMemIntrinsicPass.hpp \
  src/PropagateAssumesPass.cpp src/PropagateAssumesPass.hpp \
  src/RADriver.cpp src/RADriver.hpp \
  src/Revisit.cpp src/Revisit.hpp \
  src/RoundBoundDecider.cpp src/RoundBoundDecider.hpp \
  src/SAddr.cpp src/SAddr.hpp \
  src/SAddrAllocator.hpp \
  src/SExpr.tcc src/SExpr.hpp \
  src/SExprVisitor.tcc src/SExprVisitor.hpp \
  src/Stamp.cpp src/Stamp.hpp \
  src/SVal.cpp src/SVal.hpp \
  src/SpinAssumePass.cpp src/SpinAssumePass.hpp \
  src/WBIterator.hpp \
  src/ThreadInfo.hpp \
  src/ThreadPinner.cpp src/ThreadPinner.hpp \
  src/ThreadPool.cpp src/ThreadPool.hpp \
  src/WorkSet.hpp src/WorkSet.cpp \
  src/value_ptr.hpp \
  src/Verbosity.hpp src/Verbosity.cpp \
  src/VectorClock.hpp src/VectorClock.cpp \
  src/VerificationError.hpp src/VerificationError.cpp \
  src/View.hpp src/View.cpp \
  src/VSet.hpp src/VSet.tcc

TESTS = scripts/fast-driver.sh scripts/randomize-driver.sh
AM_CXXFLAGS = -DINCLUDE_DIR=\"$(pkgincludedir)/$(pkg)/include\" -DSRC_INCLUDE_DIR=\"$(abs_top_srcdir)/include\" $(COVERAGE_CXXFLAGS)
genmc_SOURCES = src/main.cpp
genmc_LDADD = libgenmc.a -lpthread $(COVERAGE_LDFLAGS)
MOSTLYCLEANFILES = DX_CLEANFILES
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.am.coverage $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/Makefile.am.coverage $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/AccessFilter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ASize.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/BisimilarityCheckerPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/BoundDecider.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/CallInfoCollectionPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/CodeCondenserPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ContextBoundDecider.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ConfirmationAnnotationPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Config.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/DeclareInternalsPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/DefineLibcFunsPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/DepExecutionGraph.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/DepInfo.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/DepView.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EliminateAnnotationsPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EliminateCASPHIsPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EliminateCastsPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EliminateRedundantInstPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EliminateUnusedCodePass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/EscapeCheckerPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Event.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/EventLabel.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Execution.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ExecutionGraph.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ExternalFunctions.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/FunctionInlinerPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/GenMCDriver.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/InstAnnotator.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Interpreter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/InterpreterEnumAPI.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/IntrinsicLoweringPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LoadAnnotationPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LocalSimplifyCFGPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LLVMModule.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LLVMUtils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LoopUnrollPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/LoopJumpThreadingPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/MDataCollectionPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/MemAccess.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/MMDetectorPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ModuleInfo.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/NameInfo.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Parser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/PromoteMemIntrinsicPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/PropagateAssumesPass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/RADriver.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Revisit.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/RoundBoundDecider.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SAddr.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/Stamp.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/SVal.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/SpinAssumePass.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ThreadPinner.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ThreadPool.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/WorkSet.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Verbosity.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/VectorClock.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/VerificationError.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/View.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

libgenmc.a: $(libgenmc_a_OBJECTS) $(libgenmc_a_DEPENDENCIES) $(EXTRA_libgenmc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgenmc.a
	$(AM_V_AR)$(libgenmc_a_AR) libgenmc.a $(libgenmc_a_OBJECTS) $(libgenmc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgenmc.a
src/main.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

genmc$(EXEEXT): $(genmc_OBJECTS) $(genmc_DEPENDENCIES) $(EXTRA_genmc_DEPENDENCIES) 
	@rm -f genmc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(genmc_OBJECTS) $(genmc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include src/$(DEPDIR)/ASize.Po # am--include-marker
include src/$(DEPDIR)/AccessFilter.Po # am--include-marker
include src/$(DEPDIR)/BisimilarityCheckerPass.Po # am--include-marker
include src/$(DEPDIR)/BoundDecider.Po # am--include-marker
include src/$(DEPDIR)/CallInfoCollectionPass.Po # am--include-marker
include src/$(DEPDIR)/CodeCondenserPass.Po # am--include-marker
include src/$(DEPDIR)/Config.Po # am--include-marker
include src/$(DEPDIR)/ConfirmationAnnotationPass.Po # am--include-marker
include src/$(DEPDIR)/ContextBoundDecider.Po # am--include-marker
include src/$(DEPDIR)/DeclareInternalsPass.Po # am--include-marker
include src/$(DEPDIR)/DefineLibcFunsPass.Po # am--include-marker
include src/$(DEPDIR)/DepExecutionGraph.Po # am--include-marker
include src/$(DEPDIR)/DepInfo.Po # am--include-marker
include src/$(DEPDIR)/DepView.Po # am--include-marker
include src/$(DEPDIR)/EliminateAnnotationsPass.Po # am--include-marker
include src/$(DEPDIR)/EliminateCASPHIsPass.Po # am--include-marker
include src/$(DEPDIR)/EliminateCastsPass.Po # am--include-marker
include src/$(DEPDIR)/EliminateRedundantInstPass.Po # am--include-marker
include src/$(DEPDIR)/EliminateUnusedCodePass.Po # am--include-marker
include src/$(DEPDIR)/EscapeCheckerPass.Po # am--include-marker
include src/$(DEPDIR)/Event.Po # am--include-marker
include src/$(DEPDIR)/EventLabel.Po # am--include-marker
include src/$(DEPDIR)/Execution.Po # am--include-marker
include src/$(DEPDIR)/ExecutionGraph.Po # am--include-marker
include src/$(DEPDIR)/ExternalFunctions.Po # am--include-marker
include src/$(DEPDIR)/FunctionInlinerPass.Po # am--include-marker
include src/$(DEPDIR)/GenMCDriver.Po # am--include-marker
include src/$(DEPDIR)/InstAnnotator.Po # am--include-marker
include src/$(DEPDIR)/Interpreter.Po # am--include-marker
include src/$(DEPDIR)/InterpreterEnumAPI.Po # am--include-marker
include src/$(DEPDIR)/IntrinsicLoweringPass.Po # am--include-marker
include src/$(DEPDIR)/LLVMModule.Po # am--include-marker
include src/$(DEPDIR)/LLVMUtils.Po # am--include-marker
include src/$(DEPDIR)/LoadAnnotationPass.Po # am--include-marker
include src/$(DEPDIR)/LocalSimplifyCFGPass.Po # am--include-marker
include src/$(DEPDIR)/LoopJumpThreadingPass.Po # am--include-marker
include src/$(DEPDIR)/LoopUnrollPass.Po # am--include-marker
include src/$(DEPDIR)/MDataCollectionPass.Po # am--include-marker
include src/$(DEPDIR)/MMDetectorPass.Po # am--include-marker
include src/$(DEPDIR)/MemAccess.Po # am--include-marker
include src/$(DEPDIR)/ModuleInfo.Po # am--include-marker
include src/$(DEPDIR)/NameInfo.Po # am--include-marker
include src/$(DEPDIR)/Parser.Po # am--include-marker
include src/$(DEPDIR)/PromoteMemIntrinsicPass.Po # am--include-marker
include src/$(DEPDIR)/PropagateAssumesPass.Po # am--include-marker
include src/$(DEPDIR)/RADriver.Po # am--include-marker
include src/$(DEPDIR)/Revisit.Po # am--include-marker
include src/$(DEPDIR)/RoundBoundDecider.Po # am--include-marker
include src/$(DEPDIR)/SAddr.Po # am--include-marker
include src/$(DEPDIR)/SVal.Po # am--include-marker
include src/$(DEPDIR)/SpinAssumePass.Po # am--include-marker
include src/$(DEPDIR)/Stamp.Po # am--include-marker
include src/$(DEPDIR)/ThreadPinner.Po # am--include-marker
include src/$(DEPDIR)/ThreadPool.Po # am--include-marker
include src/$(DEPDIR)/VectorClock.Po # am--include-marker
include src/$(DEPDIR)/Verbosity.Po # am--include-marker
include src/$(DEPDIR)/VerificationError.Po # am--include-marker
include src/$(DEPDIR)/View.Po # am--include-marker
include src/$(DEPDIR)/WorkSet.Po # am--include-marker
include src/$(DEPDIR)/main.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-nobase_genmcHEADERS: $(nobase_genmc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_genmc_HEADERS)'; test -n "$(genmcdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(genmcdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(genmcdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(genmcdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(genmcdir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(genmcdir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(genmcdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_genmcHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_genmc_HEADERS)'; test -n "$(genmcdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(genmcdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
scripts/fast-driver.sh.log: scripts/fast-driver.sh
	@p='scripts/fast-driver.sh'; \
	b='scripts/fast-driver.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scripts/randomize-driver.sh.log: scripts/randomize-driver.sh
	@p='scripts/randomize-driver.sh'; \
	b='scripts/randomize-driver.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(genmcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f src/$(DEPDIR)/ASize.Po
	-rm -f src/$(DEPDIR)/AccessFilter.Po
	-rm -f src/$(DEPDIR)/BisimilarityCheckerPass.Po
	-rm -f src/$(DEPDIR)/BoundDecider.Po
	-rm -f src/$(DEPDIR)/CallInfoCollectionPass.Po
	-rm -f src/$(DEPDIR)/CodeCondenserPass.Po
	-rm -f src/$(DEPDIR)/Config.Po
	-rm -f src/$(DEPDIR)/ConfirmationAnnotationPass.Po
	-rm -f src/$(DEPDIR)/ContextBoundDecider.Po
	-rm -f src/$(DEPDIR)/DeclareInternalsPass.Po
	-rm -f src/$(DEPDIR)/DefineLibcFunsPass.Po
	-rm -f src/$(DEPDIR)/DepExecutionGraph.Po
	-rm -f src/$(DEPDIR)/DepInfo.Po
	-rm -f src/$(DEPDIR)/DepView.Po
	-rm -f src/$(DEPDIR)/EliminateAnnotationsPass.Po
	-rm -f src/$(DEPDIR)/EliminateCASPHIsPass.Po
	-rm -f src/$(DEPDIR)/EliminateCastsPass.Po
	-rm -f src/$(DEPDIR)/EliminateRedundantInstPass.Po
	-rm -f src/$(DEPDIR)/EliminateUnusedCodePass.Po
	-rm -f src/$(DEPDIR)/EscapeCheckerPass.Po
	-rm -f src/$(DEPDIR)/Event.Po
	-rm -f src/$(DEPDIR)/EventLabel.Po
	-rm -f src/$(DEPDIR)/Execution.Po
	-rm -f src/$(DEPDIR)/ExecutionGraph.Po
	-rm -f src/$(DEPDIR)/ExternalFunctions.Po
	-rm -f src/$(DEPDIR)/FunctionInlinerPass.Po
	-rm -f src/$(DEPDIR)/GenMCDriver.Po
	-rm -f src/$(DEPDIR)/InstAnnotator.Po
	-rm -f src/$(DEPDIR)/Interpreter.Po
	-rm -f src/$(DEPDIR)/InterpreterEnumAPI.Po
	-rm -f src/$(DEPDIR)/IntrinsicLoweringPass.Po
	-rm -f src/$(DEPDIR)/LLVMModule.Po
	-rm -f src/$(DEPDIR)/LLVMUtils.Po
	-rm -f src/$(DEPDIR)/LoadAnnotationPass.Po
	-rm -f src/$(DEPDIR)/LocalSimplifyCFGPass.Po
	-rm -f src/$(DEPDIR)/LoopJumpThreadingPass.Po
	-rm -f src/$(DEPDIR)/LoopUnrollPass.Po
	-rm -f src/$(DEPDIR)/MDataCollectionPass.Po
	-rm -f src/$(DEPDIR)/MMDetectorPass.Po
	-rm -f src/$(DEPDIR)/MemAccess.Po
	-rm -f src/$(DEPDIR)/ModuleInfo.Po
	-rm -f src/$(DEPDIR)/NameInfo.Po
	-rm -f src/$(DEPDIR)/Parser.Po
	-rm -f src/$(DEPDIR)/PromoteMemIntrinsicPass.Po
	-rm -f src/$(DEPDIR)/PropagateAssumesPass.Po
	-rm -f src/$(DEPDIR)/RADriver.Po
	-rm -f src/$(DEPDIR)/Revisit.Po
	-rm -f src/$(DEPDIR)/RoundBoundDecider.Po
	-rm -f src/$(DEPDIR)/SAddr.Po
	-rm -f src/$(DEPDIR)/SVal.Po
	-rm -f src/$(DEPDIR)/SpinAssumePass.Po
	-rm -f src/$(DEPDIR)/Stamp.Po
	-rm -f src/$(DEPDIR)/ThreadPinner.Po
	-rm -f src/$(DEPDIR)/ThreadPool.Po
	-rm -f src/$(DEPDIR)/VectorClock.Po
	-rm -f src/$(DEPDIR)/Verbosity.Po
	-rm -f src/$(DEPDIR)/VerificationError.Po
	-rm -f src/$(DEPDIR)/View.Po
	-rm -f src/$(DEPDIR)/WorkSet.Po
	-rm -f src/$(DEPDIR)/main.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_genmcHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f src/$(DEPDIR)/ASize.Po
	-rm -f src/$(DEPDIR)/AccessFilter.Po
	-rm -f src/$(DEPDIR)/BisimilarityCheckerPass.Po
	-rm -f src/$(DEPDIR)/BoundDecider.Po
	-rm -f src/$(DEPDIR)/CallInfoCollectionPass.Po
	-rm -f src/$(DEPDIR)/CodeCondenserPass.Po
	-rm -f src/$(DEPDIR)/Config.Po
	-rm -f src/$(DEPDIR)/ConfirmationAnnotationPass.Po
	-rm -f src/$(DEPDIR)/ContextBoundDecider.Po
	-rm -f src/$(DEPDIR)/DeclareInternalsPass.Po
	-rm -f src/$(DEPDIR)/DefineLibcFunsPass.Po
	-rm -f src/$(DEPDIR)/DepExecutionGraph.Po
	-rm -f src/$(DEPDIR)/DepInfo.Po
	-rm -f src/$(DEPDIR)/DepView.Po
	-rm -f src/$(DEPDIR)/EliminateAnnotationsPass.Po
	-rm -f src/$(DEPDIR)/EliminateCASPHIsPass.Po
	-rm -f src/$(DEPDIR)/EliminateCastsPass.Po
	-rm -f src/$(DEPDIR)/EliminateRedundantInstPass.Po
	-rm -f src/$(DEPDIR)/EliminateUnusedCodePass.Po
	-rm -f src/$(DEPDIR)/EscapeCheckerPass.Po
	-rm -f src/$(DEPDIR)/Event.Po
	-rm -f src/$(DEPDIR)/EventLabel.Po
	-rm -f src/$(DEPDIR)/Execution.Po
	-rm -f src/$(DEPDIR)/ExecutionGraph.Po
	-rm -f src/$(DEPDIR)/ExternalFunctions.Po
	-rm -f src/$(DEPDIR)/FunctionInlinerPass.Po
	-rm -f src/$(DEPDIR)/GenMCDriver.Po
	-rm -f src/$(DEPDIR)/InstAnnotator.Po
	-rm -f src/$(DEPDIR)/Interpreter.Po
	-rm -f src/$(DEPDIR)/InterpreterEnumAPI.Po
	-rm -f src/$(DEPDIR)/IntrinsicLoweringPass.Po
	-rm -f src/$(DEPDIR)/LLVMModule.Po
	-rm -f src/$(DEPDIR)/LLVMUtils.Po
	-rm -f src/$(DEPDIR)/LoadAnnotationPass.Po
	-rm -f src/$(DEPDIR)/LocalSimplifyCFGPass.Po
	-rm -f src/$(DEPDIR)/LoopJumpThreadingPass.Po
	-rm -f src/$(DEPDIR)/LoopUnrollPass.Po
	-rm -f src/$(DEPDIR)/MDataCollectionPass.Po
	-rm -f src/$(DEPDIR)/MMDetectorPass.Po
	-rm -f src/$(DEPDIR)/MemAccess.Po
	-rm -f src/$(DEPDIR)/ModuleInfo.Po
	-rm -f src/$(DEPDIR)/NameInfo.Po
	-rm -f src/$(DEPDIR)/Parser.Po
	-rm -f src/$(DEPDIR)/PromoteMemIntrinsicPass.Po
	-rm -f src/$(DEPDIR)/PropagateAssumesPass.Po
	-rm -f src/$(DEPDIR)/RADriver.Po
	-rm -f src/$(DEPDIR)/Revisit.Po
	-rm -f src/$(DEPDIR)/RoundBoundDecider.Po
	-rm -f src/$(DEPDIR)/SAddr.Po
	-rm -f src/$(DEPDIR)/SVal.Po
	-rm -f src/$(DEPDIR)/SpinAssumePass.Po
	-rm -f src/$(DEPDIR)/Stamp.Po
	-rm -f src/$(DEPDIR)/ThreadPinner.Po
	-rm -f src/$(DEPDIR)/ThreadPool.Po
	-rm -f src/$(DEPDIR)/VectorClock.Po
	-rm -f src/$(DEPDIR)/Verbosity.Po
	-rm -f src/$(DEPDIR)/VerificationError.Po
	-rm -f src/$(DEPDIR)/View.Po
	-rm -f src/$(DEPDIR)/WorkSet.Po
	-rm -f src/$(DEPDIR)/main.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-nobase_genmcHEADERS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-local clean-noinstLIBRARIES \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	dist-zstd distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_genmcHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-nobase_genmcHEADERS

.PRECIOUS: Makefile


#.PHONY: clean-gcda
#clean-gcda:
#	@echo Removing old coverage results
#	-find -name '*.gcda' -print | xargs -r rm

#.PHONY: coverage-html generate-coverage-html clean-coverage-html
#coverage-html: clean-gcda
#	-$(MAKE) $(AM_MAKEFLAGS) -k check
#	$(MAKE) $(AM_MAKEFLAGS) generate-coverage-html

#generate-coverage-html:
#	@echo Collecting coverage data
#	$(LCOV) --directory $(top_builddir) --capture --output-file coverage.info --no-checksum --compat-libtool
#	$(LCOV) -r coverage.info "/usr*" -o coverage.info
#	LANG=C $(GENHTML) --prefix $(top_builddir) --output-directory coveragereport --title "Code Coverage" --legend --show-details coverage.info

#clean-coverage-html: clean-gcda
#	-$(LCOV) --directory $(top_builddir) -z
#	-rm -rf coverage.info coveragereport

#clean-local: clean-coverage-html



#lint-local: $(libgenmc_a_SOURCES) $(genmc_SOURCES)
#	-$(CPPLINT) -header-filter='^(?!llvm/).+' -config-file='$(top_srcdir)/.clang-tidy' $^

#check-local: lint-local

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
