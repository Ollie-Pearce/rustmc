clang-18: warning: argument unused during compilation: '-I /home/ollie/Desktop/mixer/genmc-tool/include' [-Wunused-command-line-argument]
clang-18: warning: argument unused during compilation: '-I /usr/local/include/genmc//include' [-Wunused-command-line-argument]

 Variable name: count
 Variable dump: <0x56811a46a1c8> = !DILocalVariable(name: "count", arg: 3, scope: <0x56811a69dd80>, file: <0x56811a2272d0>, line: 3218, type: <0x56811b8651d8>)
WARNING: Cannot promote non-constant-length mem intrinsic! Skipping...
Tip: The execution graph seems quite large. Consider bounding all loops or using -unroll
<-1, 0> test_dropping_struct:
	(0, 1): MALLOC location.dbg.spill.i13
	(0, 2): Wna (location.dbg.spill.i13[0], 0x0)
	(0, 3): MALLOC 
	(0, 4): Wna (, 0x0)
	(0, 5): MALLOC args.dbg.spill.i14
	(0, 6): Wna (args.dbg.spill.i14[0], 0x0)
	(0, 7): MALLOC self.dbg.spill3.i15
	(0, 8): Wna (self.dbg.spill3.i15[0], 0x0)
	(0, 9): MALLOC f.dbg.spill2.i16
	(0, 10): Wna (f.dbg.spill2.i16[0], 0x0)
	(0, 11): MALLOC x.dbg.spill1.i17
	(0, 12): Wna (x.dbg.spill1.i17[0], 0x0)
	(0, 13): MALLOC self.dbg.spill.i18
	(0, 14): Wna (self.dbg.spill.i18[0], 0x0)
	(0, 15): MALLOC f.dbg.spill.i19
	(0, 16): Wna (f.dbg.spill.i19[0], 0x0)
	(0, 17): MALLOC x.dbg.spill.i20
	(0, 18): Wna (x.dbg.spill.i20[0], 0x0)
	(0, 19): MALLOC pi.i21
	(0, 20): Wna (pi.i21[0], 0x0)
	(0, 21): Wna (pi.i21[8], 0x0)
	(0, 22): Wna (pi.i21[16], 0x0)
	(0, 23): Wna (pi.i21[24], 0x0)
	(0, 24): Wna (pi.i21[32], 0x0)
	(0, 25): Wna (pi.i21[40], 0x0)
	(0, 26): Wna (pi.i21[48], 0x0)
	(0, 27): Wna (pi.i21[56], 0x0)
	(0, 28): MALLOC _19.i22
	(0, 29): Wna (, 0x0)
	(0, 30): Wna (, 0x0)
	(0, 31): MALLOC _12.i23
	(0, 32): Wna (, 0x0)
	(0, 33): Wna (, 0x0)
	(0, 34): MALLOC _6.i24
	(0, 35): Wna (, 0x0)
	(0, 36): Wna (, 0x0)
	(0, 37): Wna (, 0x0)
	(0, 38): Wna (, 0x0)
	(0, 39): MALLOC fmt.i25
	(0, 40): Wna (fmt.i25[0], 0x0)
	(0, 41): Wna (fmt.i25[8], 0x0)
	(0, 42): Wna (fmt.i25[16], 0x0)
	(0, 43): Wna (fmt.i25[24], 0x0)
	(0, 44): Wna (fmt.i25[32], 0x0)
	(0, 45): Wna (fmt.i25[40], 0x0)
	(0, 46): MALLOC error.i26
	(0, 47): Wna (error.i26[0], 0x0)
	(0, 48): Wna (error.i26[8], 0x0)
	(0, 49): MALLOC msg.i27
	(0, 50): Wna (msg.i27[0], 0x0)
	(0, 51): Wna (msg.i27[8], 0x0)
	(0, 52): MALLOC force_no_backtrace.dbg.spill.i28
	(0, 53): MALLOC can_unwind.dbg.spill.i29
	(0, 54): MALLOC pieces.dbg.spill.i30
	(0, 55): Wna (pieces.dbg.spill.i30[0], 0x0)
	(0, 56): MALLOC location.dbg.spill.i
	(0, 57): Wna (location.dbg.spill.i[0], 0x0)
	(0, 58): MALLOC 
	(0, 59): Wna (, 0x0)
	(0, 60): MALLOC args.dbg.spill.i
	(0, 61): Wna (args.dbg.spill.i[0], 0x0)
	(0, 62): MALLOC self.dbg.spill3.i
	(0, 63): Wna (self.dbg.spill3.i[0], 0x0)
	(0, 64): MALLOC f.dbg.spill2.i
	(0, 65): Wna (f.dbg.spill2.i[0], 0x0)
	(0, 66): MALLOC x.dbg.spill1.i
	(0, 67): Wna (x.dbg.spill1.i[0], 0x0)
	(0, 68): MALLOC self.dbg.spill.i
	(0, 69): Wna (self.dbg.spill.i[0], 0x0)
	(0, 70): MALLOC f.dbg.spill.i
	(0, 71): Wna (f.dbg.spill.i[0], 0x0)
	(0, 72): MALLOC x.dbg.spill.i
	(0, 73): Wna (x.dbg.spill.i[0], 0x0)
	(0, 74): MALLOC pi.i
	(0, 75): Wna (pi.i[0], 0x0)
	(0, 76): Wna (pi.i[8], 0x0)
	(0, 77): Wna (pi.i[16], 0x0)
	(0, 78): Wna (pi.i[24], 0x0)
	(0, 79): Wna (pi.i[32], 0x0)
	(0, 80): Wna (pi.i[40], 0x0)
	(0, 81): Wna (pi.i[48], 0x0)
	(0, 82): Wna (pi.i[56], 0x0)
	(0, 83): MALLOC _19.i
	(0, 84): Wna (, 0x0)
	(0, 85): Wna (, 0x0)
	(0, 86): MALLOC _12.i
	(0, 87): Wna (, 0x0)
	(0, 88): Wna (, 0x0)
	(0, 89): MALLOC _6.i
	(0, 90): Wna (, 0x0)
	(0, 91): Wna (, 0x0)
	(0, 92): Wna (, 0x0)
	(0, 93): Wna (, 0x0)
	(0, 94): MALLOC fmt.i
	(0, 95): Wna (fmt.i[0], 0x0)
	(0, 96): Wna (fmt.i[8], 0x0)
	(0, 97): Wna (fmt.i[16], 0x0)
	(0, 98): Wna (fmt.i[24], 0x0)
	(0, 99): Wna (fmt.i[32], 0x0)
	(0, 100): Wna (fmt.i[40], 0x0)
	(0, 101): MALLOC error.i
	(0, 102): Wna (error.i[0], 0x0)
	(0, 103): Wna (error.i[8], 0x0)
	(0, 104): MALLOC msg.i
	(0, 105): Wna (msg.i[0], 0x0)
	(0, 106): Wna (msg.i[8], 0x0)
	(0, 107): MALLOC force_no_backtrace.dbg.spill.i
	(0, 108): MALLOC can_unwind.dbg.spill.i
	(0, 109): MALLOC pieces.dbg.spill.i
	(0, 110): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 111): MALLOC 
	(0, 112): Wna (, 0x0)
	(0, 113): Wna (, 0x0)
	(0, 114): MALLOC t.dbg.spill.i1
	(0, 115): Wna (t.dbg.spill.i1[0], 0x0)
	(0, 116): Wna (t.dbg.spill.i1[8], 0x0)
	(0, 117): MALLOC e.i2
	(0, 118): Wna (e.i2[0], 0x0)
	(0, 119): Wna (e.i2[8], 0x0)
	(0, 120): MALLOC 
	(0, 121): Wna (, 0x0)
	(0, 122): Wna (, 0x0)
	(0, 123): MALLOC t.dbg.spill.i
	(0, 124): Wna (t.dbg.spill.i[0], 0x0)
	(0, 125): Wna (t.dbg.spill.i[8], 0x0)
	(0, 126): MALLOC e.i
	(0, 127): Wna (e.i[0], 0x0)
	(0, 128): Wna (e.i[8], 0x0)
	(0, 129): MALLOC right_val.dbg.spill8
	(0, 130): Wna (right_val.dbg.spill8[0], 0x0)
	(0, 131): MALLOC left_val.dbg.spill7
	(0, 132): Wna (left_val.dbg.spill7[0], 0x0)
	(0, 133): MALLOC wrapper.dbg.spill
	(0, 134): Wna (wrapper.dbg.spill[0], 0x0)
	(0, 135): MALLOC dropping_struct.dbg.spill5
	(0, 136): Wna (dropping_struct.dbg.spill5[0], 0x0)
	(0, 137): MALLOC right_val.dbg.spill
	(0, 138): Wna (right_val.dbg.spill[0], 0x0)
	(0, 139): MALLOC left_val.dbg.spill
	(0, 140): Wna (left_val.dbg.spill[0], 0x0)
	(0, 141): MALLOC dropping_struct.dbg.spill
	(0, 142): Wna (dropping_struct.dbg.spill[0], 0x0)
	(0, 143): MALLOC 
	(0, 144): Wna (, 0x0)
	(0, 145): Wna (, 0x0)
	(0, 146): MALLOC _68
	(0, 147): Wna (, 0x0)
	(0, 148): Wna (, 0x0)
	(0, 149): Wna (, 0x0)
	(0, 150): Wna (, 0x0)
	(0, 151): Wna (, 0x0)
	(0, 152): Wna (, 0x0)
	(0, 153): MALLOC kind2
	(0, 154): MALLOC _49
	(0, 155): Wna (_49[0], 0x0)
	(0, 156): Wna (_49[8], 0x0)
	(0, 157): Wna (_49[16], 0x0)
	(0, 158): MALLOC _48
	(0, 159): Wna (, 0x0)
	(0, 160): Wna (, 0x0)
	(0, 161): MALLOC _35
	(0, 162): MALLOC drop_flag1
	(0, 163): Wna (drop_flag1[0], 0x0)
	(0, 164): MALLOC _33
	(0, 165): Wna (, 0x0)
	(0, 166): Wna (, 0x0)
	(0, 167): Wna (, 0x0)
	(0, 168): Wna (, 0x0)
	(0, 169): Wna (, 0x0)
	(0, 170): Wna (, 0x0)
	(0, 171): MALLOC kind
	(0, 172): MALLOC _14
	(0, 173): Wna (_14[0], 0x0)
	(0, 174): Wna (_14[8], 0x0)
	(0, 175): Wna (_14[16], 0x0)
	(0, 176): MALLOC _13
	(0, 177): Wna (, 0x0)
	(0, 178): Wna (, 0x0)
	(0, 179): MALLOC _2
	(0, 180): MALLOC drop_flag
	(0, 181): Wna (drop_flag[0], 0x0)
	(0, 182): MALLOC t.dbg.spill
	(0, 183): MALLOC _6
	(0, 184): MALLOC _5
	(0, 185): MALLOC _2
	(0, 186): Wna (, 0x0)
	(0, 187): MALLOC value.dbg.spill4
	(0, 188): MALLOC v.dbg.spill3
	(0, 189): MALLOC value.dbg.spill2
	(0, 190): MALLOC v.dbg.spill1
	(0, 191): MALLOC value.dbg.spill
	(0, 192): MALLOC v.dbg.spill
	(0, 193): Wna (v.dbg.spill[0], 0)
	(0, 194): Wna (value.dbg.spill[0], 0)
	(0, 195): Wna (v.dbg.spill1[0], 0)
	(0, 196): Wna (value.dbg.spill2[0], 0)
	(0, 197): Wna (v.dbg.spill3[0], 0)
	(0, 198): Wna (value.dbg.spill4[0], 0)
	(0, 199): Wna (t.dbg.spill[0], 0)
	(0, 200): Wna (, 0)
	(0, 201): Rna (, 0) [(0, 200)]
	(0, 202): Wna (, 0)
	(0, 203): Rna (, 0) [(0, 200)]
	(0, 204): Wna (, 0)
	(0, 205): Wna (, 0)
	(0, 206): Rna (, 0) [(0, 204)(0, 202)]
	(0, 207): Wna (, 0)
	(0, 208): Rna (, 0) [(0, 205)]
	(0, 209): Wna (, 0)
	(0, 210): Wna (, 0)
	(0, 211): FREE
	(0, 212): FREE
	(0, 213): FREE
	(0, 214): FREE
	(0, 215): FREE
	(0, 216): FREE
	(0, 217): FREE
	(0, 218): FREE
	(0, 219): FREE
	(0, 220): FREE
	(0, 221): MALLOC 
	(0, 222): Wna (, 0x0)
	(0, 223): Wna (, 0x0)
	(0, 224): MALLOC ptr.dbg.spill5
	(0, 225): Wna (ptr.dbg.spill5[0], 0x0)
	(0, 226): MALLOC src.dbg.spill
	(0, 227): Wna (src.dbg.spill[0], 0x0)
	(0, 228): MALLOC self.dbg.spill4
	(0, 229): Wna (self.dbg.spill4[0], 0x0)
	(0, 230): MALLOC ptr.dbg.spill
	(0, 231): Wna (ptr.dbg.spill[0], 0x0)
	(0, 232): MALLOC self.dbg.spill
	(0, 233): Wna (self.dbg.spill[0], 0x0)
	(0, 234): MALLOC x.dbg.spill
	(0, 235): Wna (x.dbg.spill[0], 0x0)
	(0, 236): MALLOC b
	(0, 237): Wna (b[0], 0x0)
	(0, 238): MALLOC _4
	(0, 239): Wna (, 0x0)
	(0, 240): MALLOC _3
	(0, 241): Wna (_3[0], 0x0)
	(0, 242): Wna (_3[8], 0x0)
	(0, 243): Wna (_3[16], 0x0)
	(0, 244): Wna (_3[24], 0x0)
	(0, 245): MALLOC value.dbg.spill2
	(0, 246): Wna (value.dbg.spill2[0], 0x0)
	(0, 247): MALLOC v.dbg.spill1
	(0, 248): Wna (v.dbg.spill1[0], 0x0)
	(0, 249): MALLOC value.dbg.spill
	(0, 250): Wna (value.dbg.spill[0], 0x0)
	(0, 251): MALLOC v.dbg.spill
	(0, 252): Wna (v.dbg.spill[0], 0x0)
	(0, 253): Wna (v.dbg.spill[0], 1)
	(0, 254): Wna (value.dbg.spill[0], 1)
	(0, 255): Wna (v.dbg.spill1[0], 1)
	(0, 256): Wna (value.dbg.spill2[0], 1)
	(0, 257): Wna (, 1)
	(0, 258): Rna (, 1) [(0, 257)]
	(0, 259): Wna (_3[0], 1)
	(0, 260): Rna (, 1) [(0, 257)]
	(0, 261): Wna (_3[8], 1)
	(0, 262): Rna (, 0) [(0, 207)]
	(0, 263): Wna (_3[16], 0)
	(0, 264): Rna (, 0) [(0, 207)]
	(0, 265): Wna (_3[20], 0)
	(0, 266): Rna (, 0) [(0, 209)]
	(0, 267): Wna (_3[24], 0)
	(0, 268): Rna (, 0) [(0, 210)]
	(0, 269): Wna (_3[25], 0)
	(0, 270): MALLOC self.dbg.spill4
	(0, 271): Wna (self.dbg.spill4[0], 0x0)
	(0, 272): MALLOC self.dbg.spill3
	(0, 273): Wna (self.dbg.spill3[0], 0x0)
	(0, 274): MALLOC self.dbg.spill2
	(0, 275): Wna (self.dbg.spill2[0], 0x0)
	(0, 276): MALLOC ptr.dbg.spill
	(0, 277): Wna (ptr.dbg.spill[0], 0x0)
	(0, 278): Wna (ptr.dbg.spill[8], 0x0)
	(0, 279): MALLOC layout.dbg.spill
	(0, 280): Wna (layout.dbg.spill[0], 0x0)
	(0, 281): Wna (layout.dbg.spill[8], 0x0)
	(0, 282): MALLOC self.dbg.spill1
	(0, 283): Wna (self.dbg.spill1[0], 0x0)
	(0, 284): MALLOC align.dbg.spill
	(0, 285): Wna (align.dbg.spill[0], 0x0)
	(0, 286): MALLOC size.dbg.spill
	(0, 287): Wna (size.dbg.spill[0], 0x0)
	(0, 288): MALLOC _13
	(0, 289): Wna (, 0x0)
	(0, 290): MALLOC layout
	(0, 291): Wna (layout[0], 0x0)
	(0, 292): Wna (layout[8], 0x0)
	(0, 293): MALLOC _4
	(0, 294): Wna (, 0x0)
	(0, 295): Wna (, 0x0)
	(0, 296): MALLOC self.dbg.spill
	(0, 297): Wna (self.dbg.spill[0], 0x0)
	(0, 298): Wna (self.dbg.spill[0], 0x1)
	(0, 299): Wna (size.dbg.spill[0], 32)
	(0, 300): Wna (align.dbg.spill[0], 8)
	(0, 301): Wna (self.dbg.spill1[0], 8)
	(0, 302): Wna (layout.dbg.spill[0], 8)
	(0, 303): Wna (layout.dbg.spill[8], 32)
	(0, 304): MALLOC ptr.dbg.spill28
	(0, 305): Wna (ptr.dbg.spill28[0], 0x0)
	(0, 306): Wna (ptr.dbg.spill28[8], 0x0)
	(0, 307): MALLOC data.dbg.spill
	(0, 308): Wna (data.dbg.spill[0], 0x0)
	(0, 309): MALLOC ptr.dbg.spill27
	(0, 310): Wna (ptr.dbg.spill27[0], 0x0)
	(0, 311): MALLOC v.dbg.spill25
	(0, 312): Wna (v.dbg.spill25[0], 0x0)
	(0, 313): MALLOC v.dbg.spill
	(0, 314): Wna (v.dbg.spill[0], 0x0)
	(0, 315): MALLOC ptr.dbg.spill23
	(0, 316): Wna (ptr.dbg.spill23[0], 0x0)
	(0, 317): MALLOC self.dbg.spill21
	(0, 318): Wna (self.dbg.spill21[0], 0x0)
	(0, 319): MALLOC self.dbg.spill19
	(0, 320): Wna (self.dbg.spill19[0], 0x0)
	(0, 321): MALLOC self.dbg.spill18
	(0, 322): Wna (self.dbg.spill18[0], 0x0)
	(0, 323): MALLOC self.dbg.spill17
	(0, 324): Wna (self.dbg.spill17[0], 0x0)
	(0, 325): MALLOC self.dbg.spill15
	(0, 326): Wna (self.dbg.spill15[0], 0x0)
	(0, 327): MALLOC self.dbg.spill14
	(0, 328): Wna (self.dbg.spill14[0], 0x0)
	(0, 329): MALLOC ptr.dbg.spill
	(0, 330): Wna (ptr.dbg.spill[0], 0x0)
	(0, 331): MALLOC addr.dbg.spill
	(0, 332): Wna (addr.dbg.spill[0], 0x0)
	(0, 333): MALLOC self.dbg.spill12
	(0, 334): Wna (self.dbg.spill12[0], 0x0)
	(0, 335): MALLOC self.dbg.spill10
	(0, 336): Wna (self.dbg.spill10[0], 0x0)
	(0, 337): MALLOC size.dbg.spill
	(0, 338): Wna (size.dbg.spill[0], 0x0)
	(0, 339): MALLOC self.dbg.spill9
	(0, 340): Wna (self.dbg.spill9[0], 0x0)
	(0, 341): MALLOC zeroed.dbg.spill
	(0, 342): MALLOC self.dbg.spill
	(0, 343): Wna (self.dbg.spill[0], 0x0)
	(0, 344): MALLOC _48
	(0, 345): Wna (, 0x0)
	(0, 346): MALLOC _39
	(0, 347): Wna (, 0x0)
	(0, 348): MALLOC data8
	(0, 349): Wna (data8[0], 0x0)
	(0, 350): MALLOC ptr
	(0, 351): Wna (ptr[0], 0x0)
	(0, 352): Wna (ptr[8], 0x0)
	(0, 353): MALLOC _29
	(0, 354): Wna (_29[0], 0x0)
	(0, 355): MALLOC _21
	(0, 356): Wna (, 0x0)
	(0, 357): MALLOC self7
	(0, 358): Wna (self7[0], 0x0)
	(0, 359): MALLOC self6
	(0, 360): Wna (self6[0], 0x0)
	(0, 361): MALLOC _12
	(0, 362): Wna (, 0x0)
	(0, 363): MALLOC layout5
	(0, 364): Wna (layout5[0], 0x0)
	(0, 365): Wna (layout5[8], 0x0)
	(0, 366): MALLOC layout4
	(0, 367): Wna (layout4[0], 0x0)
	(0, 368): Wna (layout4[8], 0x0)
	(0, 369): MALLOC raw_ptr
	(0, 370): Wna (raw_ptr[0], 0x0)
	(0, 371): MALLOC _0
	(0, 372): Wna (, 0x0)
	(0, 373): Wna (, 0x0)
	(0, 374): MALLOC layout
	(0, 375): Wna (layout[0], 0x0)
	(0, 376): Wna (layout[8], 0x0)
	(0, 377): MALLOC metadata.dbg.spill
	(0, 378): Wna (metadata.dbg.spill[0], 0x0)
	(0, 379): MALLOC len.dbg.spill1
	(0, 380): Wna (len.dbg.spill1[0], 0x0)
	(0, 381): MALLOC len.dbg.spill
	(0, 382): Wna (len.dbg.spill[0], 0x0)
	(0, 383): Wna (len.dbg.spill[0], 0)
	(0, 384): Wna (len.dbg.spill1[0], 0)
	(0, 385): Wna (metadata.dbg.spill[0], 0)
	(0, 386): Wna (layout[0], 8)
	(0, 387): Wna (layout[8], 32)
	(0, 388): Wna (self.dbg.spill[0], 0x1)
	(0, 389): Wna (zeroed.dbg.spill[0], 0)
	(0, 390): Wna (self.dbg.spill9[0], 0x4000000000000958)
	(0, 391): Rna (layout[8], 32) [(0, 387)]
	(0, 392): Wna (size.dbg.spill[0], 32)
	(0, 393): Rna (layout[0], 8) [(0, 386)]
	(0, 394): Rna (layout[8], 32) [(0, 387)]
	(0, 395): Wna (layout5[0], 8)
	(0, 396): Wna (layout5[8], 32)
	(0, 397): Wna (self.dbg.spill14[0], 0x4000000000000908)
	(0, 398): Wna (self.dbg.spill15[0], 0x4000000000000908)
	(0, 399): Rna (layout[0], 8) [(0, 386)]
	(0, 400): Wna (self.dbg.spill17[0], 8)
	(0, 401): Wna (, 8)
	(0, 402): Rna (, 8) [(0, 401)]
	(0, 403): MALLOC 
	(0, 404): Wna (raw_ptr[0], 0x10)
	(0, 405): Rna (raw_ptr[0], 0x10) [(0, 404)]
	(0, 406): Wna (ptr.dbg.spill23[0], 0x10)
	(0, 407): MALLOC ptr.dbg.spill1
	(0, 408): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 409): MALLOC ptr.dbg.spill
	(0, 410): Wna (ptr.dbg.spill[0], 0x0)
	(0, 411): Wna (ptr.dbg.spill[0], 0x10)
	(0, 412): Wna (ptr.dbg.spill1[0], 0x10)
	(0, 413): FREE
	(0, 414): FREE
	(0, 415): Wna (self7[0], 0x10)
	(0, 416): Rna (self7[0], 0x10) [(0, 415)]
	(0, 417): Wna (v.dbg.spill[0], 0x10)
	(0, 418): Wna (self6[0], 0x10)
	(0, 419): Rna (self6[0], 0x10) [(0, 418)]
	(0, 420): Wna (v.dbg.spill25[0], 0x10)
	(0, 421): Wna (, 0x10)
	(0, 422): Rna (, 0x10) [(0, 421)]
	(0, 423): Wna (ptr.dbg.spill27[0], 0x10)
	(0, 424): Wna (data.dbg.spill[0], 0x10)
	(0, 425): Wna (ptr.dbg.spill28[0], 0x10)
	(0, 426): Wna (ptr.dbg.spill28[8], 32)
	(0, 427): MALLOC ptr.dbg.spill1
	(0, 428): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 429): MALLOC ptr.dbg.spill
	(0, 430): Wna (ptr.dbg.spill[0], 0x0)
	(0, 431): Wna (ptr.dbg.spill[0], 0x10)
	(0, 432): Wna (ptr.dbg.spill1[0], 0x10)
	(0, 433): FREE
	(0, 434): FREE
	(0, 435): Wna (, 0x10)
	(0, 436): Wna (, 32)
	(0, 437): Rna (, 0x10) [(0, 435)]
	(0, 438): Rna (, 32) [(0, 436)]
	(0, 439): FREE
	(0, 440): FREE
	(0, 441): FREE
	(0, 442): FREE
	(0, 443): FREE
	(0, 444): FREE
	(0, 445): FREE
	(0, 446): FREE
	(0, 447): FREE
	(0, 448): FREE
	(0, 449): FREE
	(0, 450): FREE
	(0, 451): FREE
	(0, 452): FREE
	(0, 453): FREE
	(0, 454): FREE
	(0, 455): FREE
	(0, 456): FREE
	(0, 457): FREE
	(0, 458): FREE
	(0, 459): FREE
	(0, 460): FREE
	(0, 461): FREE
	(0, 462): FREE
	(0, 463): FREE
	(0, 464): FREE
	(0, 465): FREE
	(0, 466): FREE
	(0, 467): FREE
	(0, 468): FREE
	(0, 469): FREE
	(0, 470): FREE
	(0, 471): FREE
	(0, 472): FREE
	(0, 473): FREE
	(0, 474): FREE
	(0, 475): FREE
	(0, 476): Wna (, 0x10)
	(0, 477): Wna (, 32)
	(0, 478): Rna (, 0x10) [(0, 476)]
	(0, 479): Rna (, 0x10) [(0, 476)]
	(0, 480): Rna (, 32) [(0, 477)]
	(0, 481): Wna (ptr.dbg.spill[0], 0x10)
	(0, 482): Wna (ptr.dbg.spill[8], 32)
	(0, 483): Wna (self.dbg.spill2[0], 0x10)
	(0, 484): FREE
	(0, 485): FREE
	(0, 486): FREE
	(0, 487): FREE
	(0, 488): FREE
	(0, 489): FREE
	(0, 490): FREE
	(0, 491): FREE
	(0, 492): FREE
	(0, 493): FREE
	(0, 494): FREE
	(0, 495): FREE
	(0, 496): Rna (_3[0], 1) [(0, 259)]
	(0, 497): Wna (, 1)
	(0, 498): Rna (_3[8], 1) [(0, 261)]
	(0, 499): Wna (, 1)
	(0, 500): Rna (_3[16], 0) [(0, 263)]
	(0, 501): Wna (, 0)
	(0, 502): Rna (_3[20], 0) [(0, 265)]
	(0, 503): Wna (, 0)
	(0, 504): Rna (_3[24], 0) [(0, 267)]
	(0, 505): Wna (, 0)
	(0, 506): Rna (_3[25], 0) [(0, 269)]
	(0, 507): Wna (, 0)
	(0, 508): Wna (x.dbg.spill[0], 0x10)
	(0, 509): Wna (b[0], 0x10)
	(0, 510): Wna (self.dbg.spill[0], 0x40000000000005f8)
	(0, 511): Rna (b[0], 0x10) [(0, 509)]
	(0, 512): Wna (ptr.dbg.spill[0], 0x10)
	(0, 513): Wna (self.dbg.spill4[0], 0x40000000000005f8)
	(0, 514): Wna (src.dbg.spill[0], 0x4000000000000600)
	(0, 515): Wna (ptr.dbg.spill5[0], 0x10)
	(0, 516): FREE
	(0, 517): FREE
	(0, 518): FREE
	(0, 519): FREE
	(0, 520): FREE
	(0, 521): FREE
	(0, 522): FREE
	(0, 523): FREE
	(0, 524): FREE
	(0, 525): FREE
	(0, 526): FREE
	(0, 527): FREE
	(0, 528): FREE
	(0, 529): FREE
	(0, 530): Wna (drop_flag[0], 0x10)
	(0, 531): MALLOC ptr.dbg.spill
	(0, 532): Wna (ptr.dbg.spill[0], 0x0)
	(0, 533): MALLOC old_size.dbg.spill
	(0, 534): Wna (old_size.dbg.spill[0], 0x0)
	(0, 535): MALLOC 
	(0, 536): Wna (, 0x0)
	(0, 537): MALLOC dst.dbg.spill
	(0, 538): Wna (dst.dbg.spill[0], 0x0)
	(0, 539): MALLOC self.dbg.spill8
	(0, 540): Wna (self.dbg.spill8[0], 0x0)
	(0, 541): MALLOC self.dbg.spill7
	(0, 542): Wna (self.dbg.spill7[0], 0x0)
	(0, 543): MALLOC self.dbg.spill6
	(0, 544): Wna (self.dbg.spill6[0], 0x0)
	(0, 545): MALLOC self.dbg.spill5
	(0, 546): Wna (self.dbg.spill5[0], 0x0)
	(0, 547): MALLOC self.dbg.spill3
	(0, 548): Wna (self.dbg.spill3[0], 0x0)
	(0, 549): MALLOC self.dbg.spill
	(0, 550): Wna (self.dbg.spill[0], 0x0)
	(0, 551): MALLOC order.dbg.spill2
	(0, 552): MALLOC val.dbg.spill1
	(0, 553): Wna (val.dbg.spill1[0], 0x0)
	(0, 554): MALLOC order.dbg.spill
	(0, 555): MALLOC val.dbg.spill
	(0, 556): Wna (val.dbg.spill[0], 0x0)
	(0, 557): Wna (val.dbg.spill[0], 1)
	(0, 558): Wna (order.dbg.spill[0], 0)
	(0, 559): Wna (val.dbg.spill1[0], 1)
	(0, 560): Wna (order.dbg.spill2[0], 0)
	(0, 561): Wna (self.dbg.spill[0], 0x4000000000000548)
	(0, 562): Wna (self.dbg.spill3[0], 0x4000000000000548)
	(0, 563): Rna (drop_flag[0], 0x10) [(0, 530)]
	(0, 564): Wna (self.dbg.spill5[0], 0x10)
	(0, 565): Wna (self.dbg.spill6[0], 0x10)
	(0, 566): Wna (self.dbg.spill7[0], 0x10)
	(0, 567): Wna (self.dbg.spill8[0], 0x10)
	(0, 568): Wna (dst.dbg.spill[0], 0x10)
	(0, 569): URrlx (, 1) [(0, 497)]
	(0, 570): UWrlx (, 2)
	(0, 571): Wna (, 1)
	(0, 572): Rna (, 1) [(0, 571)]
	(0, 573): Wna (old_size.dbg.spill[0], 1)
	(0, 574): Rna (drop_flag[0], 0x10) [(0, 530)]
	(0, 575): Wna (ptr.dbg.spill[0], 0x10)
	(0, 576): MALLOC self.dbg.spill
	(0, 577): Wna (self.dbg.spill[0], 0x0)
	(0, 578): Wna (self.dbg.spill[0], 0x4000000000000550)
	(0, 579): FREE
	(0, 580): FREE
	(0, 581): FREE
	(0, 582): FREE
	(0, 583): FREE
	(0, 584): FREE
	(0, 585): FREE
	(0, 586): FREE
	(0, 587): FREE
	(0, 588): FREE
	(0, 589): FREE
	(0, 590): FREE
	(0, 591): FREE
	(0, 592): FREE
	(0, 593): FREE
	(0, 594): Wna (dropping_struct.dbg.spill[0], 0x10)
	(0, 595): MALLOC _x
	(0, 596): Wna (_x[0], 0x0)
	(0, 597): Wna (_x[0], 0x10)
	(0, 598): MALLOC 
	(0, 599): Wna (, 0x0)
	(0, 600): Wna (, 0x0)
	(0, 601): MALLOC _1.dbg.spill
	(0, 602): Wna (_1.dbg.spill[0], 0x0)
	(0, 603): Wna (_1.dbg.spill[0], 0x4000000000000aa0)
	(0, 604): MALLOC location.dbg.spill.i
	(0, 605): Wna (location.dbg.spill.i[0], 0x0)
	(0, 606): MALLOC 
	(0, 607): Wna (, 0x0)
	(0, 608): MALLOC args.dbg.spill.i
	(0, 609): Wna (args.dbg.spill.i[0], 0x0)
	(0, 610): MALLOC self.dbg.spill3.i
	(0, 611): Wna (self.dbg.spill3.i[0], 0x0)
	(0, 612): MALLOC f.dbg.spill2.i
	(0, 613): Wna (f.dbg.spill2.i[0], 0x0)
	(0, 614): MALLOC x.dbg.spill1.i
	(0, 615): Wna (x.dbg.spill1.i[0], 0x0)
	(0, 616): MALLOC self.dbg.spill.i
	(0, 617): Wna (self.dbg.spill.i[0], 0x0)
	(0, 618): MALLOC f.dbg.spill.i
	(0, 619): Wna (f.dbg.spill.i[0], 0x0)
	(0, 620): MALLOC x.dbg.spill.i
	(0, 621): Wna (x.dbg.spill.i[0], 0x0)
	(0, 622): MALLOC pi.i
	(0, 623): Wna (pi.i[0], 0x0)
	(0, 624): Wna (pi.i[8], 0x0)
	(0, 625): Wna (pi.i[16], 0x0)
	(0, 626): Wna (pi.i[24], 0x0)
	(0, 627): Wna (pi.i[32], 0x0)
	(0, 628): Wna (pi.i[40], 0x0)
	(0, 629): Wna (pi.i[48], 0x0)
	(0, 630): Wna (pi.i[56], 0x0)
	(0, 631): MALLOC _19.i
	(0, 632): Wna (, 0x0)
	(0, 633): Wna (, 0x0)
	(0, 634): MALLOC _12.i
	(0, 635): Wna (, 0x0)
	(0, 636): Wna (, 0x0)
	(0, 637): MALLOC _6.i
	(0, 638): Wna (, 0x0)
	(0, 639): Wna (, 0x0)
	(0, 640): Wna (, 0x0)
	(0, 641): Wna (, 0x0)
	(0, 642): MALLOC fmt.i
	(0, 643): Wna (fmt.i[0], 0x0)
	(0, 644): Wna (fmt.i[8], 0x0)
	(0, 645): Wna (fmt.i[16], 0x0)
	(0, 646): Wna (fmt.i[24], 0x0)
	(0, 647): Wna (fmt.i[32], 0x0)
	(0, 648): Wna (fmt.i[40], 0x0)
	(0, 649): MALLOC error.i
	(0, 650): Wna (error.i[0], 0x0)
	(0, 651): Wna (error.i[8], 0x0)
	(0, 652): MALLOC msg.i
	(0, 653): Wna (msg.i[0], 0x0)
	(0, 654): Wna (msg.i[8], 0x0)
	(0, 655): MALLOC force_no_backtrace.dbg.spill.i
	(0, 656): MALLOC can_unwind.dbg.spill.i
	(0, 657): MALLOC pieces.dbg.spill.i
	(0, 658): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 659): MALLOC 
	(0, 660): Wna (, 0x0)
	(0, 661): Wna (, 0x0)
	(0, 662): MALLOC t.dbg.spill.i
	(0, 663): Wna (t.dbg.spill.i[0], 0x0)
	(0, 664): Wna (t.dbg.spill.i[8], 0x0)
	(0, 665): MALLOC e.i
	(0, 666): Wna (e.i[0], 0x0)
	(0, 667): Wna (e.i[8], 0x0)
	(0, 668): MALLOC 
	(0, 669): Wna (, 0x0)
	(0, 670): Wna (, 0x0)
	(0, 671): MALLOC self.dbg.spill
	(0, 672): Wna (self.dbg.spill[0], 0x0)
	(0, 673): MALLOC _5
	(0, 674): Wna (_5[0], 0x0)
	(0, 675): Wna (_5[8], 0x0)
	(0, 676): Wna (_5[16], 0x0)
	(0, 677): MALLOC _4
	(0, 678): Wna (, 0x0)
	(0, 679): Wna (, 0x0)
	(0, 680): Wna (self.dbg.spill[0], 0x4000000000000aa0)
	(0, 681): MALLOC self.dbg.spill4
	(0, 682): Wna (self.dbg.spill4[0], 0x0)
	(0, 683): MALLOC self.dbg.spill3
	(0, 684): Wna (self.dbg.spill3[0], 0x0)
	(0, 685): MALLOC self.dbg.spill1
	(0, 686): Wna (self.dbg.spill1[0], 0x0)
	(0, 687): MALLOC self.dbg.spill
	(0, 688): Wna (self.dbg.spill[0], 0x0)
	(0, 689): Wna (self.dbg.spill[0], 0x4000000000000aa0)
	(0, 690): Wna (self.dbg.spill1[0], 0x4000000000000aa0)
	(0, 691): Rna (_x[0], 0x10) [(0, 597)]
	(0, 692): Wna (self.dbg.spill3[0], 0x10)
	(0, 693): Wna (self.dbg.spill4[0], 0x10)
	(0, 694): FREE
	(0, 695): FREE
	(0, 696): FREE
	(0, 697): FREE
	(0, 698): MALLOC location.dbg.spill7.i
	(0, 699): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 700): MALLOC 
	(0, 701): Wna (, 0x0)
	(0, 702): MALLOC location.dbg.spill.i
	(0, 703): Wna (location.dbg.spill.i[0], 0x0)
	(0, 704): MALLOC 
	(0, 705): Wna (, 0x0)
	(0, 706): MALLOC ok.dbg.spill.i
	(0, 707): MALLOC val.dbg.spill.i
	(0, 708): MALLOC new.dbg.spill.i
	(0, 709): MALLOC old.dbg.spill.i
	(0, 710): MALLOC dst.dbg.spill.i
	(0, 711): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 712): MALLOC pi5.i
	(0, 713): Wna (pi5.i[0], 0x0)
	(0, 714): Wna (pi5.i[8], 0x0)
	(0, 715): Wna (pi5.i[16], 0x0)
	(0, 716): Wna (pi5.i[24], 0x0)
	(0, 717): Wna (pi5.i[32], 0x0)
	(0, 718): Wna (pi5.i[40], 0x0)
	(0, 719): Wna (pi5.i[48], 0x0)
	(0, 720): Wna (pi5.i[56], 0x0)
	(0, 721): MALLOC pi.i
	(0, 722): Wna (pi.i[0], 0x0)
	(0, 723): Wna (pi.i[8], 0x0)
	(0, 724): Wna (pi.i[16], 0x0)
	(0, 725): Wna (pi.i[24], 0x0)
	(0, 726): Wna (pi.i[32], 0x0)
	(0, 727): Wna (pi.i[40], 0x0)
	(0, 728): Wna (pi.i[48], 0x0)
	(0, 729): Wna (pi.i[56], 0x0)
	(0, 730): MALLOC fmt4.i
	(0, 731): Wna (fmt4.i[0], 0x0)
	(0, 732): Wna (fmt4.i[8], 0x0)
	(0, 733): Wna (fmt4.i[16], 0x0)
	(0, 734): Wna (fmt4.i[24], 0x0)
	(0, 735): Wna (fmt4.i[32], 0x0)
	(0, 736): Wna (fmt4.i[40], 0x0)
	(0, 737): MALLOC fmt.i
	(0, 738): Wna (fmt.i[0], 0x0)
	(0, 739): Wna (fmt.i[8], 0x0)
	(0, 740): Wna (fmt.i[16], 0x0)
	(0, 741): Wna (fmt.i[24], 0x0)
	(0, 742): Wna (fmt.i[32], 0x0)
	(0, 743): Wna (fmt.i[40], 0x0)
	(0, 744): MALLOC _8.i
	(0, 745): Wna (, 0x0)
	(0, 746): MALLOC _0.i
	(0, 747): Wna (, 0x0)
	(0, 748): MALLOC failure.i
	(0, 749): MALLOC success.i
	(0, 750): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 751): MALLOC can_unwind.dbg.spill2.i
	(0, 752): MALLOC force_no_backtrace.dbg.spill.i
	(0, 753): MALLOC can_unwind.dbg.spill.i
	(0, 754): MALLOC pieces.dbg.spill1.i
	(0, 755): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 756): MALLOC pieces.dbg.spill.i
	(0, 757): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 758): MALLOC self.dbg.spill4
	(0, 759): Wna (self.dbg.spill4[0], 0x0)
	(0, 760): MALLOC self.dbg.spill3
	(0, 761): Wna (self.dbg.spill3[0], 0x0)
	(0, 762): MALLOC self.dbg.spill2
	(0, 763): Wna (self.dbg.spill2[0], 0x0)
	(0, 764): MALLOC self.dbg.spill1
	(0, 765): Wna (self.dbg.spill1[0], 0x0)
	(0, 766): MALLOC self.dbg.spill
	(0, 767): Wna (self.dbg.spill[0], 0x0)
	(0, 768): MALLOC _4
	(0, 769): Wna (, 0x0)
	(0, 770): MALLOC failure.dbg.spill
	(0, 771): MALLOC success.dbg.spill
	(0, 772): MALLOC new.dbg.spill
	(0, 773): MALLOC current.dbg.spill
	(0, 774): Wna (current.dbg.spill[0], 0)
	(0, 775): Wna (new.dbg.spill[0], 1073741823)
	(0, 776): Wna (success.dbg.spill[0], 2)
	(0, 777): Wna (failure.dbg.spill[0], 0)
	(0, 778): Wna (self.dbg.spill[0], 0x20)
	(0, 779): Wna (self.dbg.spill1[0], 0x20)
	(0, 780): Wna (self.dbg.spill2[0], 0x20)
	(0, 781): Wna (self.dbg.spill3[0], 0x20)
	(0, 782): Wna (pieces.dbg.spill.i[0], 0x8000000000000ae8)
	(0, 783): Wna (pieces.dbg.spill1.i[0], 0x8000000000000aa0)
	(0, 784): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 785): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 786): Wna (can_unwind.dbg.spill2.i[0], 1)
	(0, 787): Wna (force_no_backtrace.dbg.spill3.i[0], 0)
	(0, 788): Wna (success.i[0], 2)
	(0, 789): Wna (failure.i[0], 0)
	(0, 790): Wna (dst.dbg.spill.i[0], 0x20)
	(0, 791): Wna (old.dbg.spill.i[0], 0)
	(0, 792): Wna (new.dbg.spill.i[0], 1073741823)
	(0, 793): Rna (success.i[0], 2) [(0, 788)]
	(0, 794): Rna (failure.i[0], 0) [(0, 789)]
	(0, 795): CRacq (, 0) [(0, 501)]
	(0, 796): CWacq (, 1073741823)
	(0, 797): Wna (, 0)
	(0, 798): Wna (, 1)
	(0, 799): Rna (, 0) [(0, 797)]
	(0, 800): Wna (val.dbg.spill.i[0], 0)
	(0, 801): Rna (, 1) [(0, 798)]
	(0, 802): Wna (ok.dbg.spill.i[0], 1)
	(0, 803): Wna (, 0)
	(0, 804): Wna (, 0)
	(0, 805): Rna (, 0) [(0, 804)]
	(0, 806): Rna (, 0) [(0, 803)]
	(0, 807): Wna (, 0)
	(0, 808): Wna (, 0)
	(0, 809): Wna (self.dbg.spill4[0], 0x4000000000000f28)
	(0, 810): Rna (, 0) [(0, 807)]
	(0, 811): MALLOC location.dbg.spill7.i1
	(0, 812): Wna (location.dbg.spill7.i1[0], 0x0)
	(0, 813): MALLOC 
	(0, 814): Wna (, 0x0)
	(0, 815): MALLOC location.dbg.spill.i2
	(0, 816): Wna (location.dbg.spill.i2[0], 0x0)
	(0, 817): MALLOC 
	(0, 818): Wna (, 0x0)
	(0, 819): MALLOC dst.dbg.spill.i3
	(0, 820): Wna (dst.dbg.spill.i3[0], 0x0)
	(0, 821): MALLOC pi5.i4
	(0, 822): Wna (pi5.i4[0], 0x0)
	(0, 823): Wna (pi5.i4[8], 0x0)
	(0, 824): Wna (pi5.i4[16], 0x0)
	(0, 825): Wna (pi5.i4[24], 0x0)
	(0, 826): Wna (pi5.i4[32], 0x0)
	(0, 827): Wna (pi5.i4[40], 0x0)
	(0, 828): Wna (pi5.i4[48], 0x0)
	(0, 829): Wna (pi5.i4[56], 0x0)
	(0, 830): MALLOC pi.i5
	(0, 831): Wna (pi.i5[0], 0x0)
	(0, 832): Wna (pi.i5[8], 0x0)
	(0, 833): Wna (pi.i5[16], 0x0)
	(0, 834): Wna (pi.i5[24], 0x0)
	(0, 835): Wna (pi.i5[32], 0x0)
	(0, 836): Wna (pi.i5[40], 0x0)
	(0, 837): Wna (pi.i5[48], 0x0)
	(0, 838): Wna (pi.i5[56], 0x0)
	(0, 839): MALLOC fmt4.i6
	(0, 840): Wna (fmt4.i6[0], 0x0)
	(0, 841): Wna (fmt4.i6[8], 0x0)
	(0, 842): Wna (fmt4.i6[16], 0x0)
	(0, 843): Wna (fmt4.i6[24], 0x0)
	(0, 844): Wna (fmt4.i6[32], 0x0)
	(0, 845): Wna (fmt4.i6[40], 0x0)
	(0, 846): MALLOC fmt.i7
	(0, 847): Wna (fmt.i7[0], 0x0)
	(0, 848): Wna (fmt.i7[8], 0x0)
	(0, 849): Wna (fmt.i7[16], 0x0)
	(0, 850): Wna (fmt.i7[24], 0x0)
	(0, 851): Wna (fmt.i7[32], 0x0)
	(0, 852): Wna (fmt.i7[40], 0x0)
	(0, 853): MALLOC _0.i8
	(0, 854): MALLOC order.i9
	(0, 855): MALLOC force_no_backtrace.dbg.spill3.i10
	(0, 856): MALLOC can_unwind.dbg.spill2.i11
	(0, 857): MALLOC force_no_backtrace.dbg.spill.i12
	(0, 858): MALLOC can_unwind.dbg.spill.i13
	(0, 859): MALLOC pieces.dbg.spill1.i14
	(0, 860): Wna (pieces.dbg.spill1.i14[0], 0x0)
	(0, 861): MALLOC pieces.dbg.spill.i15
	(0, 862): Wna (pieces.dbg.spill.i15[0], 0x0)
	(0, 863): MALLOC location.dbg.spill7.i
	(0, 864): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 865): MALLOC 
	(0, 866): Wna (, 0x0)
	(0, 867): MALLOC location.dbg.spill.i
	(0, 868): Wna (location.dbg.spill.i[0], 0x0)
	(0, 869): MALLOC 
	(0, 870): Wna (, 0x0)
	(0, 871): MALLOC dst.dbg.spill.i
	(0, 872): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 873): MALLOC pi5.i
	(0, 874): Wna (pi5.i[0], 0x0)
	(0, 875): Wna (pi5.i[8], 0x0)
	(0, 876): Wna (pi5.i[16], 0x0)
	(0, 877): Wna (pi5.i[24], 0x0)
	(0, 878): Wna (pi5.i[32], 0x0)
	(0, 879): Wna (pi5.i[40], 0x0)
	(0, 880): Wna (pi5.i[48], 0x0)
	(0, 881): Wna (pi5.i[56], 0x0)
	(0, 882): MALLOC pi.i
	(0, 883): Wna (pi.i[0], 0x0)
	(0, 884): Wna (pi.i[8], 0x0)
	(0, 885): Wna (pi.i[16], 0x0)
	(0, 886): Wna (pi.i[24], 0x0)
	(0, 887): Wna (pi.i[32], 0x0)
	(0, 888): Wna (pi.i[40], 0x0)
	(0, 889): Wna (pi.i[48], 0x0)
	(0, 890): Wna (pi.i[56], 0x0)
	(0, 891): MALLOC fmt4.i
	(0, 892): Wna (fmt4.i[0], 0x0)
	(0, 893): Wna (fmt4.i[8], 0x0)
	(0, 894): Wna (fmt4.i[16], 0x0)
	(0, 895): Wna (fmt4.i[24], 0x0)
	(0, 896): Wna (fmt4.i[32], 0x0)
	(0, 897): Wna (fmt4.i[40], 0x0)
	(0, 898): MALLOC fmt.i
	(0, 899): Wna (fmt.i[0], 0x0)
	(0, 900): Wna (fmt.i[8], 0x0)
	(0, 901): Wna (fmt.i[16], 0x0)
	(0, 902): Wna (fmt.i[24], 0x0)
	(0, 903): Wna (fmt.i[32], 0x0)
	(0, 904): Wna (fmt.i[40], 0x0)
	(0, 905): MALLOC _0.i
	(0, 906): Wna (, 0x0)
	(0, 907): MALLOC order.i
	(0, 908): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 909): MALLOC can_unwind.dbg.spill2.i
	(0, 910): MALLOC force_no_backtrace.dbg.spill.i
	(0, 911): MALLOC can_unwind.dbg.spill.i
	(0, 912): MALLOC pieces.dbg.spill1.i
	(0, 913): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 914): MALLOC pieces.dbg.spill.i
	(0, 915): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 916): MALLOC self.dbg.spill5
	(0, 917): Wna (self.dbg.spill5[0], 0x0)
	(0, 918): MALLOC self.dbg.spill4
	(0, 919): Wna (self.dbg.spill4[0], 0x0)
	(0, 920): MALLOC ret.dbg.spill
	(0, 921): MALLOC self.dbg.spill3
	(0, 922): Wna (self.dbg.spill3[0], 0x0)
	(0, 923): MALLOC self.dbg.spill2
	(0, 924): Wna (self.dbg.spill2[0], 0x0)
	(0, 925): MALLOC self.dbg.spill
	(0, 926): Wna (self.dbg.spill[0], 0x0)
	(0, 927): MALLOC _5
	(0, 928): MALLOC _0
	(0, 929): MALLOC order.dbg.spill1
	(0, 930): MALLOC order.dbg.spill
	(0, 931): Wna (order.dbg.spill[0], 0)
	(0, 932): Wna (order.dbg.spill1[0], 0)
	(0, 933): Wna (self.dbg.spill[0], 0x28)
	(0, 934): Wna (self.dbg.spill2[0], 0x8000000000000000)
	(0, 935): Wna (self.dbg.spill3[0], 0x8000000000000000)
	(0, 936): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30)
	(0, 937): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70)
	(0, 938): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 939): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 940): Wna (can_unwind.dbg.spill2.i[0], 1)
	(0, 941): Wna (force_no_backtrace.dbg.spill3.i[0], 0)
	(0, 942): Wna (order.i[0], 0)
	(0, 943): Wna (dst.dbg.spill.i[0], 0x8000000000000000)
	(0, 944): Rna (order.i[0], 0) [(0, 942)]
	(0, 945): Rrlx (_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h541136d3707a013fE, 0) [INIT]
	(0, 946): Wna (, 0)
	(0, 947): Rna (, 0) [(0, 946)]
	(0, 948): Wna (, 1)
	(0, 949): Rna (, 1) [(0, 948)]
	(0, 950): Wna (ret.dbg.spill[0], 0)
	(0, 951): Wna (self.dbg.spill4[0], 0x28)
	(0, 952): Wna (self.dbg.spill5[0], 0x28)
	(0, 953): Wna (pieces.dbg.spill.i15[0], 0x8000000000000b30)
	(0, 954): Wna (pieces.dbg.spill1.i14[0], 0x8000000000000b70)
	(0, 955): Wna (can_unwind.dbg.spill.i13[0], 1)
	(0, 956): Wna (force_no_backtrace.dbg.spill.i12[0], 0)
	(0, 957): Wna (can_unwind.dbg.spill2.i11[0], 1)
	(0, 958): Wna (force_no_backtrace.dbg.spill3.i10[0], 0)
	(0, 959): Wna (order.i9[0], 0)
	(0, 960): Wna (dst.dbg.spill.i3[0], 0x28)
	(0, 961): Rna (order.i9[0], 0) [(0, 959)]
	(0, 962): Rrlx (, 0) [(0, 505)]
	(0, 963): Wna (, 0)
	(0, 964): Wna (, 0)
	(0, 965): Wna (, 0)
	(0, 966): Rna (, 0) [(0, 965)]
	(0, 967): Rna (, 0) [(0, 964)]
	(0, 968): FREE
	(0, 969): FREE
	(0, 970): FREE
	(0, 971): FREE
	(0, 972): FREE
	(0, 973): FREE
	(0, 974): FREE
	(0, 975): FREE
	(0, 976): FREE
	(0, 977): FREE
	(0, 978): FREE
	(0, 979): FREE
	(0, 980): FREE
	(0, 981): FREE
	(0, 982): FREE
	(0, 983): FREE
	(0, 984): FREE
	(0, 985): FREE
	(0, 986): FREE
	(0, 987): FREE
	(0, 988): FREE
	(0, 989): FREE
	(0, 990): FREE
	(0, 991): FREE
	(0, 992): FREE
	(0, 993): FREE
	(0, 994): FREE
	(0, 995): FREE
	(0, 996): FREE
	(0, 997): FREE
	(0, 998): FREE
	(0, 999): FREE
	(0, 1000): FREE
	(0, 1001): FREE
	(0, 1002): FREE
	(0, 1003): FREE
	(0, 1004): FREE
	(0, 1005): FREE
	(0, 1006): FREE
	(0, 1007): FREE
	(0, 1008): FREE
	(0, 1009): FREE
	(0, 1010): FREE
	(0, 1011): FREE
	(0, 1012): MALLOC guard.dbg.spill1
	(0, 1013): Wna (guard.dbg.spill1[0], 0x0)
	(0, 1014): Wna (guard.dbg.spill1[8], 0x0)
	(0, 1015): MALLOC guard.dbg.spill
	(0, 1016): MALLOC t.dbg.spill
	(0, 1017): MALLOC f.dbg.spill
	(0, 1018): Wna (f.dbg.spill[0], 0x0)
	(0, 1019): MALLOC result
	(0, 1020): Wna (result[0], 0)
	(0, 1021): Wna (result[1], 0)
	(0, 1022): Wna (f.dbg.spill[0], 0x20)
	(0, 1023): Rna (result[0], 0) [(0, 1020)]
	(0, 1024): Rna (result[1], 0) [(0, 1021)]
	(0, 1025): Wna (t.dbg.spill[0], 0)
	(0, 1026): MALLOC guard.dbg.spill
	(0, 1027): MALLOC _1.dbg.spill
	(0, 1028): Wna (_1.dbg.spill[0], 0x0)
	(0, 1029): Wna (_1.dbg.spill[0], 0x20)
	(0, 1030): Wna (guard.dbg.spill[0], 0)
	(0, 1031): FREE
	(0, 1032): FREE
	(0, 1033): Wna (_5[8], 0x20)
	(0, 1034): Wna (_5[16], 0)
	(0, 1035): Wna (_5[0], 0)
	(0, 1036): FREE
	(0, 1037): FREE
	(0, 1038): FREE
	(0, 1039): FREE
	(0, 1040): FREE
	(0, 1041): FREE
	(0, 1042): FREE
	(0, 1043): FREE
	(0, 1044): FREE
	(0, 1045): FREE
	(0, 1046): FREE
	(0, 1047): FREE
	(0, 1048): FREE
	(0, 1049): FREE
	(0, 1050): FREE
	(0, 1051): FREE
	(0, 1052): FREE
	(0, 1053): FREE
	(0, 1054): FREE
	(0, 1055): FREE
	(0, 1056): FREE
	(0, 1057): FREE
	(0, 1058): FREE
	(0, 1059): FREE
	(0, 1060): FREE
	(0, 1061): FREE
	(0, 1062): FREE
	(0, 1063): FREE
	(0, 1064): FREE
	(0, 1065): FREE
	(0, 1066): FREE
	(0, 1067): FREE
	(0, 1068): FREE
	(0, 1069): FREE
	(0, 1070): FREE
	(0, 1071): FREE
	(0, 1072): FREE
	(0, 1073): FREE
	(0, 1074): Rna (_5[0], 0) [(0, 1035)]
	(0, 1075): Rna (_5[8], 0x20) [(0, 1033)]
	(0, 1076): Rna (_5[16], 0) [(0, 1034)]
	(0, 1077): Wna (t.dbg.spill.i[0], 0x20)
	(0, 1078): Wna (t.dbg.spill.i[8], 0)
	(0, 1079): Wna (, 0x20)
	(0, 1080): Wna (, 0)
	(0, 1081): MALLOC self.dbg.spill2
	(0, 1082): Wna (self.dbg.spill2[0], 0x0)
	(0, 1083): MALLOC self.dbg.spill
	(0, 1084): Wna (self.dbg.spill[0], 0x0)
	(0, 1085): Wna (self.dbg.spill[0], 0x4000000000000cf8)
	(0, 1086): Rna (, 0x20) [(0, 1079)]
	(0, 1087): Wna (self.dbg.spill2[0], 0x29)
	(0, 1088): FREE
	(0, 1089): FREE
	(0, 1090): Wna (, 1)
	(0, 1091): MALLOC _1.dbg.spill
	(0, 1092): Wna (_1.dbg.spill[0], 0x0)
	(0, 1093): Wna (_1.dbg.spill[0], 0x4000000000000cf8)
	(0, 1094): MALLOC state.dbg.spill
	(0, 1095): MALLOC 
	(0, 1096): MALLOC dst.dbg.spill
	(0, 1097): Wna (dst.dbg.spill[0], 0x0)
	(0, 1098): MALLOC self.dbg.spill5
	(0, 1099): Wna (self.dbg.spill5[0], 0x0)
	(0, 1100): MALLOC self.dbg.spill4
	(0, 1101): Wna (self.dbg.spill4[0], 0x0)
	(0, 1102): MALLOC self.dbg.spill3
	(0, 1103): Wna (self.dbg.spill3[0], 0x0)
	(0, 1104): MALLOC self.dbg.spill
	(0, 1105): Wna (self.dbg.spill[0], 0x0)
	(0, 1106): MALLOC order.dbg.spill2
	(0, 1107): MALLOC val.dbg.spill1
	(0, 1108): MALLOC order.dbg.spill
	(0, 1109): MALLOC val.dbg.spill
	(0, 1110): Wna (val.dbg.spill[0], 1073741823)
	(0, 1111): Wna (order.dbg.spill[0], 1)
	(0, 1112): Wna (val.dbg.spill1[0], 1073741823)
	(0, 1113): Wna (order.dbg.spill2[0], 1)
	(0, 1114): Wna (self.dbg.spill[0], 0x4000000000000cf8)
	(0, 1115): Rna (, 0x20) [(0, 1079)]
	(0, 1116): MALLOC location.dbg.spill7.i
	(0, 1117): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1118): MALLOC 
	(0, 1119): Wna (, 0x0)
	(0, 1120): MALLOC location.dbg.spill.i
	(0, 1121): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1122): MALLOC 
	(0, 1123): Wna (, 0x0)
	(0, 1124): MALLOC dst.dbg.spill.i
	(0, 1125): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1126): MALLOC pi5.i
	(0, 1127): Wna (pi5.i[0], 0x0)
	(0, 1128): Wna (pi5.i[8], 0x0)
	(0, 1129): Wna (pi5.i[16], 0x0)
	(0, 1130): Wna (pi5.i[24], 0x0)
	(0, 1131): Wna (pi5.i[32], 0x0)
	(0, 1132): Wna (pi5.i[40], 0x0)
	(0, 1133): Wna (pi5.i[48], 0x0)
	(0, 1134): Wna (pi5.i[56], 0x0)
	(0, 1135): MALLOC pi.i
	(0, 1136): Wna (pi.i[0], 0x0)
	(0, 1137): Wna (pi.i[8], 0x0)
	(0, 1138): Wna (pi.i[16], 0x0)
	(0, 1139): Wna (pi.i[24], 0x0)
	(0, 1140): Wna (pi.i[32], 0x0)
	(0, 1141): Wna (pi.i[40], 0x0)
	(0, 1142): Wna (pi.i[48], 0x0)
	(0, 1143): Wna (pi.i[56], 0x0)
	(0, 1144): MALLOC fmt4.i
	(0, 1145): Wna (fmt4.i[0], 0x0)
	(0, 1146): Wna (fmt4.i[8], 0x0)
	(0, 1147): Wna (fmt4.i[16], 0x0)
	(0, 1148): Wna (fmt4.i[24], 0x0)
	(0, 1149): Wna (fmt4.i[32], 0x0)
	(0, 1150): Wna (fmt4.i[40], 0x0)
	(0, 1151): MALLOC fmt.i
	(0, 1152): Wna (fmt.i[0], 0x0)
	(0, 1153): Wna (fmt.i[8], 0x0)
	(0, 1154): Wna (fmt.i[16], 0x0)
	(0, 1155): Wna (fmt.i[24], 0x0)
	(0, 1156): Wna (fmt.i[32], 0x0)
	(0, 1157): Wna (fmt.i[40], 0x0)
	(0, 1158): MALLOC _0.i
	(0, 1159): Wna (, 0x0)
	(0, 1160): MALLOC order.i
	(0, 1161): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1162): MALLOC can_unwind.dbg.spill2.i
	(0, 1163): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1164): MALLOC can_unwind.dbg.spill.i
	(0, 1165): MALLOC pieces.dbg.spill1.i
	(0, 1166): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1167): MALLOC pieces.dbg.spill.i
	(0, 1168): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1169): MALLOC self.dbg.spill5
	(0, 1170): Wna (self.dbg.spill5[0], 0x0)
	(0, 1171): MALLOC self.dbg.spill4
	(0, 1172): Wna (self.dbg.spill4[0], 0x0)
	(0, 1173): MALLOC self.dbg.spill3
	(0, 1174): Wna (self.dbg.spill3[0], 0x0)
	(0, 1175): MALLOC self.dbg.spill2
	(0, 1176): Wna (self.dbg.spill2[0], 0x0)
	(0, 1177): MALLOC guard.dbg.spill
	(0, 1178): Wna (guard.dbg.spill[0], 0x0)
	(0, 1179): MALLOC self.dbg.spill
	(0, 1180): Wna (self.dbg.spill[0], 0x0)
	(0, 1181): MALLOC order.dbg.spill1
	(0, 1182): MALLOC val.dbg.spill
	(0, 1183): MALLOC order.dbg.spill
	(0, 1184): Wna (order.dbg.spill[0], 0)
	(0, 1185): Wna (val.dbg.spill[0], 1)
	(0, 1186): Wna (order.dbg.spill1[0], 0)
	(0, 1187): Wna (self.dbg.spill[0], 0x28)
	(0, 1188): Wna (guard.dbg.spill[0], 0x4000000000000d00)
	(0, 1189): Rna (, 0) [(0, 1080)]
	(0, 1190): Wna (self.dbg.spill2[0], 0x8000000000000000)
	(0, 1191): Wna (self.dbg.spill3[0], 0x8000000000000000)
	(0, 1192): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30)
	(0, 1193): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70)
	(0, 1194): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 1195): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 1196): Wna (can_unwind.dbg.spill2.i[0], 1)
	(0, 1197): Wna (force_no_backtrace.dbg.spill3.i[0], 0)
	(0, 1198): Wna (order.i[0], 0)
	(0, 1199): Wna (dst.dbg.spill.i[0], 0x8000000000000000)
	(0, 1200): Rna (order.i[0], 0) [(0, 1198)]
	(0, 1201): Rrlx (_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h541136d3707a013fE, 0) [INIT]
	(0, 1202): Wna (, 0)
	(0, 1203): Rna (, 0) [(0, 1202)]
	(0, 1204): FREE
	(0, 1205): FREE
	(0, 1206): FREE
	(0, 1207): FREE
	(0, 1208): FREE
	(0, 1209): FREE
	(0, 1210): FREE
	(0, 1211): FREE
	(0, 1212): FREE
	(0, 1213): FREE
	(0, 1214): FREE
	(0, 1215): FREE
	(0, 1216): FREE
	(0, 1217): FREE
	(0, 1218): FREE
	(0, 1219): FREE
	(0, 1220): FREE
	(0, 1221): FREE
	(0, 1222): FREE
	(0, 1223): FREE
	(0, 1224): FREE
	(0, 1225): FREE
	(0, 1226): FREE
	(0, 1227): FREE
	(0, 1228): FREE
	(0, 1229): FREE
	(0, 1230): Rna (, 0x20) [(0, 1079)]
	(0, 1231): Wna (self.dbg.spill3[0], 0x20)
	(0, 1232): Wna (self.dbg.spill4[0], 0x20)
	(0, 1233): Wna (self.dbg.spill5[0], 0x20)
	(0, 1234): Wna (dst.dbg.spill[0], 0x20)
	(0, 1235): URrel (, 1073741823) [(0, 796)]
	(0, 1236): UWrel (, 0)
	(0, 1237): Wna (, 1073741823)
	(0, 1238): Rna (, 1073741823) [(0, 1237)]
	(0, 1239): Wna (state.dbg.spill[0], 0)
	(0, 1240): FREE
	(0, 1241): FREE
	(0, 1242): FREE
	(0, 1243): FREE
	(0, 1244): FREE
	(0, 1245): FREE
	(0, 1246): FREE
	(0, 1247): FREE
	(0, 1248): FREE
	(0, 1249): FREE
	(0, 1250): FREE
	(0, 1251): FREE
	(0, 1252): FREE
	(0, 1253): FREE
	(0, 1254): FREE
	(0, 1255): FREE
	(0, 1256): FREE
	(0, 1257): FREE
	(0, 1258): FREE
	(0, 1259): FREE
	(0, 1260): FREE
	(0, 1261): FREE
	(0, 1262): FREE
	(0, 1263): FREE
	(0, 1264): FREE
	(0, 1265): FREE
	(0, 1266): FREE
	(0, 1267): FREE
	(0, 1268): FREE
	(0, 1269): FREE
	(0, 1270): FREE
	(0, 1271): FREE
	(0, 1272): FREE
	(0, 1273): FREE
	(0, 1274): FREE
	(0, 1275): FREE
	(0, 1276): FREE
	(0, 1277): FREE
	(0, 1278): MALLOC 
	(0, 1279): Wna (, 0x0)
	(0, 1280): MALLOC dst.dbg.spill.i
	(0, 1281): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1282): MALLOC self.dbg.spill14.i
	(0, 1283): Wna (self.dbg.spill14.i[0], 0x0)
	(0, 1284): MALLOC self.dbg.spill13.i
	(0, 1285): Wna (self.dbg.spill13.i[0], 0x0)
	(0, 1286): MALLOC self.dbg.spill12.i
	(0, 1287): Wna (self.dbg.spill12.i[0], 0x0)
	(0, 1288): MALLOC self.dbg.spill11.i
	(0, 1289): Wna (self.dbg.spill11.i[0], 0x0)
	(0, 1290): MALLOC self.dbg.spill9.i
	(0, 1291): Wna (self.dbg.spill9.i[0], 0x0)
	(0, 1292): MALLOC self.dbg.spill.i
	(0, 1293): Wna (self.dbg.spill.i[0], 0x0)
	(0, 1294): MALLOC force_no_backtrace.dbg.spill6.i
	(0, 1295): MALLOC can_unwind.dbg.spill5.i
	(0, 1296): MALLOC pieces.dbg.spill4.i
	(0, 1297): Wna (pieces.dbg.spill4.i[0], 0x0)
	(0, 1298): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1299): MALLOC can_unwind.dbg.spill.i
	(0, 1300): MALLOC pieces.dbg.spill.i
	(0, 1301): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1302): MALLOC order.dbg.spill3.i
	(0, 1303): MALLOC order.dbg.spill2.i
	(0, 1304): MALLOC val.dbg.spill1.i
	(0, 1305): Wna (val.dbg.spill1.i[0], 0x0)
	(0, 1306): MALLOC order.dbg.spill.i
	(0, 1307): MALLOC val.dbg.spill.i
	(0, 1308): Wna (val.dbg.spill.i[0], 0x0)
	(0, 1309): MALLOC _1.dbg.spill
	(0, 1310): Wna (_1.dbg.spill[0], 0x0)
	(0, 1311): Wna (_1.dbg.spill[0], 0x4000000000000aa0)
	(0, 1312): Wna (val.dbg.spill.i[0], 1)
	(0, 1313): Wna (order.dbg.spill.i[0], 1)
	(0, 1314): Wna (val.dbg.spill1.i[0], 1)
	(0, 1315): Wna (order.dbg.spill2.i[0], 1)
	(0, 1316): Wna (order.dbg.spill3.i[0], 2)
	(0, 1317): Wna (pieces.dbg.spill.i[0], 0x8000000000001748)
	(0, 1318): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 1319): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 1320): Wna (pieces.dbg.spill4.i[0], 0x80000000000017e8)
	(0, 1321): Wna (can_unwind.dbg.spill5.i[0], 1)
	(0, 1322): Wna (force_no_backtrace.dbg.spill6.i[0], 0)
	(0, 1323): Wna (self.dbg.spill.i[0], 0x4000000000000aa0)
	(0, 1324): Wna (self.dbg.spill9.i[0], 0x4000000000000aa0)
	(0, 1325): Rna (_x[0], 0x10) [(0, 597)]
	(0, 1326): Wna (self.dbg.spill11.i[0], 0x10)
	(0, 1327): Wna (self.dbg.spill12.i[0], 0x10)
	(0, 1328): Wna (self.dbg.spill13.i[0], 0x10)
	(0, 1329): Wna (self.dbg.spill14.i[0], 0x10)
	(0, 1330): Wna (dst.dbg.spill.i[0], 0x10)
	(0, 1331): URrel (, 2) [(0, 570)]
	(0, 1332): UWrel (, 1)
	(0, 1333): Wna (, 2)
	(0, 1334): Rna (, 2) [(0, 1333)]
	(0, 1335): FREE
	(0, 1336): FREE
	(0, 1337): FREE
	(0, 1338): FREE
	(0, 1339): FREE
	(0, 1340): FREE
	(0, 1341): FREE
	(0, 1342): FREE
	(0, 1343): FREE
	(0, 1344): FREE
	(0, 1345): FREE
	(0, 1346): FREE
	(0, 1347): FREE
	(0, 1348): FREE
	(0, 1349): FREE
	(0, 1350): FREE
	(0, 1351): FREE
	(0, 1352): FREE
	(0, 1353): FREE
	(0, 1354): FREE
	(0, 1355): FREE
	(0, 1356): FREE
	(0, 1357): FREE
	(0, 1358): MALLOC self.dbg.spill4
	(0, 1359): Wna (self.dbg.spill4[0], 0x0)
	(0, 1360): MALLOC self.dbg.spill3
	(0, 1361): Wna (self.dbg.spill3[0], 0x0)
	(0, 1362): MALLOC self.dbg.spill1
	(0, 1363): Wna (self.dbg.spill1[0], 0x0)
	(0, 1364): MALLOC self.dbg.spill
	(0, 1365): Wna (self.dbg.spill[0], 0x0)
	(0, 1366): Wna (self.dbg.spill[0], 0x4000000000000548)
	(0, 1367): Wna (self.dbg.spill1[0], 0x4000000000000548)
	(0, 1368): Rna (drop_flag[0], 0x10) [(0, 530)]
	(0, 1369): Wna (self.dbg.spill3[0], 0x10)
	(0, 1370): Wna (self.dbg.spill4[0], 0x10)
	(0, 1371): FREE
	(0, 1372): FREE
	(0, 1373): FREE
	(0, 1374): FREE
	(0, 1375): MALLOC self.dbg.spill
	(0, 1376): Wna (self.dbg.spill[0], 0x0)
	(0, 1377): Wna (self.dbg.spill[0], 0x20)
	(0, 1378): MALLOC location.dbg.spill7.i1
	(0, 1379): Wna (location.dbg.spill7.i1[0], 0x0)
	(0, 1380): MALLOC 
	(0, 1381): Wna (, 0x0)
	(0, 1382): MALLOC location.dbg.spill.i2
	(0, 1383): Wna (location.dbg.spill.i2[0], 0x0)
	(0, 1384): MALLOC 
	(0, 1385): Wna (, 0x0)
	(0, 1386): MALLOC dst.dbg.spill.i3
	(0, 1387): Wna (dst.dbg.spill.i3[0], 0x0)
	(0, 1388): MALLOC pi5.i4
	(0, 1389): Wna (pi5.i4[0], 0x0)
	(0, 1390): Wna (pi5.i4[8], 0x0)
	(0, 1391): Wna (pi5.i4[16], 0x0)
	(0, 1392): Wna (pi5.i4[24], 0x0)
	(0, 1393): Wna (pi5.i4[32], 0x0)
	(0, 1394): Wna (pi5.i4[40], 0x0)
	(0, 1395): Wna (pi5.i4[48], 0x0)
	(0, 1396): Wna (pi5.i4[56], 0x0)
	(0, 1397): MALLOC pi.i5
	(0, 1398): Wna (pi.i5[0], 0x0)
	(0, 1399): Wna (pi.i5[8], 0x0)
	(0, 1400): Wna (pi.i5[16], 0x0)
	(0, 1401): Wna (pi.i5[24], 0x0)
	(0, 1402): Wna (pi.i5[32], 0x0)
	(0, 1403): Wna (pi.i5[40], 0x0)
	(0, 1404): Wna (pi.i5[48], 0x0)
	(0, 1405): Wna (pi.i5[56], 0x0)
	(0, 1406): MALLOC fmt4.i6
	(0, 1407): Wna (fmt4.i6[0], 0x0)
	(0, 1408): Wna (fmt4.i6[8], 0x0)
	(0, 1409): Wna (fmt4.i6[16], 0x0)
	(0, 1410): Wna (fmt4.i6[24], 0x0)
	(0, 1411): Wna (fmt4.i6[32], 0x0)
	(0, 1412): Wna (fmt4.i6[40], 0x0)
	(0, 1413): MALLOC fmt.i7
	(0, 1414): Wna (fmt.i7[0], 0x0)
	(0, 1415): Wna (fmt.i7[8], 0x0)
	(0, 1416): Wna (fmt.i7[16], 0x0)
	(0, 1417): Wna (fmt.i7[24], 0x0)
	(0, 1418): Wna (fmt.i7[32], 0x0)
	(0, 1419): Wna (fmt.i7[40], 0x0)
	(0, 1420): MALLOC _0.i8
	(0, 1421): MALLOC order.i
	(0, 1422): MALLOC force_no_backtrace.dbg.spill3.i9
	(0, 1423): MALLOC can_unwind.dbg.spill2.i10
	(0, 1424): MALLOC force_no_backtrace.dbg.spill.i11
	(0, 1425): MALLOC can_unwind.dbg.spill.i12
	(0, 1426): MALLOC pieces.dbg.spill1.i13
	(0, 1427): Wna (pieces.dbg.spill1.i13[0], 0x0)
	(0, 1428): MALLOC pieces.dbg.spill.i14
	(0, 1429): Wna (pieces.dbg.spill.i14[0], 0x0)
	(0, 1430): MALLOC location.dbg.spill7.i
	(0, 1431): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1432): MALLOC 
	(0, 1433): Wna (, 0x0)
	(0, 1434): MALLOC location.dbg.spill.i
	(0, 1435): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1436): MALLOC 
	(0, 1437): Wna (, 0x0)
	(0, 1438): MALLOC ok.dbg.spill.i
	(0, 1439): MALLOC val.dbg.spill.i
	(0, 1440): MALLOC new.dbg.spill.i
	(0, 1441): MALLOC old.dbg.spill.i
	(0, 1442): MALLOC dst.dbg.spill.i
	(0, 1443): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1444): MALLOC pi5.i
	(0, 1445): Wna (pi5.i[0], 0x0)
	(0, 1446): Wna (pi5.i[8], 0x0)
	(0, 1447): Wna (pi5.i[16], 0x0)
	(0, 1448): Wna (pi5.i[24], 0x0)
	(0, 1449): Wna (pi5.i[32], 0x0)
	(0, 1450): Wna (pi5.i[40], 0x0)
	(0, 1451): Wna (pi5.i[48], 0x0)
	(0, 1452): Wna (pi5.i[56], 0x0)
	(0, 1453): MALLOC pi.i
	(0, 1454): Wna (pi.i[0], 0x0)
	(0, 1455): Wna (pi.i[8], 0x0)
	(0, 1456): Wna (pi.i[16], 0x0)
	(0, 1457): Wna (pi.i[24], 0x0)
	(0, 1458): Wna (pi.i[32], 0x0)
	(0, 1459): Wna (pi.i[40], 0x0)
	(0, 1460): Wna (pi.i[48], 0x0)
	(0, 1461): Wna (pi.i[56], 0x0)
	(0, 1462): MALLOC fmt4.i
	(0, 1463): Wna (fmt4.i[0], 0x0)
	(0, 1464): Wna (fmt4.i[8], 0x0)
	(0, 1465): Wna (fmt4.i[16], 0x0)
	(0, 1466): Wna (fmt4.i[24], 0x0)
	(0, 1467): Wna (fmt4.i[32], 0x0)
	(0, 1468): Wna (fmt4.i[40], 0x0)
	(0, 1469): MALLOC fmt.i
	(0, 1470): Wna (fmt.i[0], 0x0)
	(0, 1471): Wna (fmt.i[8], 0x0)
	(0, 1472): Wna (fmt.i[16], 0x0)
	(0, 1473): Wna (fmt.i[24], 0x0)
	(0, 1474): Wna (fmt.i[32], 0x0)
	(0, 1475): Wna (fmt.i[40], 0x0)
	(0, 1476): MALLOC _8.i
	(0, 1477): Wna (, 0x0)
	(0, 1478): MALLOC _0.i
	(0, 1479): Wna (, 0x0)
	(0, 1480): MALLOC failure.i
	(0, 1481): MALLOC success.i
	(0, 1482): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1483): MALLOC can_unwind.dbg.spill2.i
	(0, 1484): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1485): MALLOC can_unwind.dbg.spill.i
	(0, 1486): MALLOC pieces.dbg.spill1.i
	(0, 1487): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1488): MALLOC pieces.dbg.spill.i
	(0, 1489): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1490): MALLOC self.dbg.spill5
	(0, 1491): Wna (self.dbg.spill5[0], 0x0)
	(0, 1492): MALLOC self.dbg.spill4
	(0, 1493): Wna (self.dbg.spill4[0], 0x0)
	(0, 1494): MALLOC new.dbg.spill
	(0, 1495): MALLOC self.dbg.spill3
	(0, 1496): Wna (self.dbg.spill3[0], 0x0)
	(0, 1497): MALLOC state.dbg.spill
	(0, 1498): MALLOC self.dbg.spill2
	(0, 1499): Wna (self.dbg.spill2[0], 0x0)
	(0, 1500): MALLOC self.dbg.spill1
	(0, 1501): Wna (self.dbg.spill1[0], 0x0)
	(0, 1502): MALLOC self.dbg.spill
	(0, 1503): Wna (self.dbg.spill[0], 0x0)
	(0, 1504): MALLOC _6
	(0, 1505): Wna (, 0x0)
	(0, 1506): MALLOC failure.dbg.spill
	(0, 1507): MALLOC success.dbg.spill
	(0, 1508): MALLOC order.dbg.spill
	(0, 1509): Wna (order.dbg.spill[0], 0)
	(0, 1510): Wna (success.dbg.spill[0], 2)
	(0, 1511): Wna (failure.dbg.spill[0], 0)
	(0, 1512): Wna (self.dbg.spill[0], 0x20)
	(0, 1513): Wna (self.dbg.spill1[0], 0x20)
	(0, 1514): Wna (self.dbg.spill2[0], 0x20)
	(0, 1515): Wna (pieces.dbg.spill.i14[0], 0x8000000000000b30)
	(0, 1516): Wna (pieces.dbg.spill1.i13[0], 0x8000000000000b70)
	(0, 1517): Wna (can_unwind.dbg.spill.i12[0], 1)
	(0, 1518): Wna (force_no_backtrace.dbg.spill.i11[0], 0)
	(0, 1519): Wna (can_unwind.dbg.spill2.i10[0], 1)
	(0, 1520): Wna (force_no_backtrace.dbg.spill3.i9[0], 0)
	(0, 1521): Wna (order.i[0], 0)
	(0, 1522): Wna (dst.dbg.spill.i3[0], 0x20)
	(0, 1523): Rna (order.i[0], 0) [(0, 1521)]
	(0, 1524): Rrlx (, 0) [(0, 1236)]
	(0, 1525): Wna (, 0)
	(0, 1526): Rna (, 0) [(0, 1525)]
	(0, 1527): Wna (state.dbg.spill[0], 0)
	(0, 1528): Wna (self.dbg.spill3[0], 0x20)
	(0, 1529): Wna (new.dbg.spill[0], 1)
	(0, 1530): Wna (self.dbg.spill4[0], 0x20)
	(0, 1531): Wna (pieces.dbg.spill.i[0], 0x8000000000000ae8)
	(0, 1532): Wna (pieces.dbg.spill1.i[0], 0x8000000000000aa0)
	(0, 1533): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 1534): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 1535): Wna (can_unwind.dbg.spill2.i[0], 1)
	(0, 1536): Wna (force_no_backtrace.dbg.spill3.i[0], 0)
	(0, 1537): Wna (success.i[0], 2)
	(0, 1538): Wna (failure.i[0], 0)
	(0, 1539): Wna (dst.dbg.spill.i[0], 0x20)
	(0, 1540): Wna (old.dbg.spill.i[0], 0)
	(0, 1541): Wna (new.dbg.spill.i[0], 1)
	(0, 1542): Rna (success.i[0], 2) [(0, 1537)]
	(0, 1543): Rna (failure.i[0], 0) [(0, 1538)]
	(0, 1544): CRacq (, 0) [(0, 1236)]
	(0, 1545): CWacq (, 1)
	(0, 1546): Wna (, 0)
	(0, 1547): Wna (, 1)
	(0, 1548): Rna (, 0) [(0, 1546)]
	(0, 1549): Wna (val.dbg.spill.i[0], 0)
	(0, 1550): Rna (, 1) [(0, 1547)]
	(0, 1551): Wna (ok.dbg.spill.i[0], 1)
	(0, 1552): Wna (, 0)
	(0, 1553): Wna (, 0)
	(0, 1554): Rna (, 0) [(0, 1553)]
	(0, 1555): Rna (, 0) [(0, 1552)]
	(0, 1556): Wna (, 0)
	(0, 1557): Wna (, 0)
	(0, 1558): Wna (self.dbg.spill5[0], 0x40000000000019a4)
	(0, 1559): Rna (, 0) [(0, 1556)]
	(0, 1560): FREE
	(0, 1561): FREE
	(0, 1562): FREE
	(0, 1563): FREE
	(0, 1564): FREE
	(0, 1565): FREE
	(0, 1566): FREE
	(0, 1567): FREE
	(0, 1568): FREE
	(0, 1569): FREE
	(0, 1570): FREE
	(0, 1571): FREE
	(0, 1572): FREE
	(0, 1573): FREE
	(0, 1574): FREE
	(0, 1575): FREE
	(0, 1576): FREE
	(0, 1577): FREE
	(0, 1578): FREE
	(0, 1579): FREE
	(0, 1580): FREE
	(0, 1581): FREE
	(0, 1582): FREE
	(0, 1583): FREE
	(0, 1584): FREE
	(0, 1585): FREE
	(0, 1586): FREE
	(0, 1587): FREE
	(0, 1588): FREE
	(0, 1589): FREE
	(0, 1590): FREE
	(0, 1591): FREE
	(0, 1592): FREE
	(0, 1593): FREE
	(0, 1594): FREE
	(0, 1595): FREE
	(0, 1596): FREE
	(0, 1597): FREE
	(0, 1598): FREE
	(0, 1599): FREE
	(0, 1600): FREE
	(0, 1601): FREE
	(0, 1602): FREE
	(0, 1603): FREE
	(0, 1604): FREE
	(0, 1605): FREE
	(0, 1606): FREE
	(0, 1607): FREE
	(0, 1608): FREE
	(0, 1609): FREE
	(0, 1610): FREE
	(0, 1611): FREE
	(0, 1612): MALLOC location.dbg.spill7.i
	(0, 1613): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1614): MALLOC 
	(0, 1615): Wna (, 0x0)
	(0, 1616): MALLOC location.dbg.spill.i
	(0, 1617): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1618): MALLOC 
	(0, 1619): Wna (, 0x0)
	(0, 1620): MALLOC dst.dbg.spill.i
	(0, 1621): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1622): MALLOC pi5.i
	(0, 1623): Wna (pi5.i[0], 0x0)
	(0, 1624): Wna (pi5.i[8], 0x0)
	(0, 1625): Wna (pi5.i[16], 0x0)
	(0, 1626): Wna (pi5.i[24], 0x0)
	(0, 1627): Wna (pi5.i[32], 0x0)
	(0, 1628): Wna (pi5.i[40], 0x0)
	(0, 1629): Wna (pi5.i[48], 0x0)
	(0, 1630): Wna (pi5.i[56], 0x0)
	(0, 1631): MALLOC pi.i
	(0, 1632): Wna (pi.i[0], 0x0)
	(0, 1633): Wna (pi.i[8], 0x0)
	(0, 1634): Wna (pi.i[16], 0x0)
	(0, 1635): Wna (pi.i[24], 0x0)
	(0, 1636): Wna (pi.i[32], 0x0)
	(0, 1637): Wna (pi.i[40], 0x0)
	(0, 1638): Wna (pi.i[48], 0x0)
	(0, 1639): Wna (pi.i[56], 0x0)
	(0, 1640): MALLOC fmt4.i
	(0, 1641): Wna (fmt4.i[0], 0x0)
	(0, 1642): Wna (fmt4.i[8], 0x0)
	(0, 1643): Wna (fmt4.i[16], 0x0)
	(0, 1644): Wna (fmt4.i[24], 0x0)
	(0, 1645): Wna (fmt4.i[32], 0x0)
	(0, 1646): Wna (fmt4.i[40], 0x0)
	(0, 1647): MALLOC fmt.i
	(0, 1648): Wna (fmt.i[0], 0x0)
	(0, 1649): Wna (fmt.i[8], 0x0)
	(0, 1650): Wna (fmt.i[16], 0x0)
	(0, 1651): Wna (fmt.i[24], 0x0)
	(0, 1652): Wna (fmt.i[32], 0x0)
	(0, 1653): Wna (fmt.i[40], 0x0)
	(0, 1654): MALLOC _0.i
	(0, 1655): MALLOC order.i
	(0, 1656): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1657): MALLOC can_unwind.dbg.spill2.i
	(0, 1658): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1659): MALLOC can_unwind.dbg.spill.i
	(0, 1660): MALLOC pieces.dbg.spill1.i
	(0, 1661): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1662): MALLOC pieces.dbg.spill.i
	(0, 1663): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1664): MALLOC self.dbg.spill4
	(0, 1665): Wna (self.dbg.spill4[0], 0x0)
	(0, 1666): MALLOC self.dbg.spill2
	(0, 1667): Wna (self.dbg.spill2[0], 0x0)
	(0, 1668): MALLOC self.dbg.spill
	(0, 1669): Wna (self.dbg.spill[0], 0x0)
	(0, 1670): MALLOC lock.dbg.spill
	(0, 1671): Wna (lock.dbg.spill[0], 0x0)
	(0, 1672): MALLOC _2
	(0, 1673): MALLOC order.dbg.spill
	(0, 1674): Wna (order.dbg.spill[0], 0)
	(0, 1675): Wna (lock.dbg.spill[0], 0x20)
	(0, 1676): Wna (self.dbg.spill[0], 0x28)
	(0, 1677): Wna (self.dbg.spill2[0], 0x28)
	(0, 1678): Wna (self.dbg.spill4[0], 0x28)
	(0, 1679): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30)
	(0, 1680): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70)
	(0, 1681): Wna (can_unwind.dbg.spill.i[0], 1)
	(0, 1682): Wna (force_no_backtrace.dbg.spill.i[0], 0)
	(0, 1683): Wna (can_unwind.dbg.spill2.i[0], 1)
	(0, 1684): Wna (force_no_backtrace.dbg.spill3.i[0], 0)
	(0, 1685): Wna (order.i[0], 0)
	(0, 1686): Wna (dst.dbg.spill.i[0], 0x28)
	(0, 1687): Rna (order.i[0], 0) [(0, 1685)]
	(0, 1688): Rrlx (, 0) [(0, 505)]
	(0, 1689): Wna (, 0)
	(0, 1690): Wna (, 0)
	(0, 1691): Rna (, 0) [(0, 1690)]
	(0, 1692): MALLOC guard.dbg.spill1
	(0, 1693): Wna (guard.dbg.spill1[0], 0x0)
	(0, 1694): Wna (guard.dbg.spill1[8], 0x0)
	(0, 1695): MALLOC f.dbg.spill
	(0, 1696): Wna (f.dbg.spill[0], 0x0)
	(0, 1697): MALLOC result
	(0, 1698): Wna (result[0], 0)
	(0, 1699): Wna (f.dbg.spill[0], 0x20)
	(0, 1700): Rna (result[0], 0) [(0, 1698)]
	(0, 1701): MALLOC ptr.dbg.spill
	(0, 1702): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1703): MALLOC self.dbg.spill
	(0, 1704): Wna (self.dbg.spill[0], 0x0)
	(0, 1705): MALLOC _1.dbg.spill
	(0, 1706): Wna (_1.dbg.spill[0], 0x0)
	(0, 1707): Wna (_1.dbg.spill[0], 0x20)
	(0, 1708): Wna (self.dbg.spill[0], 0x29)
	(0, 1709): Wna (ptr.dbg.spill[0], 0x29)
	(0, 1710): MALLOC ptr.dbg.spill1
	(0, 1711): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 1712): MALLOC ptr.dbg.spill
	(0, 1713): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1714): Wna (ptr.dbg.spill[0], 0x29)
	(0, 1715): Wna (ptr.dbg.spill1[0], 0x29)
	(0, 1716): FREE
	(0, 1717): FREE
	(0, 1718): FREE
	(0, 1719): FREE
	(0, 1720): FREE
	(0, 1721): Wna (_14[8], 0x29)
	(0, 1722): Wna (_14[16], 0x20)
	(0, 1723): Wna (_14[0], 0)
	(0, 1724): FREE
	(0, 1725): FREE
	(0, 1726): FREE
	(0, 1727): FREE
	(0, 1728): FREE
	(0, 1729): FREE
	(0, 1730): FREE
	(0, 1731): FREE
	(0, 1732): FREE
	(0, 1733): FREE
	(0, 1734): FREE
	(0, 1735): FREE
	(0, 1736): FREE
	(0, 1737): FREE
	(0, 1738): FREE
	(0, 1739): FREE
	(0, 1740): FREE
	(0, 1741): FREE
	(0, 1742): FREE
	(0, 1743): FREE
	(0, 1744): FREE
	(0, 1745): FREE
	(0, 1746): FREE
	(0, 1747): FREE
	(0, 1748): FREE
	(0, 1749): FREE
	(0, 1750): FREE
	(0, 1751): Rna (_14[0], 0) [(0, 1723)]
	(0, 1752): Rna (_14[8], 0x29) [(0, 1721)]
	(0, 1753): Rna (_14[16], 0x20) [(0, 1722)]
	(0, 1754): Wna (t.dbg.spill.i[0], 0x29)
	(0, 1755): Wna (t.dbg.spill.i[8], 0x20)
	(0, 1756): Wna (, 0x29)
	(0, 1757): Wna (, 0x20)
	(0, 1758): MALLOC self.dbg.spill4
	(0, 1759): Wna (self.dbg.spill4[0], 0x0)
	(0, 1760): MALLOC self.dbg.spill3
	(0, 1761): Wna (self.dbg.spill3[0], 0x0)
	(0, 1762): MALLOC self.dbg.spill1
	(0, 1763): Wna (self.dbg.spill1[0], 0x0)
	(0, 1764): MALLOC self.dbg.spill
	(0, 1765): Wna (self.dbg.spill[0], 0x0)
	(0, 1766): Wna (self.dbg.spill[0], 0x4000000000000520)
	(0, 1767): Wna (self.dbg.spill1[0], 0x4000000000000520)
	(0, 1768): Rna (, 0x29) [(0, 1756)]
	(0, 1769): Wna (self.dbg.spill3[0], 0x29)
	(0, 1770): Wna (self.dbg.spill4[0], 0x29)
	(0, 1771): FREE
	(0, 1772): FREE
	(0, 1773): FREE
	(0, 1774): FREE
	(0, 1775): Wna (left_val.dbg.spill[0], 0x29)
	(0, 1776): Wna (right_val.dbg.spill[0], 0x8000000000001b9e)
	(0, 1777): Rna (, 1) [(0, 1090)]
	(0, 1778): MALLOC _1.dbg.spill
	(0, 1779): Wna (_1.dbg.spill[0], 0x0)
	(0, 1780): Wna (_1.dbg.spill[0], 0x4000000000000520)
	(0, 1781): MALLOC state.dbg.spill
	(0, 1782): MALLOC 
	(0, 1783): MALLOC dst.dbg.spill
	(0, 1784): Wna (dst.dbg.spill[0], 0x0)
	(0, 1785): MALLOC self.dbg.spill6
	(0, 1786): Wna (self.dbg.spill6[0], 0x0)
	(0, 1787): MALLOC self.dbg.spill5
	(0, 1788): Wna (self.dbg.spill5[0], 0x0)
	(0, 1789): MALLOC self.dbg.spill4
	(0, 1790): Wna (self.dbg.spill4[0], 0x0)
	(0, 1791): MALLOC self.dbg.spill
	(0, 1792): Wna (self.dbg.spill[0], 0x0)
	(0, 1793): MALLOC order.dbg.spill2
	(0, 1794): MALLOC val.dbg.spill1
	(0, 1795): MALLOC order.dbg.spill
	(0, 1796): MALLOC val.dbg.spill
	(0, 1797): Wna (val.dbg.spill[0], 1)
	(0, 1798): Wna (order.dbg.spill[0], 1)
	(0, 1799): Wna (val.dbg.spill1[0], 1)
	(0, 1800): Wna (order.dbg.spill2[0], 1)
	(0, 1801): Wna (self.dbg.spill[0], 0x4000000000000520)
	(0, 1802): Rna (, 0x20) [(0, 1757)]
	(0, 1803): Wna (self.dbg.spill4[0], 0x20)
	(0, 1804): Wna (self.dbg.spill5[0], 0x20)
	(0, 1805): Wna (self.dbg.spill6[0], 0x20)
	(0, 1806): Wna (dst.dbg.spill[0], 0x20)
	(0, 1807): URrel (, 1) [(0, 1545)]
	(0, 1808): UWrel (, 0)
	(0, 1809): Wna (, 1)
	(0, 1810): Rna (, 1) [(0, 1809)]
	(0, 1811): Wna (state.dbg.spill[0], 0)
	(0, 1812): FREE
	(0, 1813): FREE
	(0, 1814): FREE
	(0, 1815): FREE
	(0, 1816): FREE
	(0, 1817): FREE
	(0, 1818): FREE
	(0, 1819): FREE
	(0, 1820): FREE
	(0, 1821): FREE
	(0, 1822): FREE
	(0, 1823): FREE
	(0, 1824): MALLOC t.dbg.spill
	(0, 1825): MALLOC _6
	(0, 1826): MALLOC _5
	(0, 1827): MALLOC _2
	(0, 1828): Wna (, 0x0)
	(0, 1829): MALLOC value.dbg.spill4
	(0, 1830): MALLOC v.dbg.spill3
	(0, 1831): MALLOC value.dbg.spill2
	(0, 1832): MALLOC v.dbg.spill1
	(0, 1833): MALLOC value.dbg.spill
	(0, 1834): MALLOC v.dbg.spill
	(0, 1835): Wna (v.dbg.spill[0], 0)
	(0, 1836): Wna (value.dbg.spill[0], 0)
	(0, 1837): Wna (v.dbg.spill1[0], 0)
	(0, 1838): Wna (value.dbg.spill2[0], 0)
	(0, 1839): Wna (v.dbg.spill3[0], 0)
	(0, 1840): Wna (value.dbg.spill4[0], 0)
	(0, 1841): Wna (t.dbg.spill[0], 0)
	(0, 1842): Wna (, 0)
	(0, 1843): Rna (, 0) [(0, 1842)]
	(0, 1844): Wna (, 0)
	(0, 1845): Rna (, 0) [(0, 1842)]
	(0, 1846): Wna (, 0)
	(0, 1847): Wna (, 0)
	(0, 1848): Rna (, 0) [(0, 1846)(0, 1844)]
	(0, 1849): Wna (, 0)
	(0, 1850): Rna (, 0) [(0, 1847)]
	(0, 1851): Wna (, 0)
	(0, 1852): Wna (, 0)
	(0, 1853): FREE
	(0, 1854): FREE
	(0, 1855): FREE
	(0, 1856): FREE
	(0, 1857): FREE
	(0, 1858): FREE
	(0, 1859): FREE
	(0, 1860): FREE
	(0, 1861): FREE
	(0, 1862): FREE
	(0, 1863): MALLOC 
	(0, 1864): Wna (, 0x0)
	(0, 1865): Wna (, 0x0)
	(0, 1866): MALLOC ptr.dbg.spill5
	(0, 1867): Wna (ptr.dbg.spill5[0], 0x0)
	(0, 1868): MALLOC src.dbg.spill
	(0, 1869): Wna (src.dbg.spill[0], 0x0)
	(0, 1870): MALLOC self.dbg.spill4
	(0, 1871): Wna (self.dbg.spill4[0], 0x0)
	(0, 1872): MALLOC ptr.dbg.spill
	(0, 1873): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1874): MALLOC self.dbg.spill
	(0, 1875): Wna (self.dbg.spill[0], 0x0)
	(0, 1876): MALLOC x.dbg.spill
	(0, 1877): Wna (x.dbg.spill[0], 0x0)
	(0, 1878): MALLOC b
	(0, 1879): Wna (b[0], 0x0)
	(0, 1880): MALLOC _4
	(0, 1881): Wna (, 0x0)
	(0, 1882): MALLOC _3
	(0, 1883): Wna (_3[0], 0x0)
	(0, 1884): Wna (_3[8], 0x0)
	(0, 1885): Wna (_3[16], 0x0)
	(0, 1886): Wna (_3[24], 0x0)
	(0, 1887): MALLOC value.dbg.spill2
	(0, 1888): Wna (value.dbg.spill2[0], 0x0)
	(0, 1889): MALLOC v.dbg.spill1
	(0, 1890): Wna (v.dbg.spill1[0], 0x0)
	(0, 1891): MALLOC value.dbg.spill
	(0, 1892): Wna (value.dbg.spill[0], 0x0)
	(0, 1893): MALLOC v.dbg.spill
	(0, 1894): Wna (v.dbg.spill[0], 0x0)
	(0, 1895): Wna (v.dbg.spill[0], 1)
	(0, 1896): Wna (value.dbg.spill[0], 1)
	(0, 1897): Wna (v.dbg.spill1[0], 1)
	(0, 1898): Wna (value.dbg.spill2[0], 1)
	(0, 1899): Wna (, 1)
	(0, 1900): Rna (, 1) [(0, 1899)]
	(0, 1901): Wna (_3[0], 1)
	(0, 1902): Rna (, 1) [(0, 1899)]
	(0, 1903): Wna (_3[8], 1)
	(0, 1904): Rna (, 0) [(0, 1849)]
	(0, 1905): Wna (_3[16], 0)
	(0, 1906): Rna (, 0) [BOTTOM]
Coherence:
v.dbg.spill[0]: [ (0, 1894): Wna (SU#7576, 0x0) (0, 1895): Wna (SU#7576, 1) ]
value.dbg.spill[0]: [ (0, 1892): Wna (SU#7560, 0x0) (0, 1896): Wna (SU#7560, 1) ]
v.dbg.spill1[0]: [ (0, 1890): Wna (SU#7544, 0x0) (0, 1897): Wna (SU#7544, 1) ]
value.dbg.spill2[0]: [ (0, 1888): Wna (SU#7528, 0x0) (0, 1898): Wna (SU#7528, 1) ]
_3[16]: [ (0, 1885): Wna (SU#7504, 0x0) (0, 1905): Wna (SU#7504, 0) ]
_3[8]: [ (0, 1884): Wna (SU#7496, 0x0) (0, 1903): Wna (SU#7496, 1) ]
_3[0]: [ (0, 1883): Wna (SU#7488, 0x0) (0, 1901): Wna (SU#7488, 1) ]
: [ (0, 1881): Wna (SU#7480, 0x0) (0, 1899): Wna (SU#7480, 1) ]
: [ (0, 1851): Wna (SU#1204, 0) (0, 1852): Wna (SU#1205, 0) ]
: [ (0, 1842): Wna (SU#7300, 0) (0, 1847): Wna (SU#7296, 0) ]
v.dbg.spill3[0]: [ (0, 1839): Wna (SU#7316, 0) (0, 1840): Wna (SU#7315, 0) ]
v.dbg.spill1[0]: [ (0, 1837): Wna (SU#7324, 0) (0, 1838): Wna (SU#7320, 0) ]
: [ (0, 1828): Wna (SU#7304, 0x0) (0, 1844): Wna (SU#7304, 0) (0, 1846): Wna (SU#7308, 0) ]
order.dbg.spill[0]: [ (0, 1798): Wna (SU#7287, 1) (0, 1799): Wna (SU#7280, 1) ]
val.dbg.spill[0]: [ (0, 1797): Wna (SU#7288, 1) (0, 1841): Wna (SU#7295, 0) ]
self.dbg.spill[0]: [ (0, 1792): Wna (SU#7264, 0x0) (0, 1801): Wna (SU#7264, 0x4000000000000520) ]
self.dbg.spill4[0]: [ (0, 1790): Wna (SU#7256, 0x0) (0, 1803): Wna (SU#7256, 0x20) ]
self.dbg.spill5[0]: [ (0, 1788): Wna (SU#7240, 0x0) (0, 1804): Wna (SU#7240, 0x20) ]
self.dbg.spill6[0]: [ (0, 1786): Wna (SU#7224, 0x0) (0, 1805): Wna (SU#7224, 0x20) ]
dst.dbg.spill[0]: [ (0, 1784): Wna (SU#7208, 0x0) (0, 1806): Wna (SU#7208, 0x20) ]
_1.dbg.spill[0]: [ (0, 1779): Wna (SU#7176, 0x0) (0, 1780): Wna (SU#7176, 0x4000000000000520) ]
self.dbg.spill[0]: [ (0, 1765): Wna (SU#7160, 0x0) (0, 1766): Wna (SU#7160, 0x4000000000000520) ]
self.dbg.spill1[0]: [ (0, 1763): Wna (SU#7152, 0x0) (0, 1767): Wna (SU#7152, 0x4000000000000520) ]
self.dbg.spill3[0]: [ (0, 1761): Wna (SU#7136, 0x0) (0, 1769): Wna (SU#7136, 0x29) ]
self.dbg.spill4[0]: [ (0, 1759): Wna (SU#7120, 0x0) (0, 1770): Wna (SU#7120, 0x29) ]
ptr.dbg.spill[0]: [ (0, 1713): Wna (SU#7104, 0x0) (0, 1714): Wna (SU#7104, 0x29) ]
ptr.dbg.spill1[0]: [ (0, 1711): Wna (SU#7088, 0x0) (0, 1715): Wna (SU#7088, 0x29) ]
_1.dbg.spill[0]: [ (0, 1706): Wna (SU#7072, 0x0) (0, 1707): Wna (SU#7072, 0x20) ]
self.dbg.spill[0]: [ (0, 1704): Wna (SU#7056, 0x0) (0, 1708): Wna (SU#7056, 0x29) ]
ptr.dbg.spill[0]: [ (0, 1702): Wna (SU#7040, 0x0) (0, 1709): Wna (SU#7040, 0x29) ]
can_unwind.dbg.spill.i[0]: [ (0, 1681): Wna (SU#6908, 1) (0, 1682): Wna (SU#6907, 0) (0, 1683): Wna (SU#6906, 1) (0, 1684): Wna (SU#6905, 0) (0, 1685): Wna (SU#6904, 0) ]
lock.dbg.spill[0]: [ (0, 1671): Wna (SU#6984, 0x0) (0, 1675): Wna (SU#6984, 0x20) ]
self.dbg.spill[0]: [ (0, 1669): Wna (SU#6976, 0x0) (0, 1676): Wna (SU#6976, 0x28) ]
self.dbg.spill2[0]: [ (0, 1667): Wna (SU#6960, 0x0) (0, 1677): Wna (SU#6960, 0x28) ]
self.dbg.spill4[0]: [ (0, 1665): Wna (SU#6944, 0x0) (0, 1678): Wna (SU#6944, 0x28) ]
pieces.dbg.spill.i[0]: [ (0, 1663): Wna (SU#6928, 0x0) (0, 1679): Wna (SU#6928, 0x8000000000000b30) ]
pieces.dbg.spill1.i[0]: [ (0, 1661): Wna (SU#6912, 0x0) (0, 1680): Wna (SU#6912, 0x8000000000000b70) ]
dst.dbg.spill.i[0]: [ (0, 1621): Wna (SU#6640, 0x0) (0, 1686): Wna (SU#6640, 0x28) ]
success.i[0]: [ (0, 1537): Wna (SU#6423, 2) (0, 1538): Wna (SU#6422, 0) (0, 1552): Wna (SU#6416, 0) ]
can_unwind.dbg.spill.i[0]: [ (0, 1533): Wna (SU#6427, 1) (0, 1534): Wna (SU#6426, 0) (0, 1535): Wna (SU#6425, 1) (0, 1536): Wna (SU#6424, 0) ]
can_unwind.dbg.spill.i12[0]: [ (0, 1517): Wna (SU#6020, 1) (0, 1518): Wna (SU#6019, 0) (0, 1519): Wna (SU#6018, 1) (0, 1520): Wna (SU#6017, 0) (0, 1521): Wna (SU#6016, 0) ]
order.dbg.spill[0]: [ (0, 1509): Wna (SU#6575, 0) (0, 1510): Wna (SU#6574, 2) (0, 1511): Wna (SU#6573, 0) (0, 1557): Wna (SU#6568, 0) ]
: [ (0, 1505): Wna (SU#6564, 0x0) (0, 1556): Wna (SU#6564, 0) ]
self.dbg.spill[0]: [ (0, 1503): Wna (SU#6552, 0x0) (0, 1512): Wna (SU#6552, 0x20) ]
self.dbg.spill1[0]: [ (0, 1501): Wna (SU#6536, 0x0) (0, 1513): Wna (SU#6536, 0x20) ]
self.dbg.spill2[0]: [ (0, 1499): Wna (SU#6520, 0x0) (0, 1514): Wna (SU#6520, 0x20) ]
self.dbg.spill3[0]: [ (0, 1496): Wna (SU#6496, 0x0) (0, 1528): Wna (SU#6496, 0x20) ]
self.dbg.spill4[0]: [ (0, 1493): Wna (SU#6480, 0x0) (0, 1530): Wna (SU#6480, 0x20) ]
self.dbg.spill5[0]: [ (0, 1491): Wna (SU#6464, 0x0) (0, 1558): Wna (SU#6464, 0x40000000000019a4) ]
pieces.dbg.spill.i[0]: [ (0, 1489): Wna (SU#6448, 0x0) (0, 1531): Wna (SU#6448, 0x8000000000000ae8) ]
pieces.dbg.spill1.i[0]: [ (0, 1487): Wna (SU#6432, 0x0) (0, 1532): Wna (SU#6432, 0x8000000000000aa0) ]
: [ (0, 1479): Wna (SU#6412, 0x0) (0, 1553): Wna (SU#6412, 0) ]
: [ (0, 1477): Wna (SU#6400, 0x0) (0, 1546): Wna (SU#6400, 0) (0, 1547): Wna (SU#6404, 1) ]
dst.dbg.spill.i[0]: [ (0, 1443): Wna (SU#6136, 0x0) (0, 1539): Wna (SU#6136, 0x20) ]
_1.dbg.spill[0]: [ (0, 602): Wna (SU#2752, 0x0) (0, 603): Wna (SU#2752, 0x4000000000000aa0) ]
val.dbg.spill[0]: [ (0, 556): Wna (SU#2688, 0x0) (0, 557): Wna (SU#2688, 1) ]
self.dbg.spill8[0]: [ (0, 540): Wna (SU#2584, 0x0) (0, 567): Wna (SU#2584, 0x10) ]
dst.dbg.spill[0]: [ (0, 538): Wna (SU#2568, 0x0) (0, 568): Wna (SU#2568, 0x10) ]
: [ (0, 536): Wna (SU#2552, 0x0) (0, 571): Wna (SU#2552, 1) ]
old_size.dbg.spill[0]: [ (0, 534): Wna (SU#2536, 0x0) (0, 573): Wna (SU#2536, 1) ]
ptr.dbg.spill[0]: [ (0, 532): Wna (SU#2520, 0x0) (0, 575): Wna (SU#2520, 0x10) ]
f.dbg.spill[0]: [ (0, 1696): Wna (SU#7024, 0x0) (0, 1699): Wna (SU#7024, 0x20) ]
: [ (0, 505): Wna (HU#40, 0) (0, 507): Wna (HU#41, 0) (0, 1090): Wna (HU#41, 1) ]
ptr.dbg.spill[0]: [ (0, 430): Wna (SU#2504, 0x0) (0, 431): Wna (SU#2504, 0x10) ]
ptr.dbg.spill1[0]: [ (0, 428): Wna (SU#2488, 0x0) (0, 432): Wna (SU#2488, 0x10) ]
ptr.dbg.spill1[0]: [ (0, 408): Wna (SU#2464, 0x0) (0, 412): Wna (SU#2464, 0x10) ]
len.dbg.spill[0]: [ (0, 382): Wna (SU#2448, 0x0) (0, 383): Wna (SU#2448, 0) ]
layout[8]: [ (0, 376): Wna (SU#2400, 0x0) (0, 387): Wna (SU#2400, 32) ]
self6[0]: [ (0, 360): Wna (SU#2280, 0x0) (0, 418): Wna (SU#2280, 0x10) ]
self.dbg.spill14[0]: [ (0, 328): Wna (SU#2048, 0x0) (0, 397): Wna (SU#2048, 0x4000000000000908) ]
self.dbg.spill15[0]: [ (0, 326): Wna (SU#2032, 0x0) (0, 398): Wna (SU#2032, 0x4000000000000908) ]
self.dbg.spill17[0]: [ (0, 324): Wna (SU#2016, 0x0) (0, 400): Wna (SU#2016, 8) ]
ptr.dbg.spill23[0]: [ (0, 316): Wna (SU#1952, 0x0) (0, 406): Wna (SU#1952, 0x10) ]
v.dbg.spill[0]: [ (0, 314): Wna (SU#1936, 0x0) (0, 417): Wna (SU#1936, 0x10) ]
v.dbg.spill25[0]: [ (0, 312): Wna (SU#1928, 0x0) (0, 420): Wna (SU#1928, 0x10) ]
ptr.dbg.spill27[0]: [ (0, 310): Wna (SU#1912, 0x0) (0, 423): Wna (SU#1912, 0x10) ]
data.dbg.spill[0]: [ (0, 308): Wna (SU#1896, 0x0) (0, 424): Wna (SU#1896, 0x10) ]
ptr.dbg.spill28[8]: [ (0, 306): Wna (SU#1880, 0x0) (0, 426): Wna (SU#1880, 32) ]
ptr.dbg.spill28[0]: [ (0, 305): Wna (SU#1872, 0x0) (0, 425): Wna (SU#1872, 0x10) ]
self.dbg.spill[0]: [ (0, 297): Wna (SU#1856, 0x0) (0, 298): Wna (SU#1856, 0x1) ]
: [ (0, 295): Wna (SU#1840, 0x0) (0, 477): Wna (SU#1840, 32) ]
: [ (0, 294): Wna (SU#1832, 0x0) (0, 476): Wna (SU#1832, 0x10) ]
size.dbg.spill[0]: [ (0, 287): Wna (SU#1784, 0x0) (0, 299): Wna (SU#1784, 32) ]
align.dbg.spill[0]: [ (0, 285): Wna (SU#1768, 0x0) (0, 300): Wna (SU#1768, 8) ]
self.dbg.spill1[0]: [ (0, 283): Wna (SU#1752, 0x0) (0, 301): Wna (SU#1752, 8) ]
layout.dbg.spill[8]: [ (0, 281): Wna (SU#1736, 0x0) (0, 303): Wna (SU#1736, 32) ]
layout.dbg.spill[0]: [ (0, 280): Wna (SU#1728, 0x0) (0, 302): Wna (SU#1728, 8) ]
ptr.dbg.spill[8]: [ (0, 278): Wna (SU#1712, 0x0) (0, 482): Wna (SU#1712, 32) ]
pieces.dbg.spill.i14[0]: [ (0, 1429): Wna (SU#6040, 0x0) (0, 1515): Wna (SU#6040, 0x8000000000000b30) ]
ptr.dbg.spill[0]: [ (0, 277): Wna (SU#1704, 0x0) (0, 481): Wna (SU#1704, 0x10) ]
self.dbg.spill2[0]: [ (0, 275): Wna (SU#1688, 0x0) (0, 483): Wna (SU#1688, 0x10) ]
v.dbg.spill[0]: [ (0, 252): Wna (SU#1648, 0x0) (0, 253): Wna (SU#1648, 1) ]
value.dbg.spill[0]: [ (0, 250): Wna (SU#1632, 0x0) (0, 254): Wna (SU#1632, 1) ]
v.dbg.spill1[0]: [ (0, 248): Wna (SU#1616, 0x0) (0, 255): Wna (SU#1616, 1) ]
value.dbg.spill2[0]: [ (0, 246): Wna (SU#1600, 0x0) (0, 256): Wna (SU#1600, 1) ]
_3[24]: [ (0, 244): Wna (SU#1584, 0x0) (0, 267): Wna (SU#1584, 0) (0, 269): Wna (SU#1585, 0) ]
_3[16]: [ (0, 243): Wna (SU#1576, 0x0) (0, 263): Wna (SU#1576, 0) (0, 265): Wna (SU#1580, 0) ]
_3[8]: [ (0, 242): Wna (SU#1568, 0x0) (0, 261): Wna (SU#1568, 1) ]
_3[0]: [ (0, 241): Wna (SU#1560, 0x0) (0, 259): Wna (SU#1560, 1) ]
: [ (0, 239): Wna (SU#1544, 0x0) (0, 257): Wna (SU#1544, 1) ]
b[0]: [ (0, 237): Wna (SU#1528, 0x0) (0, 509): Wna (SU#1528, 0x10) ]
x.dbg.spill[0]: [ (0, 235): Wna (SU#1512, 0x0) (0, 508): Wna (SU#1512, 0x10) ]
self.dbg.spill[0]: [ (0, 233): Wna (SU#1504, 0x0) (0, 510): Wna (SU#1504, 0x40000000000005f8) ]
ptr.dbg.spill[0]: [ (0, 231): Wna (SU#1488, 0x0) (0, 512): Wna (SU#1488, 0x10) ]
self.dbg.spill4[0]: [ (0, 229): Wna (SU#1472, 0x0) (0, 513): Wna (SU#1472, 0x40000000000005f8) ]
src.dbg.spill[0]: [ (0, 227): Wna (SU#1456, 0x0) (0, 514): Wna (SU#1456, 0x4000000000000600) ]
ptr.dbg.spill5[0]: [ (0, 225): Wna (SU#1440, 0x0) (0, 515): Wna (SU#1440, 0x10) ]
dst.dbg.spill.i[0]: [ (0, 1125): Wna (SU#5000, 0x0) (0, 1199): Wna (SU#5000, 0x8000000000000000) ]
self.dbg.spill[0]: [ (0, 550): Wna (SU#2656, 0x0) (0, 561): Wna (SU#2656, 0x4000000000000548) ]
self.dbg.spill[0]: [ (0, 1105): Wna (SU#4904, 0x0) (0, 1114): Wna (SU#4904, 0x4000000000000cf8) ]
result[1]: [ (0, 1021): Wna (SU#4768, 0) (0, 1030): Wna (SU#4769, 0) ]
f.dbg.spill[0]: [ (0, 1018): Wna (SU#4752, 0x0) (0, 1022): Wna (SU#4752, 0x20) ]
ptr.dbg.spill[0]: [ (0, 410): Wna (SU#2472, 0x0) (0, 411): Wna (SU#2472, 0x10) ]
dst.dbg.spill.i3[0]: [ (0, 1387): Wna (SU#5744, 0x0) (0, 1522): Wna (SU#5744, 0x20) ]
self.dbg.spill[0]: [ (0, 926): Wna (SU#4712, 0x0) (0, 933): Wna (SU#4712, 0x28) ]
len.dbg.spill1[0]: [ (0, 380): Wna (SU#2432, 0x0) (0, 384): Wna (SU#2432, 0) ]
metadata.dbg.spill[0]: [ (0, 378): Wna (SU#2416, 0x0) (0, 385): Wna (SU#2416, 0) ]
: [ (0, 186): Wna (SU#1376, 0x0) (0, 202): Wna (SU#1376, 0) (0, 204): Wna (SU#1380, 0) ]
self.dbg.spill3[0]: [ (0, 922): Wna (SU#4680, 0x0) (0, 935): Wna (SU#4680, 0x8000000000000000) ]
layout[0]: [ (0, 375): Wna (SU#2392, 0x0) (0, 386): Wna (SU#2392, 8) ]
self.dbg.spill4[0]: [ (0, 919): Wna (SU#4664, 0x0) (0, 951): Wna (SU#4664, 0x28) ]
drop_flag[0]: [ (0, 181): Wna (SU#1352, 0x0) (0, 530): Wna (SU#1352, 0x10) ]
: [ (0, 209): Wna (SU#1344, 0) (0, 210): Wna (SU#1345, 0) ]
self.dbg.spill[0]: [ (0, 1376): Wna (SU#5672, 0x0) (0, 1377): Wna (SU#5672, 0x20) ]
val.dbg.spill1[0]: [ (0, 553): Wna (SU#2672, 0x0) (0, 559): Wna (SU#2672, 1) ]
self.dbg.spill3[0]: [ (0, 548): Wna (SU#2640, 0x0) (0, 562): Wna (SU#2640, 0x4000000000000548) ]
: [ (0, 345): Wna (SU#2168, 0x0) (0, 401): Wna (SU#2168, 8) ]
self.dbg.spill13.i[0]: [ (0, 1285): Wna (SU#5456, 0x0) (0, 1328): Wna (SU#5456, 0x10) ]
self.dbg.spill5[0]: [ (0, 546): Wna (SU#2624, 0x0) (0, 564): Wna (SU#2624, 0x10) ]
self.dbg.spill3[0]: [ (0, 1103): Wna (SU#4896, 0x0) (0, 1231): Wna (SU#4896, 0x20) ]
: [ (0, 501): Wna (HU#32, 0) (0, 503): Wna (HU#36, 0) (0, 796): CWacq (HU#32, 1073741823) (0, 1236): UWrel (HU#32, 0) (0, 1545): CWacq (HU#32, 1) (0, 1808): UWrel (HU#32, 0) ]
self.dbg.spill9[0]: [ (0, 340): Wna (SU#2136, 0x0) (0, 390): Wna (SU#2136, 0x4000000000000958) ]
self.dbg.spill[0]: [ (0, 343): Wna (SU#2152, 0x0) (0, 388): Wna (SU#2152, 0x1) ]
self.dbg.spill14.i[0]: [ (0, 1283): Wna (SU#5440, 0x0) (0, 1329): Wna (SU#5440, 0x10) ]
self.dbg.spill6[0]: [ (0, 544): Wna (SU#2608, 0x0) (0, 565): Wna (SU#2608, 0x10) ]
self.dbg.spill4[0]: [ (0, 1101): Wna (SU#4880, 0x0) (0, 1232): Wna (SU#4880, 0x20) ]
: [ (0, 497): Wna (HU#16, 1) (0, 570): UWrlx (HU#16, 2) (0, 1332): UWrel (HU#16, 1) ]
size.dbg.spill[0]: [ (0, 338): Wna (SU#2120, 0x0) (0, 392): Wna (SU#2120, 32) ]
dst.dbg.spill.i[0]: [ (0, 1281): Wna (SU#5424, 0x0) (0, 1330): Wna (SU#5424, 0x10) ]
: [ (0, 372): Wna (SU#2368, 0x0) (0, 435): Wna (SU#2368, 0x10) ]
self.dbg.spill7[0]: [ (0, 542): Wna (SU#2592, 0x0) (0, 566): Wna (SU#2592, 0x10) ]
self.dbg.spill5[0]: [ (0, 1099): Wna (SU#4864, 0x0) (0, 1233): Wna (SU#4864, 0x20) ]
raw_ptr[0]: [ (0, 370): Wna (SU#2352, 0x0) (0, 404): Wna (SU#2352, 0x10) ]
: [ (0, 177): Wna (SU#1312, 0x0) (0, 1756): Wna (SU#1312, 0x29) ]
self.dbg.spill1[0]: [ (0, 1363): Wna (SU#5640, 0x0) (0, 1367): Wna (SU#5640, 0x4000000000000548) ]
dst.dbg.spill[0]: [ (0, 1097): Wna (SU#4848, 0x0) (0, 1234): Wna (SU#4848, 0x20) ]
self.dbg.spill[0]: [ (0, 1180): Wna (SU#5392, 0x0) (0, 1187): Wna (SU#5392, 0x28) ]
can_unwind.dbg.spill.i[0]: [ (0, 938): Wna (SU#4615, 1) (0, 939): Wna (SU#4614, 0) (0, 940): Wna (SU#4613, 1) (0, 941): Wna (SU#4612, 0) (0, 942): Wna (SU#4611, 0) ]
_14[16]: [ (0, 175): Wna (SU#1296, 0x0) (0, 1722): Wna (SU#1296, 0x20) ]
self.dbg.spill3[0]: [ (0, 1361): Wna (SU#5624, 0x0) (0, 1369): Wna (SU#5624, 0x10) ]
self.dbg.spill11.i[0]: [ (0, 1289): Wna (SU#5480, 0x0) (0, 1326): Wna (SU#5480, 0x10) ]
dropping_struct.dbg.spill[0]: [ (0, 142): Wna (SU#1048, 0x0) (0, 594): Wna (SU#1048, 0x10) ]
guard.dbg.spill[0]: [ (0, 1178): Wna (SU#5376, 0x0) (0, 1188): Wna (SU#5376, 0x4000000000000d00) ]
layout5[8]: [ (0, 365): Wna (SU#2320, 0x0) (0, 396): Wna (SU#2320, 32) ]
_14[0]: [ (0, 173): Wna (SU#1280, 0x0) (0, 1723): Wna (SU#1280, 0) ]
self.dbg.spill4[0]: [ (0, 1359): Wna (SU#5608, 0x0) (0, 1370): Wna (SU#5608, 0x10) ]
order.dbg.spill[0]: [ (0, 1111): Wna (SU#4927, 1) (0, 1112): Wna (SU#4920, 1073741823) ]
_1.dbg.spill[0]: [ (0, 1092): Wna (SU#4816, 0x0) (0, 1093): Wna (SU#4816, 0x4000000000000cf8) ]
left_val.dbg.spill[0]: [ (0, 140): Wna (SU#1032, 0x0) (0, 1775): Wna (SU#1032, 0x29) ]
self.dbg.spill2[0]: [ (0, 1176): Wna (SU#5360, 0x0) (0, 1190): Wna (SU#5360, 0x8000000000000000) ]
self.dbg.spill[0]: [ (0, 1084): Wna (SU#4800, 0x0) (0, 1085): Wna (SU#4800, 0x4000000000000cf8) ]
right_val.dbg.spill[0]: [ (0, 138): Wna (SU#1016, 0x0) (0, 1776): Wna (SU#1016, 0x8000000000001b9e) ]
self.dbg.spill3[0]: [ (0, 1174): Wna (SU#5344, 0x0) (0, 1191): Wna (SU#5344, 0x8000000000000000) ]
self.dbg.spill.i[0]: [ (0, 1293): Wna (SU#5512, 0x0) (0, 1323): Wna (SU#5512, 0x4000000000000aa0) ]
self.dbg.spill[0]: [ (0, 577): Wna (SU#2704, 0x0) (0, 578): Wna (SU#2704, 0x4000000000000550) ]
_x[0]: [ (0, 596): Wna (SU#2720, 0x0) (0, 597): Wna (SU#2720, 0x10) ]
self7[0]: [ (0, 358): Wna (SU#2264, 0x0) (0, 415): Wna (SU#2264, 0x10) ]
: [ (0, 362): Wna (SU#2296, 0x0) (0, 421): Wna (SU#2296, 0x10) ]
val.dbg.spill.i[0]: [ (0, 1308): Wna (SU#5584, 0x0) (0, 1312): Wna (SU#5584, 1) ]
layout5[0]: [ (0, 364): Wna (SU#2312, 0x0) (0, 395): Wna (SU#2312, 8) ]
: [ (0, 906): Wna (SU#4600, 0x0) (0, 946): Wna (SU#4600, 0) ]
_14[8]: [ (0, 174): Wna (SU#1288, 0x0) (0, 1721): Wna (SU#1288, 0x29) ]
pieces.dbg.spill.i[0]: [ (0, 915): Wna (SU#4632, 0x0) (0, 936): Wna (SU#4632, 0x8000000000000b30) ]
: [ (0, 178): Wna (SU#1320, 0x0) (0, 1757): Wna (SU#1320, 0x20) ]
: [ (0, 373): Wna (SU#2376, 0x0) (0, 436): Wna (SU#2376, 32) ]
self.dbg.spill5[0]: [ (0, 917): Wna (SU#4648, 0x0) (0, 952): Wna (SU#4648, 0x28) ]
t.dbg.spill.i[0]: [ (0, 124): Wna (SU#912, 0x0) (0, 1754): Wna (SU#912, 0x29) ]
t.dbg.spill.i[8]: [ (0, 125): Wna (SU#920, 0x0) (0, 1755): Wna (SU#920, 0x20) ]
: [ (0, 1159): Wna (SU#5264, 0x0) (0, 1202): Wna (SU#5264, 0) ]
can_unwind.dbg.spill2.i[0]: [ (0, 1196): Wna (SU#5279, 1) (0, 1197): Wna (SU#5278, 0) (0, 1198): Wna (SU#5277, 0) ]
pieces.dbg.spill1.i[0]: [ (0, 1166): Wna (SU#5288, 0x0) (0, 1193): Wna (SU#5288, 0x8000000000000b70) ]
pieces.dbg.spill.i[0]: [ (0, 1168): Wna (SU#5304, 0x0) (0, 1192): Wna (SU#5304, 0x8000000000000b30) ]
order.dbg.spill[0]: [ (0, 1184): Wna (SU#5404, 0) (0, 1185): Wna (SU#5403, 1) (0, 1186): Wna (SU#5402, 0) ]
self.dbg.spill12.i[0]: [ (0, 1287): Wna (SU#5472, 0x0) (0, 1327): Wna (SU#5472, 0x10) ]
pieces.dbg.spill.i[0]: [ (0, 1301): Wna (SU#5544, 0x0) (0, 1317): Wna (SU#5544, 0x8000000000001748) ]
val.dbg.spill1.i[0]: [ (0, 1305): Wna (SU#5568, 0x0) (0, 1314): Wna (SU#5568, 1) ]
_1.dbg.spill[0]: [ (0, 1310): Wna (SU#5592, 0x0) (0, 1311): Wna (SU#5592, 0x4000000000000aa0) ]
value.dbg.spill2[0]: [ (0, 196): Wna (SU#1388, 0) (0, 197): Wna (SU#1385, 0) (0, 198): Wna (SU#1384, 0) ]
t.dbg.spill[0]: [ (0, 199): Wna (SU#1364, 0) (0, 205): Wna (SU#1365, 0) ]
t.dbg.spill.i[0]: [ (0, 663): Wna (SU#3200, 0x0) (0, 1077): Wna (SU#3200, 0x20) ]
t.dbg.spill.i[8]: [ (0, 664): Wna (SU#3208, 0x0) (0, 1078): Wna (SU#3208, 0) ]
self.dbg.spill[0]: [ (0, 672): Wna (SU#3272, 0x0) (0, 680): Wna (SU#3272, 0x4000000000000aa0) ]
_5[0]: [ (0, 674): Wna (SU#3288, 0x0) (0, 1035): Wna (SU#3288, 0) ]
_5[8]: [ (0, 675): Wna (SU#3296, 0x0) (0, 1033): Wna (SU#3296, 0x20) ]
_5[16]: [ (0, 676): Wna (SU#3304, 0x0) (0, 1034): Wna (SU#3304, 0) ]
: [ (0, 678): Wna (SU#3320, 0x0) (0, 1079): Wna (SU#3320, 0x20) ]
: [ (0, 679): Wna (SU#3328, 0x0) (0, 1080): Wna (SU#3328, 0) ]
self.dbg.spill4[0]: [ (0, 682): Wna (SU#3344, 0x0) (0, 693): Wna (SU#3344, 0x10) ]
self.dbg.spill3[0]: [ (0, 684): Wna (SU#3352, 0x0) (0, 692): Wna (SU#3352, 0x10) ]
self.dbg.spill1[0]: [ (0, 686): Wna (SU#3368, 0x0) (0, 690): Wna (SU#3368, 0x4000000000000aa0) ]
self.dbg.spill[0]: [ (0, 688): Wna (SU#3384, 0x0) (0, 689): Wna (SU#3384, 0x4000000000000aa0) ]
dst.dbg.spill.i[0]: [ (0, 711): Wna (SU#3480, 0x0) (0, 790): Wna (SU#3480, 0x20) ]
: [ (0, 745): Wna (SU#3748, 0x0) (0, 797): Wna (SU#3748, 0) ]
: [ (0, 747): Wna (SU#3760, 0x0) (0, 803): Wna (SU#3764, 0) (0, 804): Wna (SU#3760, 0) ]
pieces.dbg.spill1.i[0]: [ (0, 755): Wna (SU#3776, 0x0) (0, 783): Wna (SU#3776, 0x8000000000000aa0) ]
pieces.dbg.spill.i[0]: [ (0, 757): Wna (SU#3792, 0x0) (0, 782): Wna (SU#3792, 0x8000000000000ae8) ]
self.dbg.spill4[0]: [ (0, 759): Wna (SU#3808, 0x0) (0, 809): Wna (SU#3808, 0x4000000000000f28) ]
self.dbg.spill3[0]: [ (0, 761): Wna (SU#3824, 0x0) (0, 781): Wna (SU#3824, 0x20) ]
self.dbg.spill2[0]: [ (0, 763): Wna (SU#3840, 0x0) (0, 780): Wna (SU#3840, 0x20) ]
self.dbg.spill1[0]: [ (0, 765): Wna (SU#3856, 0x0) (0, 779): Wna (SU#3856, 0x20) ]
self.dbg.spill[0]: [ (0, 767): Wna (SU#3864, 0x0) (0, 778): Wna (SU#3864, 0x20) ]
: [ (0, 769): Wna (SU#3880, 0x0) (0, 807): Wna (SU#3880, 0) (0, 808): Wna (SU#3884, 0) ]
new.dbg.spill[0]: [ (0, 775): Wna (SU#3892, 1073741823) (0, 776): Wna (SU#3891, 2) (0, 777): Wna (SU#3890, 0) ]
can_unwind.dbg.spill.i[0]: [ (0, 784): Wna (SU#3773, 1) (0, 785): Wna (SU#3772, 0) (0, 786): Wna (SU#3771, 1) (0, 787): Wna (SU#3770, 0) (0, 788): Wna (SU#3769, 2) (0, 789): Wna (SU#3768, 0) ]
val.dbg.spill.i[0]: [ (0, 800): Wna (SU#3460, 0) (0, 802): Wna (SU#3457, 1) ]
dst.dbg.spill.i3[0]: [ (0, 820): Wna (SU#3968, 0x0) (0, 960): Wna (SU#3968, 0x28) ]
pieces.dbg.spill1.i14[0]: [ (0, 860): Wna (SU#4240, 0x0) (0, 954): Wna (SU#4240, 0x8000000000000b70) ]
pieces.dbg.spill.i15[0]: [ (0, 862): Wna (SU#4256, 0x0) (0, 953): Wna (SU#4256, 0x8000000000000b30) ]
dst.dbg.spill.i[0]: [ (0, 872): Wna (SU#4336, 0x0) (0, 943): Wna (SU#4336, 0x8000000000000000) ]
pieces.dbg.spill1.i[0]: [ (0, 913): Wna (SU#4616, 0x0) (0, 937): Wna (SU#4616, 0x8000000000000b70) ]
self.dbg.spill2[0]: [ (0, 924): Wna (SU#4696, 0x0) (0, 934): Wna (SU#4696, 0x8000000000000000) ]
order.dbg.spill[0]: [ (0, 931): Wna (SU#4726, 0) (0, 932): Wna (SU#4725, 0) (0, 948): Wna (SU#4722, 1) (0, 964): Wna (SU#4724, 0) (0, 965): Wna (SU#4723, 0) ]
can_unwind.dbg.spill.i13[0]: [ (0, 955): Wna (SU#4238, 1) (0, 956): Wna (SU#4237, 0) (0, 957): Wna (SU#4236, 1) (0, 958): Wna (SU#4235, 0) (0, 959): Wna (SU#4234, 0) (0, 963): Wna (SU#4233, 0) ]
_1.dbg.spill[0]: [ (0, 1028): Wna (SU#4776, 0x0) (0, 1029): Wna (SU#4776, 0x20) ]
self.dbg.spill2[0]: [ (0, 1082): Wna (SU#4792, 0x0) (0, 1087): Wna (SU#4792, 0x29) ]
can_unwind.dbg.spill.i[0]: [ (0, 1194): Wna (SU#5281, 1) (0, 1195): Wna (SU#5280, 0) ]
: [ (0, 1279): Wna (SU#5408, 0x0) (0, 1333): Wna (SU#5408, 2) ]
self.dbg.spill9.i[0]: [ (0, 1291): Wna (SU#5496, 0x0) (0, 1324): Wna (SU#5496, 0x4000000000000aa0) ]
pieces.dbg.spill4.i[0]: [ (0, 1297): Wna (SU#5528, 0x0) (0, 1320): Wna (SU#5528, 0x80000000000017e8) ]
can_unwind.dbg.spill.i[0]: [ (0, 1318): Wna (SU#5543, 1) (0, 1319): Wna (SU#5542, 0) ]
can_unwind.dbg.spill5.i[0]: [ (0, 1321): Wna (SU#5526, 1) (0, 1322): Wna (SU#5525, 0) ]
self.dbg.spill[0]: [ (0, 1365): Wna (SU#5656, 0x0) (0, 1366): Wna (SU#5656, 0x4000000000000548) ]
pieces.dbg.spill1.i13[0]: [ (0, 1427): Wna (SU#6024, 0x0) (0, 1516): Wna (SU#6024, 0x8000000000000b70) ]

GenMC v0.10.1 (LLVM 18.1.7)
Copyright (C) 2024 MPI-SWS. All rights reserved.

*** Compilation complete.
*** Transformation complete.
Error: Attempt to read from uninitialized memory!
Event (0, 1906) in graph:
<-1, 0> test_dropping_struct:
	(0, 1): MALLOC location.dbg.spill.i13
	(0, 2): Wna (location.dbg.spill.i13[0], 0x0)
	(0, 3): MALLOC 
	(0, 4): Wna (, 0x0)
	(0, 5): MALLOC args.dbg.spill.i14
	(0, 6): Wna (args.dbg.spill.i14[0], 0x0)
	(0, 7): MALLOC self.dbg.spill3.i15
	(0, 8): Wna (self.dbg.spill3.i15[0], 0x0)
	(0, 9): MALLOC f.dbg.spill2.i16
	(0, 10): Wna (f.dbg.spill2.i16[0], 0x0)
	(0, 11): MALLOC x.dbg.spill1.i17
	(0, 12): Wna (x.dbg.spill1.i17[0], 0x0)
	(0, 13): MALLOC self.dbg.spill.i18
	(0, 14): Wna (self.dbg.spill.i18[0], 0x0)
	(0, 15): MALLOC f.dbg.spill.i19
	(0, 16): Wna (f.dbg.spill.i19[0], 0x0)
	(0, 17): MALLOC x.dbg.spill.i20
	(0, 18): Wna (x.dbg.spill.i20[0], 0x0)
	(0, 19): MALLOC pi.i21
	(0, 20): Wna (pi.i21[0], 0x0)
	(0, 21): Wna (pi.i21[8], 0x0)
	(0, 22): Wna (pi.i21[16], 0x0)
	(0, 23): Wna (pi.i21[24], 0x0)
	(0, 24): Wna (pi.i21[32], 0x0)
	(0, 25): Wna (pi.i21[40], 0x0)
	(0, 26): Wna (pi.i21[48], 0x0)
	(0, 27): Wna (pi.i21[56], 0x0)
	(0, 28): MALLOC _19.i22
	(0, 29): Wna (, 0x0)
	(0, 30): Wna (, 0x0)
	(0, 31): MALLOC _12.i23
	(0, 32): Wna (, 0x0)
	(0, 33): Wna (, 0x0)
	(0, 34): MALLOC _6.i24
	(0, 35): Wna (, 0x0)
	(0, 36): Wna (, 0x0)
	(0, 37): Wna (, 0x0)
	(0, 38): Wna (, 0x0)
	(0, 39): MALLOC fmt.i25
	(0, 40): Wna (fmt.i25[0], 0x0)
	(0, 41): Wna (fmt.i25[8], 0x0)
	(0, 42): Wna (fmt.i25[16], 0x0)
	(0, 43): Wna (fmt.i25[24], 0x0)
	(0, 44): Wna (fmt.i25[32], 0x0)
	(0, 45): Wna (fmt.i25[40], 0x0)
	(0, 46): MALLOC error.i26
	(0, 47): Wna (error.i26[0], 0x0)
	(0, 48): Wna (error.i26[8], 0x0)
	(0, 49): MALLOC msg.i27
	(0, 50): Wna (msg.i27[0], 0x0)
	(0, 51): Wna (msg.i27[8], 0x0)
	(0, 52): MALLOC force_no_backtrace.dbg.spill.i28
	(0, 53): MALLOC can_unwind.dbg.spill.i29
	(0, 54): MALLOC pieces.dbg.spill.i30
	(0, 55): Wna (pieces.dbg.spill.i30[0], 0x0)
	(0, 56): MALLOC location.dbg.spill.i
	(0, 57): Wna (location.dbg.spill.i[0], 0x0)
	(0, 58): MALLOC 
	(0, 59): Wna (, 0x0)
	(0, 60): MALLOC args.dbg.spill.i
	(0, 61): Wna (args.dbg.spill.i[0], 0x0)
	(0, 62): MALLOC self.dbg.spill3.i
	(0, 63): Wna (self.dbg.spill3.i[0], 0x0)
	(0, 64): MALLOC f.dbg.spill2.i
	(0, 65): Wna (f.dbg.spill2.i[0], 0x0)
	(0, 66): MALLOC x.dbg.spill1.i
	(0, 67): Wna (x.dbg.spill1.i[0], 0x0)
	(0, 68): MALLOC self.dbg.spill.i
	(0, 69): Wna (self.dbg.spill.i[0], 0x0)
	(0, 70): MALLOC f.dbg.spill.i
	(0, 71): Wna (f.dbg.spill.i[0], 0x0)
	(0, 72): MALLOC x.dbg.spill.i
	(0, 73): Wna (x.dbg.spill.i[0], 0x0)
	(0, 74): MALLOC pi.i
	(0, 75): Wna (pi.i[0], 0x0)
	(0, 76): Wna (pi.i[8], 0x0)
	(0, 77): Wna (pi.i[16], 0x0)
	(0, 78): Wna (pi.i[24], 0x0)
	(0, 79): Wna (pi.i[32], 0x0)
	(0, 80): Wna (pi.i[40], 0x0)
	(0, 81): Wna (pi.i[48], 0x0)
	(0, 82): Wna (pi.i[56], 0x0)
	(0, 83): MALLOC _19.i
	(0, 84): Wna (, 0x0)
	(0, 85): Wna (, 0x0)
	(0, 86): MALLOC _12.i
	(0, 87): Wna (, 0x0)
	(0, 88): Wna (, 0x0)
	(0, 89): MALLOC _6.i
	(0, 90): Wna (, 0x0)
	(0, 91): Wna (, 0x0)
	(0, 92): Wna (, 0x0)
	(0, 93): Wna (, 0x0)
	(0, 94): MALLOC fmt.i
	(0, 95): Wna (fmt.i[0], 0x0)
	(0, 96): Wna (fmt.i[8], 0x0)
	(0, 97): Wna (fmt.i[16], 0x0)
	(0, 98): Wna (fmt.i[24], 0x0)
	(0, 99): Wna (fmt.i[32], 0x0)
	(0, 100): Wna (fmt.i[40], 0x0)
	(0, 101): MALLOC error.i
	(0, 102): Wna (error.i[0], 0x0)
	(0, 103): Wna (error.i[8], 0x0)
	(0, 104): MALLOC msg.i
	(0, 105): Wna (msg.i[0], 0x0)
	(0, 106): Wna (msg.i[8], 0x0)
	(0, 107): MALLOC force_no_backtrace.dbg.spill.i
	(0, 108): MALLOC can_unwind.dbg.spill.i
	(0, 109): MALLOC pieces.dbg.spill.i
	(0, 110): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 111): MALLOC 
	(0, 112): Wna (, 0x0)
	(0, 113): Wna (, 0x0)
	(0, 114): MALLOC t.dbg.spill.i1
	(0, 115): Wna (t.dbg.spill.i1[0], 0x0)
	(0, 116): Wna (t.dbg.spill.i1[8], 0x0)
	(0, 117): MALLOC e.i2
	(0, 118): Wna (e.i2[0], 0x0)
	(0, 119): Wna (e.i2[8], 0x0)
	(0, 120): MALLOC 
	(0, 121): Wna (, 0x0)
	(0, 122): Wna (, 0x0)
	(0, 123): MALLOC t.dbg.spill.i
	(0, 124): Wna (t.dbg.spill.i[0], 0x0)
	(0, 125): Wna (t.dbg.spill.i[8], 0x0)
	(0, 126): MALLOC e.i
	(0, 127): Wna (e.i[0], 0x0)
	(0, 128): Wna (e.i[8], 0x0)
	(0, 129): MALLOC right_val.dbg.spill8
	(0, 130): Wna (right_val.dbg.spill8[0], 0x0)
	(0, 131): MALLOC left_val.dbg.spill7
	(0, 132): Wna (left_val.dbg.spill7[0], 0x0)
	(0, 133): MALLOC wrapper.dbg.spill
	(0, 134): Wna (wrapper.dbg.spill[0], 0x0)
	(0, 135): MALLOC dropping_struct.dbg.spill5
	(0, 136): Wna (dropping_struct.dbg.spill5[0], 0x0)
	(0, 137): MALLOC right_val.dbg.spill
	(0, 138): Wna (right_val.dbg.spill[0], 0x0)
	(0, 139): MALLOC left_val.dbg.spill
	(0, 140): Wna (left_val.dbg.spill[0], 0x0)
	(0, 141): MALLOC dropping_struct.dbg.spill
	(0, 142): Wna (dropping_struct.dbg.spill[0], 0x0)
	(0, 143): MALLOC 
	(0, 144): Wna (, 0x0)
	(0, 145): Wna (, 0x0)
	(0, 146): MALLOC _68
	(0, 147): Wna (, 0x0)
	(0, 148): Wna (, 0x0)
	(0, 149): Wna (, 0x0)
	(0, 150): Wna (, 0x0)
	(0, 151): Wna (, 0x0)
	(0, 152): Wna (, 0x0)
	(0, 153): MALLOC kind2
	(0, 154): MALLOC _49
	(0, 155): Wna (_49[0], 0x0)
	(0, 156): Wna (_49[8], 0x0)
	(0, 157): Wna (_49[16], 0x0)
	(0, 158): MALLOC _48
	(0, 159): Wna (, 0x0)
	(0, 160): Wna (, 0x0)
	(0, 161): MALLOC _35
	(0, 162): MALLOC drop_flag1
	(0, 163): Wna (drop_flag1[0], 0x0)
	(0, 164): MALLOC _33
	(0, 165): Wna (, 0x0)
	(0, 166): Wna (, 0x0)
	(0, 167): Wna (, 0x0)
	(0, 168): Wna (, 0x0)
	(0, 169): Wna (, 0x0)
	(0, 170): Wna (, 0x0)
	(0, 171): MALLOC kind
	(0, 172): MALLOC _14
	(0, 173): Wna (_14[0], 0x0)
	(0, 174): Wna (_14[8], 0x0)
	(0, 175): Wna (_14[16], 0x0)
	(0, 176): MALLOC _13
	(0, 177): Wna (, 0x0)
	(0, 178): Wna (, 0x0)
	(0, 179): MALLOC _2
	(0, 180): MALLOC drop_flag
	(0, 181): Wna (drop_flag[0], 0x0) main.rs:19
	(0, 182): MALLOC t.dbg.spill
	(0, 183): MALLOC _6
	(0, 184): MALLOC _5
	(0, 185): MALLOC _2
	(0, 186): Wna (, 0x0)
	(0, 187): MALLOC value.dbg.spill4
	(0, 188): MALLOC v.dbg.spill3
	(0, 189): MALLOC value.dbg.spill2
	(0, 190): MALLOC v.dbg.spill1
	(0, 191): MALLOC value.dbg.spill
	(0, 192): MALLOC v.dbg.spill
	(0, 193): Wna (v.dbg.spill[0], 0) atomic.rs:2193
	(0, 194): Wna (value.dbg.spill[0], 0) cell.rs:2078
	(0, 195): Wna (v.dbg.spill1[0], 0) atomic.rs:2193
	(0, 196): Wna (value.dbg.spill2[0], 0) cell.rs:2078
	(0, 197): Wna (v.dbg.spill3[0], 0) atomic.rs:412
	(0, 198): Wna (value.dbg.spill4[0], 0) cell.rs:2078
	(0, 199): Wna (t.dbg.spill[0], 0) cell.rs:2078
	(0, 200): Wna (, 0) atomic.rs:2194
	(0, 201): Rna (, 0) [(0, 200)] futex.rs:67
	(0, 202): Wna (, 0) futex.rs:67
	(0, 203): Rna (, 0) [(0, 200)] futex.rs:67
	(0, 204): Wna (, 0) futex.rs:67
	(0, 205): Wna (, 0) atomic.rs:413
	(0, 206): Rna (, 0) [(0, 204)(0, 202)] rwlock.rs:225
	(0, 207): Wna (, 0) rwlock.rs:225
	(0, 208): Rna (, 0) [(0, 205)] rwlock.rs:225
	(0, 209): Wna (, 0) rwlock.rs:225
	(0, 210): Wna (, 0) rwlock.rs:225
	(0, 211): FREE rwlock.rs:226
	(0, 212): FREE
	(0, 213): FREE
	(0, 214): FREE
	(0, 215): FREE
	(0, 216): FREE
	(0, 217): FREE
	(0, 218): FREE
	(0, 219): FREE
	(0, 220): FREE
	(0, 221): MALLOC 
	(0, 222): Wna (, 0x0)
	(0, 223): Wna (, 0x0)
	(0, 224): MALLOC ptr.dbg.spill5
	(0, 225): Wna (ptr.dbg.spill5[0], 0x0)
	(0, 226): MALLOC src.dbg.spill
	(0, 227): Wna (src.dbg.spill[0], 0x0)
	(0, 228): MALLOC self.dbg.spill4
	(0, 229): Wna (self.dbg.spill4[0], 0x0)
	(0, 230): MALLOC ptr.dbg.spill
	(0, 231): Wna (ptr.dbg.spill[0], 0x0)
	(0, 232): MALLOC self.dbg.spill
	(0, 233): Wna (self.dbg.spill[0], 0x0)
	(0, 234): MALLOC x.dbg.spill
	(0, 235): Wna (x.dbg.spill[0], 0x0)
	(0, 236): MALLOC b
	(0, 237): Wna (b[0], 0x0)
	(0, 238): MALLOC _4
	(0, 239): Wna (, 0x0)
	(0, 240): MALLOC _3
	(0, 241): Wna (_3[0], 0x0)
	(0, 242): Wna (_3[8], 0x0)
	(0, 243): Wna (_3[16], 0x0)
	(0, 244): Wna (_3[24], 0x0)
	(0, 245): MALLOC value.dbg.spill2
	(0, 246): Wna (value.dbg.spill2[0], 0x0)
	(0, 247): MALLOC v.dbg.spill1
	(0, 248): Wna (v.dbg.spill1[0], 0x0)
	(0, 249): MALLOC value.dbg.spill
	(0, 250): Wna (value.dbg.spill[0], 0x0)
	(0, 251): MALLOC v.dbg.spill
	(0, 252): Wna (v.dbg.spill[0], 0x0) atomic.rs:2193
	(0, 253): Wna (v.dbg.spill[0], 1) atomic.rs:2193
	(0, 254): Wna (value.dbg.spill[0], 1) cell.rs:2078
	(0, 255): Wna (v.dbg.spill1[0], 1) atomic.rs:2193
	(0, 256): Wna (value.dbg.spill2[0], 1) cell.rs:2078
	(0, 257): Wna (, 1) atomic.rs:2194
	(0, 258): Rna (, 1) [(0, 257)] sync.rs:390
	(0, 259): Wna (_3[0], 1) sync.rs:390
	(0, 260): Rna (, 1) [(0, 257)] sync.rs:390
	(0, 261): Wna (_3[8], 1) sync.rs:390
	(0, 262): Rna (, 0) [(0, 207)] sync.rs:390
	(0, 263): Wna (_3[16], 0) sync.rs:390
	(0, 264): Rna (, 0) [(0, 207)] sync.rs:390
	(0, 265): Wna (_3[20], 0) sync.rs:390
	(0, 266): Rna (, 0) [(0, 209)] sync.rs:390
	(0, 267): Wna (_3[24], 0) sync.rs:390
	(0, 268): Rna (, 0) [(0, 210)] sync.rs:390
	(0, 269): Wna (_3[25], 0) sync.rs:390
	(0, 270): MALLOC self.dbg.spill4
	(0, 271): Wna (self.dbg.spill4[0], 0x0)
	(0, 272): MALLOC self.dbg.spill3
	(0, 273): Wna (self.dbg.spill3[0], 0x0)
	(0, 274): MALLOC self.dbg.spill2
	(0, 275): Wna (self.dbg.spill2[0], 0x0)
	(0, 276): MALLOC ptr.dbg.spill
	(0, 277): Wna (ptr.dbg.spill[0], 0x0)
	(0, 278): Wna (ptr.dbg.spill[8], 0x0)
	(0, 279): MALLOC layout.dbg.spill
	(0, 280): Wna (layout.dbg.spill[0], 0x0)
	(0, 281): Wna (layout.dbg.spill[8], 0x0)
	(0, 282): MALLOC self.dbg.spill1
	(0, 283): Wna (self.dbg.spill1[0], 0x0)
	(0, 284): MALLOC align.dbg.spill
	(0, 285): Wna (align.dbg.spill[0], 0x0)
	(0, 286): MALLOC size.dbg.spill
	(0, 287): Wna (size.dbg.spill[0], 0x0)
	(0, 288): MALLOC _13
	(0, 289): Wna (, 0x0)
	(0, 290): MALLOC layout
	(0, 291): Wna (layout[0], 0x0)
	(0, 292): Wna (layout[8], 0x0)
	(0, 293): MALLOC _4
	(0, 294): Wna (, 0x0)
	(0, 295): Wna (, 0x0)
	(0, 296): MALLOC self.dbg.spill
	(0, 297): Wna (self.dbg.spill[0], 0x0) alloc.rs:242
	(0, 298): Wna (self.dbg.spill[0], 0x1) alloc.rs:242
	(0, 299): Wna (size.dbg.spill[0], 32) alloc.rs:242
	(0, 300): Wna (align.dbg.spill[0], 8) alloc.rs:242
	(0, 301): Wna (self.dbg.spill1[0], 8) alignment.rs:89
	(0, 302): Wna (layout.dbg.spill[0], 8) layout.rs:122
	(0, 303): Wna (layout.dbg.spill[8], 32) layout.rs:122
	(0, 304): MALLOC ptr.dbg.spill28
	(0, 305): Wna (ptr.dbg.spill28[0], 0x0)
	(0, 306): Wna (ptr.dbg.spill28[8], 0x0)
	(0, 307): MALLOC data.dbg.spill
	(0, 308): Wna (data.dbg.spill[0], 0x0)
	(0, 309): MALLOC ptr.dbg.spill27
	(0, 310): Wna (ptr.dbg.spill27[0], 0x0)
	(0, 311): MALLOC v.dbg.spill25
	(0, 312): Wna (v.dbg.spill25[0], 0x0)
	(0, 313): MALLOC v.dbg.spill
	(0, 314): Wna (v.dbg.spill[0], 0x0)
	(0, 315): MALLOC ptr.dbg.spill23
	(0, 316): Wna (ptr.dbg.spill23[0], 0x0)
	(0, 317): MALLOC self.dbg.spill21
	(0, 318): Wna (self.dbg.spill21[0], 0x0)
	(0, 319): MALLOC self.dbg.spill19
	(0, 320): Wna (self.dbg.spill19[0], 0x0)
	(0, 321): MALLOC self.dbg.spill18
	(0, 322): Wna (self.dbg.spill18[0], 0x0)
	(0, 323): MALLOC self.dbg.spill17
	(0, 324): Wna (self.dbg.spill17[0], 0x0)
	(0, 325): MALLOC self.dbg.spill15
	(0, 326): Wna (self.dbg.spill15[0], 0x0)
	(0, 327): MALLOC self.dbg.spill14
	(0, 328): Wna (self.dbg.spill14[0], 0x0)
	(0, 329): MALLOC ptr.dbg.spill
	(0, 330): Wna (ptr.dbg.spill[0], 0x0)
	(0, 331): MALLOC addr.dbg.spill
	(0, 332): Wna (addr.dbg.spill[0], 0x0)
	(0, 333): MALLOC self.dbg.spill12
	(0, 334): Wna (self.dbg.spill12[0], 0x0)
	(0, 335): MALLOC self.dbg.spill10
	(0, 336): Wna (self.dbg.spill10[0], 0x0)
	(0, 337): MALLOC size.dbg.spill
	(0, 338): Wna (size.dbg.spill[0], 0x0)
	(0, 339): MALLOC self.dbg.spill9
	(0, 340): Wna (self.dbg.spill9[0], 0x0)
	(0, 341): MALLOC zeroed.dbg.spill
	(0, 342): MALLOC self.dbg.spill
	(0, 343): Wna (self.dbg.spill[0], 0x0)
	(0, 344): MALLOC _48
	(0, 345): Wna (, 0x0)
	(0, 346): MALLOC _39
	(0, 347): Wna (, 0x0)
	(0, 348): MALLOC data8
	(0, 349): Wna (data8[0], 0x0)
	(0, 350): MALLOC ptr
	(0, 351): Wna (ptr[0], 0x0)
	(0, 352): Wna (ptr[8], 0x0)
	(0, 353): MALLOC _29
	(0, 354): Wna (_29[0], 0x0)
	(0, 355): MALLOC _21
	(0, 356): Wna (, 0x0)
	(0, 357): MALLOC self7
	(0, 358): Wna (self7[0], 0x0)
	(0, 359): MALLOC self6
	(0, 360): Wna (self6[0], 0x0)
	(0, 361): MALLOC _12
	(0, 362): Wna (, 0x0)
	(0, 363): MALLOC layout5
	(0, 364): Wna (layout5[0], 0x0)
	(0, 365): Wna (layout5[8], 0x0)
	(0, 366): MALLOC layout4
	(0, 367): Wna (layout4[0], 0x0)
	(0, 368): Wna (layout4[8], 0x0)
	(0, 369): MALLOC raw_ptr
	(0, 370): Wna (raw_ptr[0], 0x0)
	(0, 371): MALLOC _0
	(0, 372): Wna (, 0x0)
	(0, 373): Wna (, 0x0)
	(0, 374): MALLOC layout
	(0, 375): Wna (layout[0], 0x0)
	(0, 376): Wna (layout[8], 0x0)
	(0, 377): MALLOC metadata.dbg.spill
	(0, 378): Wna (metadata.dbg.spill[0], 0x0)
	(0, 379): MALLOC len.dbg.spill1
	(0, 380): Wna (len.dbg.spill1[0], 0x0)
	(0, 381): MALLOC len.dbg.spill
	(0, 382): Wna (len.dbg.spill[0], 0x0) non_null.rs:1484
	(0, 383): Wna (len.dbg.spill[0], 0) non_null.rs:1484
	(0, 384): Wna (len.dbg.spill1[0], 0) mod.rs:889
	(0, 385): Wna (metadata.dbg.spill[0], 0) metadata.rs:128
	(0, 386): Wna (layout[0], 8) mod.rs:768
	(0, 387): Wna (layout[8], 32) mod.rs:768
	(0, 388): Wna (self.dbg.spill[0], 0x1) mod.rs:768
	(0, 389): Wna (zeroed.dbg.spill[0], 0) mod.rs:768
	(0, 390): Wna (self.dbg.spill9[0], 0x4000000000000958) alloc.rs:179
	(0, 391): Rna (layout[8], 32) [(0, 387)] layout.rs:131
	(0, 392): Wna (size.dbg.spill[0], 32) layout.rs:131
	(0, 393): Rna (layout[0], 8) [(0, 386)] alloc.rs:183
	(0, 394): Rna (layout[8], 32) [(0, 387)] alloc.rs:183
	(0, 395): Wna (layout5[0], 8) alloc.rs:183
	(0, 396): Wna (layout5[8], 32) alloc.rs:183
	(0, 397): Wna (self.dbg.spill14[0], 0x4000000000000908) alloc.rs:100
	(0, 398): Wna (self.dbg.spill15[0], 0x4000000000000908) alloc.rs:100
	(0, 399): Rna (layout[0], 8) [(0, 386)] layout.rs:144
	(0, 400): Wna (self.dbg.spill17[0], 8) layout.rs:144
	(0, 401): Wna (, 8) alignment.rs:97
	(0, 402): Rna (, 8) [(0, 401)] alignment.rs:97
	(0, 403): MALLOC  alloc.rs:100
	(0, 404): Wna (raw_ptr[0], 0x10) alloc.rs:100
	(0, 405): Rna (raw_ptr[0], 0x10) [(0, 404)] alloc.rs:184
	(0, 406): Wna (ptr.dbg.spill23[0], 0x10) alloc.rs:184
	(0, 407): MALLOC ptr.dbg.spill1
	(0, 408): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 409): MALLOC ptr.dbg.spill
	(0, 410): Wna (ptr.dbg.spill[0], 0x0)
	(0, 411): Wna (ptr.dbg.spill[0], 0x10)
	(0, 412): Wna (ptr.dbg.spill1[0], 0x10) mut_ptr.rs:51
	(0, 413): FREE ub_checks.rs:72
	(0, 414): FREE
	(0, 415): Wna (self7[0], 0x10) non_null.rs:249
	(0, 416): Rna (self7[0], 0x10) [(0, 415)] option.rs:1246
	(0, 417): Wna (v.dbg.spill[0], 0x10) option.rs:1246
	(0, 418): Wna (self6[0], 0x10) option.rs:1246
	(0, 419): Rna (self6[0], 0x10) [(0, 418)] result.rs:1977
	(0, 420): Wna (v.dbg.spill25[0], 0x10) result.rs:1977
	(0, 421): Wna (, 0x10) result.rs:1977
	(0, 422): Rna (, 0x10) [(0, 421)] alloc.rs:184
	(0, 423): Wna (ptr.dbg.spill27[0], 0x10) alloc.rs:184
	(0, 424): Wna (data.dbg.spill[0], 0x10) non_null.rs:351
	(0, 425): Wna (ptr.dbg.spill28[0], 0x10) metadata.rs:130
	(0, 426): Wna (ptr.dbg.spill28[8], 32) metadata.rs:130
	(0, 427): MALLOC ptr.dbg.spill1
	(0, 428): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 429): MALLOC ptr.dbg.spill
	(0, 430): Wna (ptr.dbg.spill[0], 0x0)
	(0, 431): Wna (ptr.dbg.spill[0], 0x10)
	(0, 432): Wna (ptr.dbg.spill1[0], 0x10) mut_ptr.rs:51
	(0, 433): FREE ub_checks.rs:72
	(0, 434): FREE
	(0, 435): Wna (, 0x10) alloc.rs:185
	(0, 436): Wna (, 32) alloc.rs:185
	(0, 437): Rna (, 0x10) [(0, 435)] alloc.rs:188
	(0, 438): Rna (, 32) [(0, 436)] alloc.rs:188
	(0, 439): FREE alloc.rs:188
	(0, 440): FREE
	(0, 441): FREE
	(0, 442): FREE
	(0, 443): FREE
	(0, 444): FREE
	(0, 445): FREE
	(0, 446): FREE
	(0, 447): FREE
	(0, 448): FREE
	(0, 449): FREE
	(0, 450): FREE
	(0, 451): FREE
	(0, 452): FREE
	(0, 453): FREE
	(0, 454): FREE
	(0, 455): FREE
	(0, 456): FREE
	(0, 457): FREE
	(0, 458): FREE
	(0, 459): FREE
	(0, 460): FREE
	(0, 461): FREE
	(0, 462): FREE
	(0, 463): FREE
	(0, 464): FREE
	(0, 465): FREE
	(0, 466): FREE
	(0, 467): FREE
	(0, 468): FREE
	(0, 469): FREE
	(0, 470): FREE
	(0, 471): FREE
	(0, 472): FREE
	(0, 473): FREE
	(0, 474): FREE
	(0, 475): FREE
	(0, 476): Wna (, 0x10) alloc.rs:243
	(0, 477): Wna (, 32) alloc.rs:243
	(0, 478): Rna (, 0x10) [(0, 476)] alloc.rs:332
	(0, 479): Rna (, 0x10) [(0, 476)] alloc.rs:333
	(0, 480): Rna (, 32) [(0, 477)] alloc.rs:333
	(0, 481): Wna (ptr.dbg.spill[0], 0x10) alloc.rs:333
	(0, 482): Wna (ptr.dbg.spill[8], 32) alloc.rs:333
	(0, 483): Wna (self.dbg.spill2[0], 0x10) non_null.rs:476
	(0, 484): FREE alloc.rs:336
	(0, 485): FREE
	(0, 486): FREE
	(0, 487): FREE
	(0, 488): FREE
	(0, 489): FREE
	(0, 490): FREE
	(0, 491): FREE
	(0, 492): FREE
	(0, 493): FREE
	(0, 494): FREE
	(0, 495): FREE
	(0, 496): Rna (_3[0], 1) [(0, 259)] boxed.rs:260
	(0, 497): Wna (, 1) boxed.rs:260
	(0, 498): Rna (_3[8], 1) [(0, 261)] boxed.rs:260
	(0, 499): Wna (, 1) boxed.rs:260
	(0, 500): Rna (_3[16], 0) [(0, 263)] boxed.rs:260
	(0, 501): Wna (, 0) boxed.rs:260
	(0, 502): Rna (_3[20], 0) [(0, 265)] boxed.rs:260
	(0, 503): Wna (, 0) boxed.rs:260
	(0, 504): Rna (_3[24], 0) [(0, 267)] boxed.rs:260
	(0, 505): Wna (, 0) boxed.rs:260
	(0, 506): Rna (_3[25], 0) [(0, 269)] boxed.rs:260
	(0, 507): Wna (, 0) boxed.rs:260
	(0, 508): Wna (x.dbg.spill[0], 0x10) sync.rs:390
	(0, 509): Wna (b[0], 0x10) manually_drop.rs:74
	(0, 510): Wna (self.dbg.spill[0], 0x40000000000005f8) boxed.rs:1162
	(0, 511): Rna (b[0], 0x10) [(0, 509)] boxed.rs:1162
	(0, 512): Wna (ptr.dbg.spill[0], 0x10) boxed.rs:1162
	(0, 513): Wna (self.dbg.spill4[0], 0x40000000000005f8) boxed.rs:1163
	(0, 514): Wna (src.dbg.spill[0], 0x4000000000000600) boxed.rs:1163
	(0, 515): Wna (ptr.dbg.spill5[0], 0x10) non_null.rs:1798
	(0, 516): FREE sync.rs:396
	(0, 517): FREE
	(0, 518): FREE
	(0, 519): FREE
	(0, 520): FREE
	(0, 521): FREE
	(0, 522): FREE
	(0, 523): FREE
	(0, 524): FREE
	(0, 525): FREE
	(0, 526): FREE
	(0, 527): FREE
	(0, 528): FREE
	(0, 529): FREE
	(0, 530): Wna (drop_flag[0], 0x10) main.rs:19
	(0, 531): MALLOC ptr.dbg.spill
	(0, 532): Wna (ptr.dbg.spill[0], 0x0)
	(0, 533): MALLOC old_size.dbg.spill
	(0, 534): Wna (old_size.dbg.spill[0], 0x0)
	(0, 535): MALLOC 
	(0, 536): Wna (, 0x0)
	(0, 537): MALLOC dst.dbg.spill
	(0, 538): Wna (dst.dbg.spill[0], 0x0)
	(0, 539): MALLOC self.dbg.spill8
	(0, 540): Wna (self.dbg.spill8[0], 0x0)
	(0, 541): MALLOC self.dbg.spill7
	(0, 542): Wna (self.dbg.spill7[0], 0x0)
	(0, 543): MALLOC self.dbg.spill6
	(0, 544): Wna (self.dbg.spill6[0], 0x0)
	(0, 545): MALLOC self.dbg.spill5
	(0, 546): Wna (self.dbg.spill5[0], 0x0)
	(0, 547): MALLOC self.dbg.spill3
	(0, 548): Wna (self.dbg.spill3[0], 0x0)
	(0, 549): MALLOC self.dbg.spill
	(0, 550): Wna (self.dbg.spill[0], 0x0)
	(0, 551): MALLOC order.dbg.spill2
	(0, 552): MALLOC val.dbg.spill1
	(0, 553): Wna (val.dbg.spill1[0], 0x0)
	(0, 554): MALLOC order.dbg.spill
	(0, 555): MALLOC val.dbg.spill
	(0, 556): Wna (val.dbg.spill[0], 0x0) atomic.rs:2671
	(0, 557): Wna (val.dbg.spill[0], 1) atomic.rs:2671
	(0, 558): Wna (order.dbg.spill[0], 0) atomic.rs:2671
	(0, 559): Wna (val.dbg.spill1[0], 1) atomic.rs:3342
	(0, 560): Wna (order.dbg.spill2[0], 0) atomic.rs:3342
	(0, 561): Wna (self.dbg.spill[0], 0x4000000000000548) atomic.rs:3342
	(0, 562): Wna (self.dbg.spill3[0], 0x4000000000000548) sync.rs:1837
	(0, 563): Rna (drop_flag[0], 0x10) [(0, 530)] non_null.rs:402
	(0, 564): Wna (self.dbg.spill5[0], 0x10) non_null.rs:402
	(0, 565): Wna (self.dbg.spill6[0], 0x10) non_null.rs:351
	(0, 566): Wna (self.dbg.spill7[0], 0x10) sync.rs:2117
	(0, 567): Wna (self.dbg.spill8[0], 0x10) atomic.rs:2673
	(0, 568): Wna (dst.dbg.spill[0], 0x10) cell.rs:2148
	(0, 569): URrlx (, 1) [(0, 497)] atomic.rs:3346
	(0, 570): UWrlx (, 2)
	(0, 571): Wna (, 1) atomic.rs:3346
	(0, 572): Rna (, 1) [(0, 571)] atomic.rs:3346
	(0, 573): Wna (old_size.dbg.spill[0], 1) atomic.rs:3346
	(0, 574): Rna (drop_flag[0], 0x10) [(0, 530)] sync.rs:2138
	(0, 575): Wna (ptr.dbg.spill[0], 0x10) sync.rs:2138
	(0, 576): MALLOC self.dbg.spill
	(0, 577): Wna (self.dbg.spill[0], 0x0)
	(0, 578): Wna (self.dbg.spill[0], 0x4000000000000550)
	(0, 579): FREE alloc.rs:51
	(0, 580): FREE sync.rs:2139
	(0, 581): FREE
	(0, 582): FREE
	(0, 583): FREE
	(0, 584): FREE
	(0, 585): FREE
	(0, 586): FREE
	(0, 587): FREE
	(0, 588): FREE
	(0, 589): FREE
	(0, 590): FREE
	(0, 591): FREE
	(0, 592): FREE
	(0, 593): FREE
	(0, 594): Wna (dropping_struct.dbg.spill[0], 0x10) main.rs:20
	(0, 595): MALLOC _x
	(0, 596): Wna (_x[0], 0x0)
	(0, 597): Wna (_x[0], 0x10)
	(0, 598): MALLOC 
	(0, 599): Wna (, 0x0)
	(0, 600): Wna (, 0x0)
	(0, 601): MALLOC _1.dbg.spill
	(0, 602): Wna (_1.dbg.spill[0], 0x0)
	(0, 603): Wna (_1.dbg.spill[0], 0x4000000000000aa0)
	(0, 604): MALLOC location.dbg.spill.i
	(0, 605): Wna (location.dbg.spill.i[0], 0x0)
	(0, 606): MALLOC 
	(0, 607): Wna (, 0x0)
	(0, 608): MALLOC args.dbg.spill.i
	(0, 609): Wna (args.dbg.spill.i[0], 0x0)
	(0, 610): MALLOC self.dbg.spill3.i
	(0, 611): Wna (self.dbg.spill3.i[0], 0x0)
	(0, 612): MALLOC f.dbg.spill2.i
	(0, 613): Wna (f.dbg.spill2.i[0], 0x0)
	(0, 614): MALLOC x.dbg.spill1.i
	(0, 615): Wna (x.dbg.spill1.i[0], 0x0)
	(0, 616): MALLOC self.dbg.spill.i
	(0, 617): Wna (self.dbg.spill.i[0], 0x0)
	(0, 618): MALLOC f.dbg.spill.i
	(0, 619): Wna (f.dbg.spill.i[0], 0x0)
	(0, 620): MALLOC x.dbg.spill.i
	(0, 621): Wna (x.dbg.spill.i[0], 0x0)
	(0, 622): MALLOC pi.i
	(0, 623): Wna (pi.i[0], 0x0)
	(0, 624): Wna (pi.i[8], 0x0)
	(0, 625): Wna (pi.i[16], 0x0)
	(0, 626): Wna (pi.i[24], 0x0)
	(0, 627): Wna (pi.i[32], 0x0)
	(0, 628): Wna (pi.i[40], 0x0)
	(0, 629): Wna (pi.i[48], 0x0)
	(0, 630): Wna (pi.i[56], 0x0)
	(0, 631): MALLOC _19.i
	(0, 632): Wna (, 0x0)
	(0, 633): Wna (, 0x0)
	(0, 634): MALLOC _12.i
	(0, 635): Wna (, 0x0)
	(0, 636): Wna (, 0x0)
	(0, 637): MALLOC _6.i
	(0, 638): Wna (, 0x0)
	(0, 639): Wna (, 0x0)
	(0, 640): Wna (, 0x0)
	(0, 641): Wna (, 0x0)
	(0, 642): MALLOC fmt.i
	(0, 643): Wna (fmt.i[0], 0x0)
	(0, 644): Wna (fmt.i[8], 0x0)
	(0, 645): Wna (fmt.i[16], 0x0)
	(0, 646): Wna (fmt.i[24], 0x0)
	(0, 647): Wna (fmt.i[32], 0x0)
	(0, 648): Wna (fmt.i[40], 0x0)
	(0, 649): MALLOC error.i
	(0, 650): Wna (error.i[0], 0x0)
	(0, 651): Wna (error.i[8], 0x0)
	(0, 652): MALLOC msg.i
	(0, 653): Wna (msg.i[0], 0x0)
	(0, 654): Wna (msg.i[8], 0x0)
	(0, 655): MALLOC force_no_backtrace.dbg.spill.i
	(0, 656): MALLOC can_unwind.dbg.spill.i
	(0, 657): MALLOC pieces.dbg.spill.i
	(0, 658): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 659): MALLOC 
	(0, 660): Wna (, 0x0)
	(0, 661): Wna (, 0x0)
	(0, 662): MALLOC t.dbg.spill.i
	(0, 663): Wna (t.dbg.spill.i[0], 0x0)
	(0, 664): Wna (t.dbg.spill.i[8], 0x0)
	(0, 665): MALLOC e.i
	(0, 666): Wna (e.i[0], 0x0)
	(0, 667): Wna (e.i[8], 0x0)
	(0, 668): MALLOC 
	(0, 669): Wna (, 0x0)
	(0, 670): Wna (, 0x0)
	(0, 671): MALLOC self.dbg.spill
	(0, 672): Wna (self.dbg.spill[0], 0x0)
	(0, 673): MALLOC _5
	(0, 674): Wna (_5[0], 0x0)
	(0, 675): Wna (_5[8], 0x0)
	(0, 676): Wna (_5[16], 0x0)
	(0, 677): MALLOC _4
	(0, 678): Wna (, 0x0)
	(0, 679): Wna (, 0x0)
	(0, 680): Wna (self.dbg.spill[0], 0x4000000000000aa0)
	(0, 681): MALLOC self.dbg.spill4
	(0, 682): Wna (self.dbg.spill4[0], 0x0)
	(0, 683): MALLOC self.dbg.spill3
	(0, 684): Wna (self.dbg.spill3[0], 0x0)
	(0, 685): MALLOC self.dbg.spill1
	(0, 686): Wna (self.dbg.spill1[0], 0x0)
	(0, 687): MALLOC self.dbg.spill
	(0, 688): Wna (self.dbg.spill[0], 0x0)
	(0, 689): Wna (self.dbg.spill[0], 0x4000000000000aa0)
	(0, 690): Wna (self.dbg.spill1[0], 0x4000000000000aa0) sync.rs:1837
	(0, 691): Rna (_x[0], 0x10) [(0, 597)] non_null.rs:402
	(0, 692): Wna (self.dbg.spill3[0], 0x10) non_null.rs:402
	(0, 693): Wna (self.dbg.spill4[0], 0x10) non_null.rs:351
	(0, 694): FREE sync.rs:2149
	(0, 695): FREE
	(0, 696): FREE
	(0, 697): FREE
	(0, 698): MALLOC location.dbg.spill7.i
	(0, 699): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 700): MALLOC 
	(0, 701): Wna (, 0x0)
	(0, 702): MALLOC location.dbg.spill.i
	(0, 703): Wna (location.dbg.spill.i[0], 0x0)
	(0, 704): MALLOC 
	(0, 705): Wna (, 0x0)
	(0, 706): MALLOC ok.dbg.spill.i
	(0, 707): MALLOC val.dbg.spill.i
	(0, 708): MALLOC new.dbg.spill.i
	(0, 709): MALLOC old.dbg.spill.i
	(0, 710): MALLOC dst.dbg.spill.i
	(0, 711): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 712): MALLOC pi5.i
	(0, 713): Wna (pi5.i[0], 0x0)
	(0, 714): Wna (pi5.i[8], 0x0)
	(0, 715): Wna (pi5.i[16], 0x0)
	(0, 716): Wna (pi5.i[24], 0x0)
	(0, 717): Wna (pi5.i[32], 0x0)
	(0, 718): Wna (pi5.i[40], 0x0)
	(0, 719): Wna (pi5.i[48], 0x0)
	(0, 720): Wna (pi5.i[56], 0x0)
	(0, 721): MALLOC pi.i
	(0, 722): Wna (pi.i[0], 0x0)
	(0, 723): Wna (pi.i[8], 0x0)
	(0, 724): Wna (pi.i[16], 0x0)
	(0, 725): Wna (pi.i[24], 0x0)
	(0, 726): Wna (pi.i[32], 0x0)
	(0, 727): Wna (pi.i[40], 0x0)
	(0, 728): Wna (pi.i[48], 0x0)
	(0, 729): Wna (pi.i[56], 0x0)
	(0, 730): MALLOC fmt4.i
	(0, 731): Wna (fmt4.i[0], 0x0)
	(0, 732): Wna (fmt4.i[8], 0x0)
	(0, 733): Wna (fmt4.i[16], 0x0)
	(0, 734): Wna (fmt4.i[24], 0x0)
	(0, 735): Wna (fmt4.i[32], 0x0)
	(0, 736): Wna (fmt4.i[40], 0x0)
	(0, 737): MALLOC fmt.i
	(0, 738): Wna (fmt.i[0], 0x0)
	(0, 739): Wna (fmt.i[8], 0x0)
	(0, 740): Wna (fmt.i[16], 0x0)
	(0, 741): Wna (fmt.i[24], 0x0)
	(0, 742): Wna (fmt.i[32], 0x0)
	(0, 743): Wna (fmt.i[40], 0x0)
	(0, 744): MALLOC _8.i
	(0, 745): Wna (, 0x0)
	(0, 746): MALLOC _0.i
	(0, 747): Wna (, 0x0)
	(0, 748): MALLOC failure.i
	(0, 749): MALLOC success.i
	(0, 750): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 751): MALLOC can_unwind.dbg.spill2.i
	(0, 752): MALLOC force_no_backtrace.dbg.spill.i
	(0, 753): MALLOC can_unwind.dbg.spill.i
	(0, 754): MALLOC pieces.dbg.spill1.i
	(0, 755): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 756): MALLOC pieces.dbg.spill.i
	(0, 757): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 758): MALLOC self.dbg.spill4
	(0, 759): Wna (self.dbg.spill4[0], 0x0)
	(0, 760): MALLOC self.dbg.spill3
	(0, 761): Wna (self.dbg.spill3[0], 0x0)
	(0, 762): MALLOC self.dbg.spill2
	(0, 763): Wna (self.dbg.spill2[0], 0x0)
	(0, 764): MALLOC self.dbg.spill1
	(0, 765): Wna (self.dbg.spill1[0], 0x0)
	(0, 766): MALLOC self.dbg.spill
	(0, 767): Wna (self.dbg.spill[0], 0x0)
	(0, 768): MALLOC _4
	(0, 769): Wna (, 0x0)
	(0, 770): MALLOC failure.dbg.spill
	(0, 771): MALLOC success.dbg.spill
	(0, 772): MALLOC new.dbg.spill
	(0, 773): MALLOC current.dbg.spill
	(0, 774): Wna (current.dbg.spill[0], 0) atomic.rs:2636
	(0, 775): Wna (new.dbg.spill[0], 1073741823) atomic.rs:2637
	(0, 776): Wna (success.dbg.spill[0], 2) atomic.rs:2638
	(0, 777): Wna (failure.dbg.spill[0], 0) atomic.rs:2639
	(0, 778): Wna (self.dbg.spill[0], 0x20) atomic.rs:2639
	(0, 779): Wna (self.dbg.spill1[0], 0x20) rwlock.rs:362
	(0, 780): Wna (self.dbg.spill2[0], 0x20) futex.rs:153
	(0, 781): Wna (self.dbg.spill3[0], 0x20) atomic.rs:2642
	(0, 782): Wna (pieces.dbg.spill.i[0], 0x8000000000000ae8) mod.rs:340
	(0, 783): Wna (pieces.dbg.spill1.i[0], 0x8000000000000aa0) mod.rs:340
	(0, 784): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 785): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 786): Wna (can_unwind.dbg.spill2.i[0], 1) panic_info.rs:37
	(0, 787): Wna (force_no_backtrace.dbg.spill3.i[0], 0) panic_info.rs:38
	(0, 788): Wna (success.i[0], 2) panic_info.rs:38
	(0, 789): Wna (failure.i[0], 0) panic_info.rs:38
	(0, 790): Wna (dst.dbg.spill.i[0], 0x20) panic_info.rs:38
	(0, 791): Wna (old.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 792): Wna (new.dbg.spill.i[0], 1073741823) panic_info.rs:38
	(0, 793): Rna (success.i[0], 2) [(0, 788)] atomic.rs:3419
	(0, 794): Rna (failure.i[0], 0) [(0, 789)] atomic.rs:3419
	(0, 795): CRacq (, 0) [(0, 501)] atomic.rs:3423
	(0, 796): CWacq (, 1073741823)
	(0, 797): Wna (, 0) atomic.rs:3423
	(0, 798): Wna (, 1) atomic.rs:3423
	(0, 799): Rna (, 0) [(0, 797)] atomic.rs:3418
	(0, 800): Wna (val.dbg.spill.i[0], 0) atomic.rs:3418
	(0, 801): Rna (, 1) [(0, 798)] atomic.rs:3418
	(0, 802): Wna (ok.dbg.spill.i[0], 1) atomic.rs:3418
	(0, 803): Wna (, 0) atomic.rs:3439
	(0, 804): Wna (, 0) atomic.rs:3439
	(0, 805): Rna (, 0) [(0, 804)] atomic.rs:3440
	(0, 806): Rna (, 0) [(0, 803)] atomic.rs:3440
	(0, 807): Wna (, 0) atomic.rs:2642
	(0, 808): Wna (, 0) atomic.rs:2642
	(0, 809): Wna (self.dbg.spill4[0], 0x4000000000000f28) futex.rs:153
	(0, 810): Rna (, 0) [(0, 807)] result.rs:564
	(0, 811): MALLOC location.dbg.spill7.i1
	(0, 812): Wna (location.dbg.spill7.i1[0], 0x0)
	(0, 813): MALLOC 
	(0, 814): Wna (, 0x0)
	(0, 815): MALLOC location.dbg.spill.i2
	(0, 816): Wna (location.dbg.spill.i2[0], 0x0)
	(0, 817): MALLOC 
	(0, 818): Wna (, 0x0)
	(0, 819): MALLOC dst.dbg.spill.i3
	(0, 820): Wna (dst.dbg.spill.i3[0], 0x0)
	(0, 821): MALLOC pi5.i4
	(0, 822): Wna (pi5.i4[0], 0x0)
	(0, 823): Wna (pi5.i4[8], 0x0)
	(0, 824): Wna (pi5.i4[16], 0x0)
	(0, 825): Wna (pi5.i4[24], 0x0)
	(0, 826): Wna (pi5.i4[32], 0x0)
	(0, 827): Wna (pi5.i4[40], 0x0)
	(0, 828): Wna (pi5.i4[48], 0x0)
	(0, 829): Wna (pi5.i4[56], 0x0)
	(0, 830): MALLOC pi.i5
	(0, 831): Wna (pi.i5[0], 0x0)
	(0, 832): Wna (pi.i5[8], 0x0)
	(0, 833): Wna (pi.i5[16], 0x0)
	(0, 834): Wna (pi.i5[24], 0x0)
	(0, 835): Wna (pi.i5[32], 0x0)
	(0, 836): Wna (pi.i5[40], 0x0)
	(0, 837): Wna (pi.i5[48], 0x0)
	(0, 838): Wna (pi.i5[56], 0x0)
	(0, 839): MALLOC fmt4.i6
	(0, 840): Wna (fmt4.i6[0], 0x0)
	(0, 841): Wna (fmt4.i6[8], 0x0)
	(0, 842): Wna (fmt4.i6[16], 0x0)
	(0, 843): Wna (fmt4.i6[24], 0x0)
	(0, 844): Wna (fmt4.i6[32], 0x0)
	(0, 845): Wna (fmt4.i6[40], 0x0)
	(0, 846): MALLOC fmt.i7
	(0, 847): Wna (fmt.i7[0], 0x0)
	(0, 848): Wna (fmt.i7[8], 0x0)
	(0, 849): Wna (fmt.i7[16], 0x0)
	(0, 850): Wna (fmt.i7[24], 0x0)
	(0, 851): Wna (fmt.i7[32], 0x0)
	(0, 852): Wna (fmt.i7[40], 0x0)
	(0, 853): MALLOC _0.i8
	(0, 854): MALLOC order.i9
	(0, 855): MALLOC force_no_backtrace.dbg.spill3.i10
	(0, 856): MALLOC can_unwind.dbg.spill2.i11
	(0, 857): MALLOC force_no_backtrace.dbg.spill.i12
	(0, 858): MALLOC can_unwind.dbg.spill.i13
	(0, 859): MALLOC pieces.dbg.spill1.i14
	(0, 860): Wna (pieces.dbg.spill1.i14[0], 0x0)
	(0, 861): MALLOC pieces.dbg.spill.i15
	(0, 862): Wna (pieces.dbg.spill.i15[0], 0x0)
	(0, 863): MALLOC location.dbg.spill7.i
	(0, 864): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 865): MALLOC 
	(0, 866): Wna (, 0x0)
	(0, 867): MALLOC location.dbg.spill.i
	(0, 868): Wna (location.dbg.spill.i[0], 0x0)
	(0, 869): MALLOC 
	(0, 870): Wna (, 0x0)
	(0, 871): MALLOC dst.dbg.spill.i
	(0, 872): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 873): MALLOC pi5.i
	(0, 874): Wna (pi5.i[0], 0x0)
	(0, 875): Wna (pi5.i[8], 0x0)
	(0, 876): Wna (pi5.i[16], 0x0)
	(0, 877): Wna (pi5.i[24], 0x0)
	(0, 878): Wna (pi5.i[32], 0x0)
	(0, 879): Wna (pi5.i[40], 0x0)
	(0, 880): Wna (pi5.i[48], 0x0)
	(0, 881): Wna (pi5.i[56], 0x0)
	(0, 882): MALLOC pi.i
	(0, 883): Wna (pi.i[0], 0x0)
	(0, 884): Wna (pi.i[8], 0x0)
	(0, 885): Wna (pi.i[16], 0x0)
	(0, 886): Wna (pi.i[24], 0x0)
	(0, 887): Wna (pi.i[32], 0x0)
	(0, 888): Wna (pi.i[40], 0x0)
	(0, 889): Wna (pi.i[48], 0x0)
	(0, 890): Wna (pi.i[56], 0x0)
	(0, 891): MALLOC fmt4.i
	(0, 892): Wna (fmt4.i[0], 0x0)
	(0, 893): Wna (fmt4.i[8], 0x0)
	(0, 894): Wna (fmt4.i[16], 0x0)
	(0, 895): Wna (fmt4.i[24], 0x0)
	(0, 896): Wna (fmt4.i[32], 0x0)
	(0, 897): Wna (fmt4.i[40], 0x0)
	(0, 898): MALLOC fmt.i
	(0, 899): Wna (fmt.i[0], 0x0)
	(0, 900): Wna (fmt.i[8], 0x0)
	(0, 901): Wna (fmt.i[16], 0x0)
	(0, 902): Wna (fmt.i[24], 0x0)
	(0, 903): Wna (fmt.i[32], 0x0)
	(0, 904): Wna (fmt.i[40], 0x0)
	(0, 905): MALLOC _0.i
	(0, 906): Wna (, 0x0)
	(0, 907): MALLOC order.i
	(0, 908): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 909): MALLOC can_unwind.dbg.spill2.i
	(0, 910): MALLOC force_no_backtrace.dbg.spill.i
	(0, 911): MALLOC can_unwind.dbg.spill.i
	(0, 912): MALLOC pieces.dbg.spill1.i
	(0, 913): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 914): MALLOC pieces.dbg.spill.i
	(0, 915): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 916): MALLOC self.dbg.spill5
	(0, 917): Wna (self.dbg.spill5[0], 0x0)
	(0, 918): MALLOC self.dbg.spill4
	(0, 919): Wna (self.dbg.spill4[0], 0x0)
	(0, 920): MALLOC ret.dbg.spill
	(0, 921): MALLOC self.dbg.spill3
	(0, 922): Wna (self.dbg.spill3[0], 0x0)
	(0, 923): MALLOC self.dbg.spill2
	(0, 924): Wna (self.dbg.spill2[0], 0x0)
	(0, 925): MALLOC self.dbg.spill
	(0, 926): Wna (self.dbg.spill[0], 0x0)
	(0, 927): MALLOC _5
	(0, 928): MALLOC _0
	(0, 929): MALLOC order.dbg.spill1
	(0, 930): MALLOC order.dbg.spill
	(0, 931): Wna (order.dbg.spill[0], 0) atomic.rs:2419
	(0, 932): Wna (order.dbg.spill1[0], 0) atomic.rs:607
	(0, 933): Wna (self.dbg.spill[0], 0x28) atomic.rs:607
	(0, 934): Wna (self.dbg.spill2[0], 0x8000000000000000) panicking.rs:441
	(0, 935): Wna (self.dbg.spill3[0], 0x8000000000000000) atomic.rs:2421
	(0, 936): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30) mod.rs:340
	(0, 937): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70) mod.rs:340
	(0, 938): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 939): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 940): Wna (can_unwind.dbg.spill2.i[0], 1) panic_info.rs:37
	(0, 941): Wna (force_no_backtrace.dbg.spill3.i[0], 0) panic_info.rs:38
	(0, 942): Wna (order.i[0], 0) panic_info.rs:38
	(0, 943): Wna (dst.dbg.spill.i[0], 0x8000000000000000) panic_info.rs:38
	(0, 944): Rna (order.i[0], 0) [(0, 942)] atomic.rs:3312
	(0, 945): Rrlx (_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h541136d3707a013fE, 0) [INIT] atomic.rs:3313
	(0, 946): Wna (, 0) atomic.rs:3313
	(0, 947): Rna (, 0) [(0, 946)] atomic.rs:3320
	(0, 948): Wna (, 1) panicking.rs:451
	(0, 949): Rna (, 1) [(0, 948)] panicking.rs:592
	(0, 950): Wna (ret.dbg.spill[0], 0) poison.rs:43
	(0, 951): Wna (self.dbg.spill4[0], 0x28) poison.rs:65
	(0, 952): Wna (self.dbg.spill5[0], 0x28) atomic.rs:610
	(0, 953): Wna (pieces.dbg.spill.i15[0], 0x8000000000000b30) mod.rs:340
	(0, 954): Wna (pieces.dbg.spill1.i14[0], 0x8000000000000b70) mod.rs:340
	(0, 955): Wna (can_unwind.dbg.spill.i13[0], 1) panic_info.rs:37
	(0, 956): Wna (force_no_backtrace.dbg.spill.i12[0], 0) panic_info.rs:38
	(0, 957): Wna (can_unwind.dbg.spill2.i11[0], 1) panic_info.rs:37
	(0, 958): Wna (force_no_backtrace.dbg.spill3.i10[0], 0) panic_info.rs:38
	(0, 959): Wna (order.i9[0], 0) panic_info.rs:38
	(0, 960): Wna (dst.dbg.spill.i3[0], 0x28) panic_info.rs:38
	(0, 961): Rna (order.i9[0], 0) [(0, 959)] atomic.rs:3312
	(0, 962): Rrlx (, 0) [(0, 505)] atomic.rs:3313
	(0, 963): Wna (, 0) atomic.rs:3313
	(0, 964): Wna (, 0) poison.rs:47
	(0, 965): Wna (, 0) poison.rs:47
	(0, 966): Rna (, 0) [(0, 965)] poison.rs:48
	(0, 967): Rna (, 0) [(0, 964)] poison.rs:48
	(0, 968): FREE poison.rs:48
	(0, 969): FREE
	(0, 970): FREE
	(0, 971): FREE
	(0, 972): FREE
	(0, 973): FREE
	(0, 974): FREE
	(0, 975): FREE
	(0, 976): FREE
	(0, 977): FREE
	(0, 978): FREE
	(0, 979): FREE
	(0, 980): FREE
	(0, 981): FREE
	(0, 982): FREE
	(0, 983): FREE
	(0, 984): FREE
	(0, 985): FREE
	(0, 986): FREE
	(0, 987): FREE
	(0, 988): FREE
	(0, 989): FREE
	(0, 990): FREE
	(0, 991): FREE
	(0, 992): FREE
	(0, 993): FREE
	(0, 994): FREE
	(0, 995): FREE
	(0, 996): FREE
	(0, 997): FREE
	(0, 998): FREE
	(0, 999): FREE
	(0, 1000): FREE
	(0, 1001): FREE
	(0, 1002): FREE
	(0, 1003): FREE
	(0, 1004): FREE
	(0, 1005): FREE
	(0, 1006): FREE
	(0, 1007): FREE
	(0, 1008): FREE
	(0, 1009): FREE
	(0, 1010): FREE
	(0, 1011): FREE
	(0, 1012): MALLOC guard.dbg.spill1
	(0, 1013): Wna (guard.dbg.spill1[0], 0x0)
	(0, 1014): Wna (guard.dbg.spill1[8], 0x0)
	(0, 1015): MALLOC guard.dbg.spill
	(0, 1016): MALLOC t.dbg.spill
	(0, 1017): MALLOC f.dbg.spill
	(0, 1018): Wna (f.dbg.spill[0], 0x0)
	(0, 1019): MALLOC result
	(0, 1020): Wna (result[0], 0)
	(0, 1021): Wna (result[1], 0)
	(0, 1022): Wna (f.dbg.spill[0], 0x20)
	(0, 1023): Rna (result[0], 0) [(0, 1020)] poison.rs:323
	(0, 1024): Rna (result[1], 0) [(0, 1021)] poison.rs:324
	(0, 1025): Wna (t.dbg.spill[0], 0) poison.rs:324
	(0, 1026): MALLOC guard.dbg.spill
	(0, 1027): MALLOC _1.dbg.spill
	(0, 1028): Wna (_1.dbg.spill[0], 0x0)
	(0, 1029): Wna (_1.dbg.spill[0], 0x20)
	(0, 1030): Wna (guard.dbg.spill[0], 0)
	(0, 1031): FREE rwlock.rs:592
	(0, 1032): FREE
	(0, 1033): Wna (_5[8], 0x20) poison.rs:324
	(0, 1034): Wna (_5[16], 0) poison.rs:324
	(0, 1035): Wna (_5[0], 0) poison.rs:324
	(0, 1036): FREE poison.rs:328
	(0, 1037): FREE
	(0, 1038): FREE
	(0, 1039): FREE
	(0, 1040): FREE
	(0, 1041): FREE rwlock.rs:365
	(0, 1042): FREE
	(0, 1043): FREE
	(0, 1044): FREE
	(0, 1045): FREE
	(0, 1046): FREE
	(0, 1047): FREE
	(0, 1048): FREE
	(0, 1049): FREE
	(0, 1050): FREE
	(0, 1051): FREE
	(0, 1052): FREE
	(0, 1053): FREE
	(0, 1054): FREE
	(0, 1055): FREE
	(0, 1056): FREE
	(0, 1057): FREE
	(0, 1058): FREE
	(0, 1059): FREE
	(0, 1060): FREE
	(0, 1061): FREE
	(0, 1062): FREE
	(0, 1063): FREE
	(0, 1064): FREE
	(0, 1065): FREE
	(0, 1066): FREE
	(0, 1067): FREE
	(0, 1068): FREE
	(0, 1069): FREE
	(0, 1070): FREE
	(0, 1071): FREE
	(0, 1072): FREE
	(0, 1073): FREE
	(0, 1074): Rna (_5[0], 0) [(0, 1035)] result.rs:1100
	(0, 1075): Rna (_5[8], 0x20) [(0, 1033)] result.rs:1101
	(0, 1076): Rna (_5[16], 0) [(0, 1034)] result.rs:1101
	(0, 1077): Wna (t.dbg.spill.i[0], 0x20) result.rs:1101
	(0, 1078): Wna (t.dbg.spill.i[8], 0) result.rs:1101
	(0, 1079): Wna (, 0x20) main.rs:11
	(0, 1080): Wna (, 0) main.rs:11
	(0, 1081): MALLOC self.dbg.spill2
	(0, 1082): Wna (self.dbg.spill2[0], 0x0)
	(0, 1083): MALLOC self.dbg.spill
	(0, 1084): Wna (self.dbg.spill[0], 0x0)
	(0, 1085): Wna (self.dbg.spill[0], 0x4000000000000cf8)
	(0, 1086): Rna (, 0x20) [(0, 1079)] rwlock.rs:676
	(0, 1087): Wna (self.dbg.spill2[0], 0x29) rwlock.rs:676
	(0, 1088): FREE rwlock.rs:677
	(0, 1089): FREE
	(0, 1090): Wna (, 1) main.rs:11
	(0, 1091): MALLOC _1.dbg.spill
	(0, 1092): Wna (_1.dbg.spill[0], 0x0)
	(0, 1093): Wna (_1.dbg.spill[0], 0x4000000000000cf8)
	(0, 1094): MALLOC state.dbg.spill
	(0, 1095): MALLOC 
	(0, 1096): MALLOC dst.dbg.spill
	(0, 1097): Wna (dst.dbg.spill[0], 0x0)
	(0, 1098): MALLOC self.dbg.spill5
	(0, 1099): Wna (self.dbg.spill5[0], 0x0)
	(0, 1100): MALLOC self.dbg.spill4
	(0, 1101): Wna (self.dbg.spill4[0], 0x0)
	(0, 1102): MALLOC self.dbg.spill3
	(0, 1103): Wna (self.dbg.spill3[0], 0x0)
	(0, 1104): MALLOC self.dbg.spill
	(0, 1105): Wna (self.dbg.spill[0], 0x0)
	(0, 1106): MALLOC order.dbg.spill2
	(0, 1107): MALLOC val.dbg.spill1
	(0, 1108): MALLOC order.dbg.spill
	(0, 1109): MALLOC val.dbg.spill
	(0, 1110): Wna (val.dbg.spill[0], 1073741823) atomic.rs:2701
	(0, 1111): Wna (order.dbg.spill[0], 1) atomic.rs:2701
	(0, 1112): Wna (val.dbg.spill1[0], 1073741823) atomic.rs:3359
	(0, 1113): Wna (order.dbg.spill2[0], 1) atomic.rs:3359
	(0, 1114): Wna (self.dbg.spill[0], 0x4000000000000cf8) atomic.rs:3359
	(0, 1115): Rna (, 0x20) [(0, 1079)] rwlock.rs:724
	(0, 1116): MALLOC location.dbg.spill7.i
	(0, 1117): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1118): MALLOC 
	(0, 1119): Wna (, 0x0)
	(0, 1120): MALLOC location.dbg.spill.i
	(0, 1121): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1122): MALLOC 
	(0, 1123): Wna (, 0x0)
	(0, 1124): MALLOC dst.dbg.spill.i
	(0, 1125): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1126): MALLOC pi5.i
	(0, 1127): Wna (pi5.i[0], 0x0)
	(0, 1128): Wna (pi5.i[8], 0x0)
	(0, 1129): Wna (pi5.i[16], 0x0)
	(0, 1130): Wna (pi5.i[24], 0x0)
	(0, 1131): Wna (pi5.i[32], 0x0)
	(0, 1132): Wna (pi5.i[40], 0x0)
	(0, 1133): Wna (pi5.i[48], 0x0)
	(0, 1134): Wna (pi5.i[56], 0x0)
	(0, 1135): MALLOC pi.i
	(0, 1136): Wna (pi.i[0], 0x0)
	(0, 1137): Wna (pi.i[8], 0x0)
	(0, 1138): Wna (pi.i[16], 0x0)
	(0, 1139): Wna (pi.i[24], 0x0)
	(0, 1140): Wna (pi.i[32], 0x0)
	(0, 1141): Wna (pi.i[40], 0x0)
	(0, 1142): Wna (pi.i[48], 0x0)
	(0, 1143): Wna (pi.i[56], 0x0)
	(0, 1144): MALLOC fmt4.i
	(0, 1145): Wna (fmt4.i[0], 0x0)
	(0, 1146): Wna (fmt4.i[8], 0x0)
	(0, 1147): Wna (fmt4.i[16], 0x0)
	(0, 1148): Wna (fmt4.i[24], 0x0)
	(0, 1149): Wna (fmt4.i[32], 0x0)
	(0, 1150): Wna (fmt4.i[40], 0x0)
	(0, 1151): MALLOC fmt.i
	(0, 1152): Wna (fmt.i[0], 0x0)
	(0, 1153): Wna (fmt.i[8], 0x0)
	(0, 1154): Wna (fmt.i[16], 0x0)
	(0, 1155): Wna (fmt.i[24], 0x0)
	(0, 1156): Wna (fmt.i[32], 0x0)
	(0, 1157): Wna (fmt.i[40], 0x0)
	(0, 1158): MALLOC _0.i
	(0, 1159): Wna (, 0x0)
	(0, 1160): MALLOC order.i
	(0, 1161): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1162): MALLOC can_unwind.dbg.spill2.i
	(0, 1163): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1164): MALLOC can_unwind.dbg.spill.i
	(0, 1165): MALLOC pieces.dbg.spill1.i
	(0, 1166): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1167): MALLOC pieces.dbg.spill.i
	(0, 1168): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1169): MALLOC self.dbg.spill5
	(0, 1170): Wna (self.dbg.spill5[0], 0x0)
	(0, 1171): MALLOC self.dbg.spill4
	(0, 1172): Wna (self.dbg.spill4[0], 0x0)
	(0, 1173): MALLOC self.dbg.spill3
	(0, 1174): Wna (self.dbg.spill3[0], 0x0)
	(0, 1175): MALLOC self.dbg.spill2
	(0, 1176): Wna (self.dbg.spill2[0], 0x0)
	(0, 1177): MALLOC guard.dbg.spill
	(0, 1178): Wna (guard.dbg.spill[0], 0x0)
	(0, 1179): MALLOC self.dbg.spill
	(0, 1180): Wna (self.dbg.spill[0], 0x0)
	(0, 1181): MALLOC order.dbg.spill1
	(0, 1182): MALLOC val.dbg.spill
	(0, 1183): MALLOC order.dbg.spill
	(0, 1184): Wna (order.dbg.spill[0], 0) atomic.rs:2419
	(0, 1185): Wna (val.dbg.spill[0], 1) atomic.rs:635
	(0, 1186): Wna (order.dbg.spill1[0], 0) atomic.rs:635
	(0, 1187): Wna (self.dbg.spill[0], 0x28) atomic.rs:635
	(0, 1188): Wna (guard.dbg.spill[0], 0x4000000000000d00) atomic.rs:635
	(0, 1189): Rna (, 0) [(0, 1080)] poison.rs:53
	(0, 1190): Wna (self.dbg.spill2[0], 0x8000000000000000) panicking.rs:441
	(0, 1191): Wna (self.dbg.spill3[0], 0x8000000000000000) atomic.rs:2421
	(0, 1192): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30) mod.rs:340
	(0, 1193): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70) mod.rs:340
	(0, 1194): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 1195): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 1196): Wna (can_unwind.dbg.spill2.i[0], 1) panic_info.rs:37
	(0, 1197): Wna (force_no_backtrace.dbg.spill3.i[0], 0) panic_info.rs:38
	(0, 1198): Wna (order.i[0], 0) panic_info.rs:38
	(0, 1199): Wna (dst.dbg.spill.i[0], 0x8000000000000000) panic_info.rs:38
	(0, 1200): Rna (order.i[0], 0) [(0, 1198)] atomic.rs:3312
	(0, 1201): Rrlx (_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h541136d3707a013fE, 0) [INIT] atomic.rs:3313
	(0, 1202): Wna (, 0) atomic.rs:3313
	(0, 1203): Rna (, 0) [(0, 1202)] atomic.rs:3320
	(0, 1204): FREE poison.rs:56
	(0, 1205): FREE
	(0, 1206): FREE
	(0, 1207): FREE
	(0, 1208): FREE
	(0, 1209): FREE
	(0, 1210): FREE
	(0, 1211): FREE
	(0, 1212): FREE
	(0, 1213): FREE
	(0, 1214): FREE
	(0, 1215): FREE
	(0, 1216): FREE
	(0, 1217): FREE
	(0, 1218): FREE
	(0, 1219): FREE
	(0, 1220): FREE
	(0, 1221): FREE
	(0, 1222): FREE
	(0, 1223): FREE
	(0, 1224): FREE
	(0, 1225): FREE
	(0, 1226): FREE
	(0, 1227): FREE
	(0, 1228): FREE
	(0, 1229): FREE
	(0, 1230): Rna (, 0x20) [(0, 1079)] rwlock.rs:727
	(0, 1231): Wna (self.dbg.spill3[0], 0x20) rwlock.rs:727
	(0, 1232): Wna (self.dbg.spill4[0], 0x20) futex.rs:160
	(0, 1233): Wna (self.dbg.spill5[0], 0x20) atomic.rs:2703
	(0, 1234): Wna (dst.dbg.spill[0], 0x20) cell.rs:2148
	(0, 1235): URrel (, 1073741823) [(0, 796)] atomic.rs:3365
	(0, 1236): UWrel (, 0)
	(0, 1237): Wna (, 1073741823) atomic.rs:3365
	(0, 1238): Rna (, 1073741823) [(0, 1237)] atomic.rs:3365
	(0, 1239): Wna (state.dbg.spill[0], 0) futex.rs:160
	(0, 1240): FREE rwlock.rs:729
	(0, 1241): FREE
	(0, 1242): FREE
	(0, 1243): FREE
	(0, 1244): FREE
	(0, 1245): FREE
	(0, 1246): FREE
	(0, 1247): FREE
	(0, 1248): FREE
	(0, 1249): FREE
	(0, 1250): FREE
	(0, 1251): FREE mod.rs:543
	(0, 1252): FREE main.rs:12
	(0, 1253): FREE
	(0, 1254): FREE
	(0, 1255): FREE
	(0, 1256): FREE
	(0, 1257): FREE
	(0, 1258): FREE
	(0, 1259): FREE
	(0, 1260): FREE
	(0, 1261): FREE
	(0, 1262): FREE
	(0, 1263): FREE
	(0, 1264): FREE
	(0, 1265): FREE
	(0, 1266): FREE
	(0, 1267): FREE
	(0, 1268): FREE
	(0, 1269): FREE
	(0, 1270): FREE
	(0, 1271): FREE
	(0, 1272): FREE
	(0, 1273): FREE
	(0, 1274): FREE
	(0, 1275): FREE
	(0, 1276): FREE
	(0, 1277): FREE
	(0, 1278): MALLOC 
	(0, 1279): Wna (, 0x0)
	(0, 1280): MALLOC dst.dbg.spill.i
	(0, 1281): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1282): MALLOC self.dbg.spill14.i
	(0, 1283): Wna (self.dbg.spill14.i[0], 0x0)
	(0, 1284): MALLOC self.dbg.spill13.i
	(0, 1285): Wna (self.dbg.spill13.i[0], 0x0)
	(0, 1286): MALLOC self.dbg.spill12.i
	(0, 1287): Wna (self.dbg.spill12.i[0], 0x0)
	(0, 1288): MALLOC self.dbg.spill11.i
	(0, 1289): Wna (self.dbg.spill11.i[0], 0x0)
	(0, 1290): MALLOC self.dbg.spill9.i
	(0, 1291): Wna (self.dbg.spill9.i[0], 0x0)
	(0, 1292): MALLOC self.dbg.spill.i
	(0, 1293): Wna (self.dbg.spill.i[0], 0x0)
	(0, 1294): MALLOC force_no_backtrace.dbg.spill6.i
	(0, 1295): MALLOC can_unwind.dbg.spill5.i
	(0, 1296): MALLOC pieces.dbg.spill4.i
	(0, 1297): Wna (pieces.dbg.spill4.i[0], 0x0)
	(0, 1298): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1299): MALLOC can_unwind.dbg.spill.i
	(0, 1300): MALLOC pieces.dbg.spill.i
	(0, 1301): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1302): MALLOC order.dbg.spill3.i
	(0, 1303): MALLOC order.dbg.spill2.i
	(0, 1304): MALLOC val.dbg.spill1.i
	(0, 1305): Wna (val.dbg.spill1.i[0], 0x0)
	(0, 1306): MALLOC order.dbg.spill.i
	(0, 1307): MALLOC val.dbg.spill.i
	(0, 1308): Wna (val.dbg.spill.i[0], 0x0)
	(0, 1309): MALLOC _1.dbg.spill
	(0, 1310): Wna (_1.dbg.spill[0], 0x0)
	(0, 1311): Wna (_1.dbg.spill[0], 0x4000000000000aa0)
	(0, 1312): Wna (val.dbg.spill.i[0], 1) atomic.rs:2701
	(0, 1313): Wna (order.dbg.spill.i[0], 1) atomic.rs:2701
	(0, 1314): Wna (val.dbg.spill1.i[0], 1) atomic.rs:3359
	(0, 1315): Wna (order.dbg.spill2.i[0], 1) atomic.rs:3359
	(0, 1316): Wna (order.dbg.spill3.i[0], 2) atomic.rs:3652
	(0, 1317): Wna (pieces.dbg.spill.i[0], 0x8000000000001748) mod.rs:340
	(0, 1318): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 1319): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 1320): Wna (pieces.dbg.spill4.i[0], 0x80000000000017e8) mod.rs:340
	(0, 1321): Wna (can_unwind.dbg.spill5.i[0], 1) panic_info.rs:37
	(0, 1322): Wna (force_no_backtrace.dbg.spill6.i[0], 0) panic_info.rs:38
	(0, 1323): Wna (self.dbg.spill.i[0], 0x4000000000000aa0) panic_info.rs:38
	(0, 1324): Wna (self.dbg.spill9.i[0], 0x4000000000000aa0) sync.rs:1837
	(0, 1325): Rna (_x[0], 0x10) [(0, 597)] non_null.rs:402
	(0, 1326): Wna (self.dbg.spill11.i[0], 0x10) non_null.rs:402
	(0, 1327): Wna (self.dbg.spill12.i[0], 0x10) non_null.rs:351
	(0, 1328): Wna (self.dbg.spill13.i[0], 0x10) sync.rs:2490
	(0, 1329): Wna (self.dbg.spill14.i[0], 0x10) atomic.rs:2703
	(0, 1330): Wna (dst.dbg.spill.i[0], 0x10) cell.rs:2148
	(0, 1331): URrel (, 2) [(0, 570)] atomic.rs:3365
	(0, 1332): UWrel (, 1)
	(0, 1333): Wna (, 2) atomic.rs:3365
	(0, 1334): Rna (, 2) [(0, 1333)] atomic.rs:3365
	(0, 1335): FREE mod.rs:543
	(0, 1336): FREE
	(0, 1337): FREE
	(0, 1338): FREE
	(0, 1339): FREE
	(0, 1340): FREE
	(0, 1341): FREE
	(0, 1342): FREE
	(0, 1343): FREE
	(0, 1344): FREE
	(0, 1345): FREE
	(0, 1346): FREE
	(0, 1347): FREE
	(0, 1348): FREE
	(0, 1349): FREE
	(0, 1350): FREE
	(0, 1351): FREE
	(0, 1352): FREE
	(0, 1353): FREE
	(0, 1354): FREE
	(0, 1355): FREE mod.rs:543
	(0, 1356): FREE
	(0, 1357): FREE mod.rs:938
	(0, 1358): MALLOC self.dbg.spill4
	(0, 1359): Wna (self.dbg.spill4[0], 0x0)
	(0, 1360): MALLOC self.dbg.spill3
	(0, 1361): Wna (self.dbg.spill3[0], 0x0)
	(0, 1362): MALLOC self.dbg.spill1
	(0, 1363): Wna (self.dbg.spill1[0], 0x0)
	(0, 1364): MALLOC self.dbg.spill
	(0, 1365): Wna (self.dbg.spill[0], 0x0)
	(0, 1366): Wna (self.dbg.spill[0], 0x4000000000000548)
	(0, 1367): Wna (self.dbg.spill1[0], 0x4000000000000548) sync.rs:1837
	(0, 1368): Rna (drop_flag[0], 0x10) [(0, 530)] non_null.rs:402
	(0, 1369): Wna (self.dbg.spill3[0], 0x10) non_null.rs:402
	(0, 1370): Wna (self.dbg.spill4[0], 0x10) non_null.rs:351
	(0, 1371): FREE sync.rs:2149
	(0, 1372): FREE
	(0, 1373): FREE
	(0, 1374): FREE
	(0, 1375): MALLOC self.dbg.spill
	(0, 1376): Wna (self.dbg.spill[0], 0x0)
	(0, 1377): Wna (self.dbg.spill[0], 0x20)
	(0, 1378): MALLOC location.dbg.spill7.i1
	(0, 1379): Wna (location.dbg.spill7.i1[0], 0x0)
	(0, 1380): MALLOC 
	(0, 1381): Wna (, 0x0)
	(0, 1382): MALLOC location.dbg.spill.i2
	(0, 1383): Wna (location.dbg.spill.i2[0], 0x0)
	(0, 1384): MALLOC 
	(0, 1385): Wna (, 0x0)
	(0, 1386): MALLOC dst.dbg.spill.i3
	(0, 1387): Wna (dst.dbg.spill.i3[0], 0x0)
	(0, 1388): MALLOC pi5.i4
	(0, 1389): Wna (pi5.i4[0], 0x0)
	(0, 1390): Wna (pi5.i4[8], 0x0)
	(0, 1391): Wna (pi5.i4[16], 0x0)
	(0, 1392): Wna (pi5.i4[24], 0x0)
	(0, 1393): Wna (pi5.i4[32], 0x0)
	(0, 1394): Wna (pi5.i4[40], 0x0)
	(0, 1395): Wna (pi5.i4[48], 0x0)
	(0, 1396): Wna (pi5.i4[56], 0x0)
	(0, 1397): MALLOC pi.i5
	(0, 1398): Wna (pi.i5[0], 0x0)
	(0, 1399): Wna (pi.i5[8], 0x0)
	(0, 1400): Wna (pi.i5[16], 0x0)
	(0, 1401): Wna (pi.i5[24], 0x0)
	(0, 1402): Wna (pi.i5[32], 0x0)
	(0, 1403): Wna (pi.i5[40], 0x0)
	(0, 1404): Wna (pi.i5[48], 0x0)
	(0, 1405): Wna (pi.i5[56], 0x0)
	(0, 1406): MALLOC fmt4.i6
	(0, 1407): Wna (fmt4.i6[0], 0x0)
	(0, 1408): Wna (fmt4.i6[8], 0x0)
	(0, 1409): Wna (fmt4.i6[16], 0x0)
	(0, 1410): Wna (fmt4.i6[24], 0x0)
	(0, 1411): Wna (fmt4.i6[32], 0x0)
	(0, 1412): Wna (fmt4.i6[40], 0x0)
	(0, 1413): MALLOC fmt.i7
	(0, 1414): Wna (fmt.i7[0], 0x0)
	(0, 1415): Wna (fmt.i7[8], 0x0)
	(0, 1416): Wna (fmt.i7[16], 0x0)
	(0, 1417): Wna (fmt.i7[24], 0x0)
	(0, 1418): Wna (fmt.i7[32], 0x0)
	(0, 1419): Wna (fmt.i7[40], 0x0)
	(0, 1420): MALLOC _0.i8
	(0, 1421): MALLOC order.i
	(0, 1422): MALLOC force_no_backtrace.dbg.spill3.i9
	(0, 1423): MALLOC can_unwind.dbg.spill2.i10
	(0, 1424): MALLOC force_no_backtrace.dbg.spill.i11
	(0, 1425): MALLOC can_unwind.dbg.spill.i12
	(0, 1426): MALLOC pieces.dbg.spill1.i13
	(0, 1427): Wna (pieces.dbg.spill1.i13[0], 0x0)
	(0, 1428): MALLOC pieces.dbg.spill.i14
	(0, 1429): Wna (pieces.dbg.spill.i14[0], 0x0)
	(0, 1430): MALLOC location.dbg.spill7.i
	(0, 1431): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1432): MALLOC 
	(0, 1433): Wna (, 0x0)
	(0, 1434): MALLOC location.dbg.spill.i
	(0, 1435): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1436): MALLOC 
	(0, 1437): Wna (, 0x0)
	(0, 1438): MALLOC ok.dbg.spill.i
	(0, 1439): MALLOC val.dbg.spill.i
	(0, 1440): MALLOC new.dbg.spill.i
	(0, 1441): MALLOC old.dbg.spill.i
	(0, 1442): MALLOC dst.dbg.spill.i
	(0, 1443): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1444): MALLOC pi5.i
	(0, 1445): Wna (pi5.i[0], 0x0)
	(0, 1446): Wna (pi5.i[8], 0x0)
	(0, 1447): Wna (pi5.i[16], 0x0)
	(0, 1448): Wna (pi5.i[24], 0x0)
	(0, 1449): Wna (pi5.i[32], 0x0)
	(0, 1450): Wna (pi5.i[40], 0x0)
	(0, 1451): Wna (pi5.i[48], 0x0)
	(0, 1452): Wna (pi5.i[56], 0x0)
	(0, 1453): MALLOC pi.i
	(0, 1454): Wna (pi.i[0], 0x0)
	(0, 1455): Wna (pi.i[8], 0x0)
	(0, 1456): Wna (pi.i[16], 0x0)
	(0, 1457): Wna (pi.i[24], 0x0)
	(0, 1458): Wna (pi.i[32], 0x0)
	(0, 1459): Wna (pi.i[40], 0x0)
	(0, 1460): Wna (pi.i[48], 0x0)
	(0, 1461): Wna (pi.i[56], 0x0)
	(0, 1462): MALLOC fmt4.i
	(0, 1463): Wna (fmt4.i[0], 0x0)
	(0, 1464): Wna (fmt4.i[8], 0x0)
	(0, 1465): Wna (fmt4.i[16], 0x0)
	(0, 1466): Wna (fmt4.i[24], 0x0)
	(0, 1467): Wna (fmt4.i[32], 0x0)
	(0, 1468): Wna (fmt4.i[40], 0x0)
	(0, 1469): MALLOC fmt.i
	(0, 1470): Wna (fmt.i[0], 0x0)
	(0, 1471): Wna (fmt.i[8], 0x0)
	(0, 1472): Wna (fmt.i[16], 0x0)
	(0, 1473): Wna (fmt.i[24], 0x0)
	(0, 1474): Wna (fmt.i[32], 0x0)
	(0, 1475): Wna (fmt.i[40], 0x0)
	(0, 1476): MALLOC _8.i
	(0, 1477): Wna (, 0x0)
	(0, 1478): MALLOC _0.i
	(0, 1479): Wna (, 0x0)
	(0, 1480): MALLOC failure.i
	(0, 1481): MALLOC success.i
	(0, 1482): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1483): MALLOC can_unwind.dbg.spill2.i
	(0, 1484): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1485): MALLOC can_unwind.dbg.spill.i
	(0, 1486): MALLOC pieces.dbg.spill1.i
	(0, 1487): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1488): MALLOC pieces.dbg.spill.i
	(0, 1489): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1490): MALLOC self.dbg.spill5
	(0, 1491): Wna (self.dbg.spill5[0], 0x0)
	(0, 1492): MALLOC self.dbg.spill4
	(0, 1493): Wna (self.dbg.spill4[0], 0x0)
	(0, 1494): MALLOC new.dbg.spill
	(0, 1495): MALLOC self.dbg.spill3
	(0, 1496): Wna (self.dbg.spill3[0], 0x0)
	(0, 1497): MALLOC state.dbg.spill
	(0, 1498): MALLOC self.dbg.spill2
	(0, 1499): Wna (self.dbg.spill2[0], 0x0)
	(0, 1500): MALLOC self.dbg.spill1
	(0, 1501): Wna (self.dbg.spill1[0], 0x0)
	(0, 1502): MALLOC self.dbg.spill
	(0, 1503): Wna (self.dbg.spill[0], 0x0)
	(0, 1504): MALLOC _6
	(0, 1505): Wna (, 0x0)
	(0, 1506): MALLOC failure.dbg.spill
	(0, 1507): MALLOC success.dbg.spill
	(0, 1508): MALLOC order.dbg.spill
	(0, 1509): Wna (order.dbg.spill[0], 0) atomic.rs:2419
	(0, 1510): Wna (success.dbg.spill[0], 2) atomic.rs:2638
	(0, 1511): Wna (failure.dbg.spill[0], 0) atomic.rs:2639
	(0, 1512): Wna (self.dbg.spill[0], 0x20) atomic.rs:2639
	(0, 1513): Wna (self.dbg.spill1[0], 0x20) futex.rs:79
	(0, 1514): Wna (self.dbg.spill2[0], 0x20) atomic.rs:2421
	(0, 1515): Wna (pieces.dbg.spill.i14[0], 0x8000000000000b30) mod.rs:340
	(0, 1516): Wna (pieces.dbg.spill1.i13[0], 0x8000000000000b70) mod.rs:340
	(0, 1517): Wna (can_unwind.dbg.spill.i12[0], 1) panic_info.rs:37
	(0, 1518): Wna (force_no_backtrace.dbg.spill.i11[0], 0) panic_info.rs:38
	(0, 1519): Wna (can_unwind.dbg.spill2.i10[0], 1) panic_info.rs:37
	(0, 1520): Wna (force_no_backtrace.dbg.spill3.i9[0], 0) panic_info.rs:38
	(0, 1521): Wna (order.i[0], 0) panic_info.rs:38
	(0, 1522): Wna (dst.dbg.spill.i3[0], 0x20) panic_info.rs:38
	(0, 1523): Rna (order.i[0], 0) [(0, 1521)] atomic.rs:3312
	(0, 1524): Rrlx (, 0) [(0, 1236)] atomic.rs:3313
	(0, 1525): Wna (, 0) atomic.rs:3313
	(0, 1526): Rna (, 0) [(0, 1525)] atomic.rs:3320
	(0, 1527): Wna (state.dbg.spill[0], 0) atomic.rs:2421
	(0, 1528): Wna (self.dbg.spill3[0], 0x20) futex.rs:81
	(0, 1529): Wna (new.dbg.spill[0], 1) futex.rs:83
	(0, 1530): Wna (self.dbg.spill4[0], 0x20) atomic.rs:2642
	(0, 1531): Wna (pieces.dbg.spill.i[0], 0x8000000000000ae8) mod.rs:340
	(0, 1532): Wna (pieces.dbg.spill1.i[0], 0x8000000000000aa0) mod.rs:340
	(0, 1533): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 1534): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 1535): Wna (can_unwind.dbg.spill2.i[0], 1) panic_info.rs:37
	(0, 1536): Wna (force_no_backtrace.dbg.spill3.i[0], 0) panic_info.rs:38
	(0, 1537): Wna (success.i[0], 2) panic_info.rs:38
	(0, 1538): Wna (failure.i[0], 0) panic_info.rs:38
	(0, 1539): Wna (dst.dbg.spill.i[0], 0x20) panic_info.rs:38
	(0, 1540): Wna (old.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 1541): Wna (new.dbg.spill.i[0], 1) panic_info.rs:38
	(0, 1542): Rna (success.i[0], 2) [(0, 1537)] atomic.rs:3419
	(0, 1543): Rna (failure.i[0], 0) [(0, 1538)] atomic.rs:3419
	(0, 1544): CRacq (, 0) [(0, 1236)] atomic.rs:3423
	(0, 1545): CWacq (, 1)
	(0, 1546): Wna (, 0) atomic.rs:3423
	(0, 1547): Wna (, 1) atomic.rs:3423
	(0, 1548): Rna (, 0) [(0, 1546)] atomic.rs:3418
	(0, 1549): Wna (val.dbg.spill.i[0], 0) atomic.rs:3418
	(0, 1550): Rna (, 1) [(0, 1547)] atomic.rs:3418
	(0, 1551): Wna (ok.dbg.spill.i[0], 1) atomic.rs:3418
	(0, 1552): Wna (, 0) atomic.rs:3439
	(0, 1553): Wna (, 0) atomic.rs:3439
	(0, 1554): Rna (, 0) [(0, 1553)] atomic.rs:3440
	(0, 1555): Rna (, 0) [(0, 1552)] atomic.rs:3440
	(0, 1556): Wna (, 0) atomic.rs:2642
	(0, 1557): Wna (, 0) atomic.rs:2642
	(0, 1558): Wna (self.dbg.spill5[0], 0x40000000000019a4) futex.rs:81
	(0, 1559): Rna (, 0) [(0, 1556)] result.rs:564
	(0, 1560): FREE futex.rs:88
	(0, 1561): FREE
	(0, 1562): FREE
	(0, 1563): FREE
	(0, 1564): FREE
	(0, 1565): FREE
	(0, 1566): FREE
	(0, 1567): FREE
	(0, 1568): FREE
	(0, 1569): FREE
	(0, 1570): FREE
	(0, 1571): FREE
	(0, 1572): FREE
	(0, 1573): FREE
	(0, 1574): FREE
	(0, 1575): FREE
	(0, 1576): FREE
	(0, 1577): FREE
	(0, 1578): FREE
	(0, 1579): FREE
	(0, 1580): FREE
	(0, 1581): FREE
	(0, 1582): FREE
	(0, 1583): FREE
	(0, 1584): FREE
	(0, 1585): FREE
	(0, 1586): FREE
	(0, 1587): FREE
	(0, 1588): FREE
	(0, 1589): FREE
	(0, 1590): FREE
	(0, 1591): FREE
	(0, 1592): FREE
	(0, 1593): FREE
	(0, 1594): FREE
	(0, 1595): FREE
	(0, 1596): FREE
	(0, 1597): FREE
	(0, 1598): FREE
	(0, 1599): FREE
	(0, 1600): FREE
	(0, 1601): FREE
	(0, 1602): FREE
	(0, 1603): FREE
	(0, 1604): FREE
	(0, 1605): FREE
	(0, 1606): FREE
	(0, 1607): FREE
	(0, 1608): FREE
	(0, 1609): FREE
	(0, 1610): FREE
	(0, 1611): FREE
	(0, 1612): MALLOC location.dbg.spill7.i
	(0, 1613): Wna (location.dbg.spill7.i[0], 0x0)
	(0, 1614): MALLOC 
	(0, 1615): Wna (, 0x0)
	(0, 1616): MALLOC location.dbg.spill.i
	(0, 1617): Wna (location.dbg.spill.i[0], 0x0)
	(0, 1618): MALLOC 
	(0, 1619): Wna (, 0x0)
	(0, 1620): MALLOC dst.dbg.spill.i
	(0, 1621): Wna (dst.dbg.spill.i[0], 0x0)
	(0, 1622): MALLOC pi5.i
	(0, 1623): Wna (pi5.i[0], 0x0)
	(0, 1624): Wna (pi5.i[8], 0x0)
	(0, 1625): Wna (pi5.i[16], 0x0)
	(0, 1626): Wna (pi5.i[24], 0x0)
	(0, 1627): Wna (pi5.i[32], 0x0)
	(0, 1628): Wna (pi5.i[40], 0x0)
	(0, 1629): Wna (pi5.i[48], 0x0)
	(0, 1630): Wna (pi5.i[56], 0x0)
	(0, 1631): MALLOC pi.i
	(0, 1632): Wna (pi.i[0], 0x0)
	(0, 1633): Wna (pi.i[8], 0x0)
	(0, 1634): Wna (pi.i[16], 0x0)
	(0, 1635): Wna (pi.i[24], 0x0)
	(0, 1636): Wna (pi.i[32], 0x0)
	(0, 1637): Wna (pi.i[40], 0x0)
	(0, 1638): Wna (pi.i[48], 0x0)
	(0, 1639): Wna (pi.i[56], 0x0)
	(0, 1640): MALLOC fmt4.i
	(0, 1641): Wna (fmt4.i[0], 0x0)
	(0, 1642): Wna (fmt4.i[8], 0x0)
	(0, 1643): Wna (fmt4.i[16], 0x0)
	(0, 1644): Wna (fmt4.i[24], 0x0)
	(0, 1645): Wna (fmt4.i[32], 0x0)
	(0, 1646): Wna (fmt4.i[40], 0x0)
	(0, 1647): MALLOC fmt.i
	(0, 1648): Wna (fmt.i[0], 0x0)
	(0, 1649): Wna (fmt.i[8], 0x0)
	(0, 1650): Wna (fmt.i[16], 0x0)
	(0, 1651): Wna (fmt.i[24], 0x0)
	(0, 1652): Wna (fmt.i[32], 0x0)
	(0, 1653): Wna (fmt.i[40], 0x0)
	(0, 1654): MALLOC _0.i
	(0, 1655): MALLOC order.i
	(0, 1656): MALLOC force_no_backtrace.dbg.spill3.i
	(0, 1657): MALLOC can_unwind.dbg.spill2.i
	(0, 1658): MALLOC force_no_backtrace.dbg.spill.i
	(0, 1659): MALLOC can_unwind.dbg.spill.i
	(0, 1660): MALLOC pieces.dbg.spill1.i
	(0, 1661): Wna (pieces.dbg.spill1.i[0], 0x0)
	(0, 1662): MALLOC pieces.dbg.spill.i
	(0, 1663): Wna (pieces.dbg.spill.i[0], 0x0)
	(0, 1664): MALLOC self.dbg.spill4
	(0, 1665): Wna (self.dbg.spill4[0], 0x0)
	(0, 1666): MALLOC self.dbg.spill2
	(0, 1667): Wna (self.dbg.spill2[0], 0x0)
	(0, 1668): MALLOC self.dbg.spill
	(0, 1669): Wna (self.dbg.spill[0], 0x0)
	(0, 1670): MALLOC lock.dbg.spill
	(0, 1671): Wna (lock.dbg.spill[0], 0x0)
	(0, 1672): MALLOC _2
	(0, 1673): MALLOC order.dbg.spill
	(0, 1674): Wna (order.dbg.spill[0], 0) atomic.rs:607
	(0, 1675): Wna (lock.dbg.spill[0], 0x20) poison.rs:199
	(0, 1676): Wna (self.dbg.spill[0], 0x28) rwlock.rs:580
	(0, 1677): Wna (self.dbg.spill2[0], 0x28) poison.rs:65
	(0, 1678): Wna (self.dbg.spill4[0], 0x28) atomic.rs:610
	(0, 1679): Wna (pieces.dbg.spill.i[0], 0x8000000000000b30) mod.rs:340
	(0, 1680): Wna (pieces.dbg.spill1.i[0], 0x8000000000000b70) mod.rs:340
	(0, 1681): Wna (can_unwind.dbg.spill.i[0], 1) panic_info.rs:37
	(0, 1682): Wna (force_no_backtrace.dbg.spill.i[0], 0) panic_info.rs:38
	(0, 1683): Wna (can_unwind.dbg.spill2.i[0], 1) panic_info.rs:37
	(0, 1684): Wna (force_no_backtrace.dbg.spill3.i[0], 0) panic_info.rs:38
	(0, 1685): Wna (order.i[0], 0) panic_info.rs:38
	(0, 1686): Wna (dst.dbg.spill.i[0], 0x28) panic_info.rs:38
	(0, 1687): Rna (order.i[0], 0) [(0, 1685)] atomic.rs:3312
	(0, 1688): Rrlx (, 0) [(0, 505)] atomic.rs:3313
	(0, 1689): Wna (, 0) atomic.rs:3313
	(0, 1690): Wna (, 0) poison.rs:37
	(0, 1691): Rna (, 0) [(0, 1690)] rwlock.rs:580
	(0, 1692): MALLOC guard.dbg.spill1
	(0, 1693): Wna (guard.dbg.spill1[0], 0x0)
	(0, 1694): Wna (guard.dbg.spill1[8], 0x0)
	(0, 1695): MALLOC f.dbg.spill
	(0, 1696): Wna (f.dbg.spill[0], 0x0)
	(0, 1697): MALLOC result
	(0, 1698): Wna (result[0], 0)
	(0, 1699): Wna (f.dbg.spill[0], 0x20)
	(0, 1700): Rna (result[0], 0) [(0, 1698)] poison.rs:323
	(0, 1701): MALLOC ptr.dbg.spill
	(0, 1702): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1703): MALLOC self.dbg.spill
	(0, 1704): Wna (self.dbg.spill[0], 0x0)
	(0, 1705): MALLOC _1.dbg.spill
	(0, 1706): Wna (_1.dbg.spill[0], 0x0)
	(0, 1707): Wna (_1.dbg.spill[0], 0x20)
	(0, 1708): Wna (self.dbg.spill[0], 0x29) rwlock.rs:581
	(0, 1709): Wna (ptr.dbg.spill[0], 0x29) cell.rs:2148
	(0, 1710): MALLOC ptr.dbg.spill1
	(0, 1711): Wna (ptr.dbg.spill1[0], 0x0)
	(0, 1712): MALLOC ptr.dbg.spill
	(0, 1713): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1714): Wna (ptr.dbg.spill[0], 0x29)
	(0, 1715): Wna (ptr.dbg.spill1[0], 0x29) mut_ptr.rs:51
	(0, 1716): FREE ub_checks.rs:72
	(0, 1717): FREE
	(0, 1718): FREE rwlock.rs:583
	(0, 1719): FREE
	(0, 1720): FREE
	(0, 1721): Wna (_14[8], 0x29) poison.rs:324
	(0, 1722): Wna (_14[16], 0x20) poison.rs:324
	(0, 1723): Wna (_14[0], 0) poison.rs:324
	(0, 1724): FREE poison.rs:328
	(0, 1725): FREE
	(0, 1726): FREE
	(0, 1727): FREE rwlock.rs:584
	(0, 1728): FREE
	(0, 1729): FREE
	(0, 1730): FREE
	(0, 1731): FREE
	(0, 1732): FREE
	(0, 1733): FREE
	(0, 1734): FREE
	(0, 1735): FREE
	(0, 1736): FREE
	(0, 1737): FREE
	(0, 1738): FREE
	(0, 1739): FREE
	(0, 1740): FREE
	(0, 1741): FREE
	(0, 1742): FREE
	(0, 1743): FREE
	(0, 1744): FREE
	(0, 1745): FREE
	(0, 1746): FREE
	(0, 1747): FREE
	(0, 1748): FREE
	(0, 1749): FREE
	(0, 1750): FREE rwlock.rs:277
	(0, 1751): Rna (_14[0], 0) [(0, 1723)] result.rs:1100
	(0, 1752): Rna (_14[8], 0x29) [(0, 1721)] result.rs:1101
	(0, 1753): Rna (_14[16], 0x20) [(0, 1722)] result.rs:1101
	(0, 1754): Wna (t.dbg.spill.i[0], 0x29) result.rs:1101
	(0, 1755): Wna (t.dbg.spill.i[8], 0x20) result.rs:1101
	(0, 1756): Wna (, 0x29) main.rs:22
	(0, 1757): Wna (, 0x20) main.rs:22
	(0, 1758): MALLOC self.dbg.spill4
	(0, 1759): Wna (self.dbg.spill4[0], 0x0)
	(0, 1760): MALLOC self.dbg.spill3
	(0, 1761): Wna (self.dbg.spill3[0], 0x0)
	(0, 1762): MALLOC self.dbg.spill1
	(0, 1763): Wna (self.dbg.spill1[0], 0x0)
	(0, 1764): MALLOC self.dbg.spill
	(0, 1765): Wna (self.dbg.spill[0], 0x0)
	(0, 1766): Wna (self.dbg.spill[0], 0x4000000000000520)
	(0, 1767): Wna (self.dbg.spill1[0], 0x4000000000000520) rwlock.rs:658
	(0, 1768): Rna (, 0x29) [(0, 1756)] non_null.rs:402
	(0, 1769): Wna (self.dbg.spill3[0], 0x29) non_null.rs:402
	(0, 1770): Wna (self.dbg.spill4[0], 0x29) non_null.rs:351
	(0, 1771): FREE rwlock.rs:659
	(0, 1772): FREE
	(0, 1773): FREE
	(0, 1774): FREE
	(0, 1775): Wna (left_val.dbg.spill[0], 0x29) main.rs:22
	(0, 1776): Wna (right_val.dbg.spill[0], 0x8000000000001b9e) main.rs:22
	(0, 1777): Rna (, 1) [(0, 1090)] main.rs:22
	(0, 1778): MALLOC _1.dbg.spill
	(0, 1779): Wna (_1.dbg.spill[0], 0x0)
	(0, 1780): Wna (_1.dbg.spill[0], 0x4000000000000520)
	(0, 1781): MALLOC state.dbg.spill
	(0, 1782): MALLOC 
	(0, 1783): MALLOC dst.dbg.spill
	(0, 1784): Wna (dst.dbg.spill[0], 0x0)
	(0, 1785): MALLOC self.dbg.spill6
	(0, 1786): Wna (self.dbg.spill6[0], 0x0)
	(0, 1787): MALLOC self.dbg.spill5
	(0, 1788): Wna (self.dbg.spill5[0], 0x0)
	(0, 1789): MALLOC self.dbg.spill4
	(0, 1790): Wna (self.dbg.spill4[0], 0x0)
	(0, 1791): MALLOC self.dbg.spill
	(0, 1792): Wna (self.dbg.spill[0], 0x0)
	(0, 1793): MALLOC order.dbg.spill2
	(0, 1794): MALLOC val.dbg.spill1
	(0, 1795): MALLOC order.dbg.spill
	(0, 1796): MALLOC val.dbg.spill
	(0, 1797): Wna (val.dbg.spill[0], 1) atomic.rs:2701
	(0, 1798): Wna (order.dbg.spill[0], 1) atomic.rs:2701
	(0, 1799): Wna (val.dbg.spill1[0], 1) atomic.rs:3359
	(0, 1800): Wna (order.dbg.spill2[0], 1) atomic.rs:3359
	(0, 1801): Wna (self.dbg.spill[0], 0x4000000000000520) atomic.rs:3359
	(0, 1802): Rna (, 0x20) [(0, 1757)] rwlock.rs:716
	(0, 1803): Wna (self.dbg.spill4[0], 0x20) rwlock.rs:716
	(0, 1804): Wna (self.dbg.spill5[0], 0x20) futex.rs:92
	(0, 1805): Wna (self.dbg.spill6[0], 0x20) atomic.rs:2703
	(0, 1806): Wna (dst.dbg.spill[0], 0x20) cell.rs:2148
	(0, 1807): URrel (, 1) [(0, 1545)] atomic.rs:3365
	(0, 1808): UWrel (, 0)
	(0, 1809): Wna (, 1) atomic.rs:3365
	(0, 1810): Rna (, 1) [(0, 1809)] atomic.rs:3365
	(0, 1811): Wna (state.dbg.spill[0], 0) futex.rs:92
	(0, 1812): FREE rwlock.rs:718
	(0, 1813): FREE
	(0, 1814): FREE
	(0, 1815): FREE
	(0, 1816): FREE
	(0, 1817): FREE
	(0, 1818): FREE
	(0, 1819): FREE
	(0, 1820): FREE
	(0, 1821): FREE
	(0, 1822): FREE
	(0, 1823): FREE mod.rs:543
	(0, 1824): MALLOC t.dbg.spill
	(0, 1825): MALLOC _6
	(0, 1826): MALLOC _5
	(0, 1827): MALLOC _2
	(0, 1828): Wna (, 0x0)
	(0, 1829): MALLOC value.dbg.spill4
	(0, 1830): MALLOC v.dbg.spill3
	(0, 1831): MALLOC value.dbg.spill2
	(0, 1832): MALLOC v.dbg.spill1
	(0, 1833): MALLOC value.dbg.spill
	(0, 1834): MALLOC v.dbg.spill
	(0, 1835): Wna (v.dbg.spill[0], 0) atomic.rs:2193
	(0, 1836): Wna (value.dbg.spill[0], 0) cell.rs:2078
	(0, 1837): Wna (v.dbg.spill1[0], 0) atomic.rs:2193
	(0, 1838): Wna (value.dbg.spill2[0], 0) cell.rs:2078
	(0, 1839): Wna (v.dbg.spill3[0], 0) atomic.rs:412
	(0, 1840): Wna (value.dbg.spill4[0], 0) cell.rs:2078
	(0, 1841): Wna (t.dbg.spill[0], 0) cell.rs:2078
	(0, 1842): Wna (, 0) atomic.rs:2194
	(0, 1843): Rna (, 0) [(0, 1842)] futex.rs:67
	(0, 1844): Wna (, 0) futex.rs:67
	(0, 1845): Rna (, 0) [(0, 1842)] futex.rs:67
	(0, 1846): Wna (, 0) futex.rs:67
	(0, 1847): Wna (, 0) atomic.rs:413
	(0, 1848): Rna (, 0) [(0, 1846)(0, 1844)] rwlock.rs:225
	(0, 1849): Wna (, 0) rwlock.rs:225
	(0, 1850): Rna (, 0) [(0, 1847)] rwlock.rs:225
	(0, 1851): Wna (, 0) rwlock.rs:225
	(0, 1852): Wna (, 0) rwlock.rs:225
	(0, 1853): FREE rwlock.rs:226
	(0, 1854): FREE
	(0, 1855): FREE
	(0, 1856): FREE
	(0, 1857): FREE
	(0, 1858): FREE
	(0, 1859): FREE
	(0, 1860): FREE
	(0, 1861): FREE
	(0, 1862): FREE
	(0, 1863): MALLOC 
	(0, 1864): Wna (, 0x0)
	(0, 1865): Wna (, 0x0)
	(0, 1866): MALLOC ptr.dbg.spill5
	(0, 1867): Wna (ptr.dbg.spill5[0], 0x0)
	(0, 1868): MALLOC src.dbg.spill
	(0, 1869): Wna (src.dbg.spill[0], 0x0)
	(0, 1870): MALLOC self.dbg.spill4
	(0, 1871): Wna (self.dbg.spill4[0], 0x0)
	(0, 1872): MALLOC ptr.dbg.spill
	(0, 1873): Wna (ptr.dbg.spill[0], 0x0)
	(0, 1874): MALLOC self.dbg.spill
	(0, 1875): Wna (self.dbg.spill[0], 0x0)
	(0, 1876): MALLOC x.dbg.spill
	(0, 1877): Wna (x.dbg.spill[0], 0x0)
	(0, 1878): MALLOC b
	(0, 1879): Wna (b[0], 0x0)
	(0, 1880): MALLOC _4
	(0, 1881): Wna (, 0x0)
	(0, 1882): MALLOC _3
	(0, 1883): Wna (_3[0], 0x0)
	(0, 1884): Wna (_3[8], 0x0)
	(0, 1885): Wna (_3[16], 0x0)
	(0, 1886): Wna (_3[24], 0x0)
	(0, 1887): MALLOC value.dbg.spill2
	(0, 1888): Wna (value.dbg.spill2[0], 0x0)
	(0, 1889): MALLOC v.dbg.spill1
	(0, 1890): Wna (v.dbg.spill1[0], 0x0)
	(0, 1891): MALLOC value.dbg.spill
	(0, 1892): Wna (value.dbg.spill[0], 0x0)
	(0, 1893): MALLOC v.dbg.spill
	(0, 1894): Wna (v.dbg.spill[0], 0x0) atomic.rs:2193
	(0, 1895): Wna (v.dbg.spill[0], 1) atomic.rs:2193
	(0, 1896): Wna (value.dbg.spill[0], 1) cell.rs:2078
	(0, 1897): Wna (v.dbg.spill1[0], 1) atomic.rs:2193
	(0, 1898): Wna (value.dbg.spill2[0], 1) cell.rs:2078
	(0, 1899): Wna (, 1) atomic.rs:2194
	(0, 1900): Rna (, 1) [(0, 1899)] sync.rs:390
	(0, 1901): Wna (_3[0], 1) sync.rs:390
	(0, 1902): Rna (, 1) [(0, 1899)] sync.rs:390
	(0, 1903): Wna (_3[8], 1) sync.rs:390
	(0, 1904): Rna (, 0) [(0, 1849)] sync.rs:390
	(0, 1905): Wna (_3[16], 0) sync.rs:390
	(0, 1906): Rna (, 0) [BOTTOM] sync.rs:390
Coherence:
v.dbg.spill[0]: [ (0, 1894): Wna (SU#7576, 0x0) (0, 1895): Wna (SU#7576, 1) ]
value.dbg.spill[0]: [ (0, 1892): Wna (SU#7560, 0x0) (0, 1896): Wna (SU#7560, 1) ]
v.dbg.spill1[0]: [ (0, 1890): Wna (SU#7544, 0x0) (0, 1897): Wna (SU#7544, 1) ]
value.dbg.spill2[0]: [ (0, 1888): Wna (SU#7528, 0x0) (0, 1898): Wna (SU#7528, 1) ]
_3[16]: [ (0, 1885): Wna (SU#7504, 0x0) (0, 1905): Wna (SU#7504, 0) ]
_3[8]: [ (0, 1884): Wna (SU#7496, 0x0) (0, 1903): Wna (SU#7496, 1) ]
_3[0]: [ (0, 1883): Wna (SU#7488, 0x0) (0, 1901): Wna (SU#7488, 1) ]
: [ (0, 1881): Wna (SU#7480, 0x0) (0, 1899): Wna (SU#7480, 1) ]
: [ (0, 1851): Wna (SU#1204, 0) (0, 1852): Wna (SU#1205, 0) ]
: [ (0, 1842): Wna (SU#7300, 0) (0, 1847): Wna (SU#7296, 0) ]
v.dbg.spill3[0]: [ (0, 1839): Wna (SU#7316, 0) (0, 1840): Wna (SU#7315, 0) ]
v.dbg.spill1[0]: [ (0, 1837): Wna (SU#7324, 0) (0, 1838): Wna (SU#7320, 0) ]
: [ (0, 1828): Wna (SU#7304, 0x0) (0, 1844): Wna (SU#7304, 0) (0, 1846): Wna (SU#7308, 0) ]
order.dbg.spill[0]: [ (0, 1798): Wna (SU#7287, 1) (0, 1799): Wna (SU#7280, 1) ]
val.dbg.spill[0]: [ (0, 1797): Wna (SU#7288, 1) (0, 1841): Wna (SU#7295, 0) ]
self.dbg.spill[0]: [ (0, 1792): Wna (SU#7264, 0x0) (0, 1801): Wna (SU#7264, 0x4000000000000520) ]
self.dbg.spill4[0]: [ (0, 1790): Wna (SU#7256, 0x0) (0, 1803): Wna (SU#7256, 0x20) ]
self.dbg.spill5[0]: [ (0, 1788): Wna (SU#7240, 0x0) (0, 1804): Wna (SU#7240, 0x20) ]
self.dbg.spill6[0]: [ (0, 1786): Wna (SU#7224, 0x0) (0, 1805): Wna (SU#7224, 0x20) ]
dst.dbg.spill[0]: [ (0, 1784): Wna (SU#7208, 0x0) (0, 1806): Wna (SU#7208, 0x20) ]
_1.dbg.spill[0]: [ (0, 1779): Wna (SU#7176, 0x0) (0, 1780): Wna (SU#7176, 0x4000000000000520) ]
self.dbg.spill[0]: [ (0, 1765): Wna (SU#7160, 0x0) (0, 1766): Wna (SU#7160, 0x4000000000000520) ]
self.dbg.spill1[0]: [ (0, 1763): Wna (SU#7152, 0x0) (0, 1767): Wna (SU#7152, 0x4000000000000520) ]
self.dbg.spill3[0]: [ (0, 1761): Wna (SU#7136, 0x0) (0, 1769): Wna (SU#7136, 0x29) ]
self.dbg.spill4[0]: [ (0, 1759): Wna (SU#7120, 0x0) (0, 1770): Wna (SU#7120, 0x29) ]
ptr.dbg.spill[0]: [ (0, 1713): Wna (SU#7104, 0x0) (0, 1714): Wna (SU#7104, 0x29) ]
ptr.dbg.spill1[0]: [ (0, 1711): Wna (SU#7088, 0x0) (0, 1715): Wna (SU#7088, 0x29) ]
_1.dbg.spill[0]: [ (0, 1706): Wna (SU#7072, 0x0) (0, 1707): Wna (SU#7072, 0x20) ]
self.dbg.spill[0]: [ (0, 1704): Wna (SU#7056, 0x0) (0, 1708): Wna (SU#7056, 0x29) ]
ptr.dbg.spill[0]: [ (0, 1702): Wna (SU#7040, 0x0) (0, 1709): Wna (SU#7040, 0x29) ]
can_unwind.dbg.spill.i[0]: [ (0, 1681): Wna (SU#6908, 1) (0, 1682): Wna (SU#6907, 0) (0, 1683): Wna (SU#6906, 1) (0, 1684): Wna (SU#6905, 0) (0, 1685): Wna (SU#6904, 0) ]
lock.dbg.spill[0]: [ (0, 1671): Wna (SU#6984, 0x0) (0, 1675): Wna (SU#6984, 0x20) ]
self.dbg.spill[0]: [ (0, 1669): Wna (SU#6976, 0x0) (0, 1676): Wna (SU#6976, 0x28) ]
self.dbg.spill2[0]: [ (0, 1667): Wna (SU#6960, 0x0) (0, 1677): Wna (SU#6960, 0x28) ]
self.dbg.spill4[0]: [ (0, 1665): Wna (SU#6944, 0x0) (0, 1678): Wna (SU#6944, 0x28) ]
pieces.dbg.spill.i[0]: [ (0, 1663): Wna (SU#6928, 0x0) (0, 1679): Wna (SU#6928, 0x8000000000000b30) ]
pieces.dbg.spill1.i[0]: [ (0, 1661): Wna (SU#6912, 0x0) (0, 1680): Wna (SU#6912, 0x8000000000000b70) ]
dst.dbg.spill.i[0]: [ (0, 1621): Wna (SU#6640, 0x0) (0, 1686): Wna (SU#6640, 0x28) ]
success.i[0]: [ (0, 1537): Wna (SU#6423, 2) (0, 1538): Wna (SU#6422, 0) (0, 1552): Wna (SU#6416, 0) ]
can_unwind.dbg.spill.i[0]: [ (0, 1533): Wna (SU#6427, 1) (0, 1534): Wna (SU#6426, 0) (0, 1535): Wna (SU#6425, 1) (0, 1536): Wna (SU#6424, 0) ]
can_unwind.dbg.spill.i12[0]: [ (0, 1517): Wna (SU#6020, 1) (0, 1518): Wna (SU#6019, 0) (0, 1519): Wna (SU#6018, 1) (0, 1520): Wna (SU#6017, 0) (0, 1521): Wna (SU#6016, 0) ]
order.dbg.spill[0]: [ (0, 1509): Wna (SU#6575, 0) (0, 1510): Wna (SU#6574, 2) (0, 1511): Wna (SU#6573, 0) (0, 1557): Wna (SU#6568, 0) ]
: [ (0, 1505): Wna (SU#6564, 0x0) (0, 1556): Wna (SU#6564, 0) ]
self.dbg.spill[0]: [ (0, 1503): Wna (SU#6552, 0x0) (0, 1512): Wna (SU#6552, 0x20) ]
self.dbg.spill1[0]: [ (0, 1501): Wna (SU#6536, 0x0) (0, 1513): Wna (SU#6536, 0x20) ]
self.dbg.spill2[0]: [ (0, 1499): Wna (SU#6520, 0x0) (0, 1514): Wna (SU#6520, 0x20) ]
self.dbg.spill3[0]: [ (0, 1496): Wna (SU#6496, 0x0) (0, 1528): Wna (SU#6496, 0x20) ]
self.dbg.spill4[0]: [ (0, 1493): Wna (SU#6480, 0x0) (0, 1530): Wna (SU#6480, 0x20) ]
self.dbg.spill5[0]: [ (0, 1491): Wna (SU#6464, 0x0) (0, 1558): Wna (SU#6464, 0x40000000000019a4) ]
pieces.dbg.spill.i[0]: [ (0, 1489): Wna (SU#6448, 0x0) (0, 1531): Wna (SU#6448, 0x8000000000000ae8) ]
pieces.dbg.spill1.i[0]: [ (0, 1487): Wna (SU#6432, 0x0) (0, 1532): Wna (SU#6432, 0x8000000000000aa0) ]
: [ (0, 1479): Wna (SU#6412, 0x0) (0, 1553): Wna (SU#6412, 0) ]
: [ (0, 1477): Wna (SU#6400, 0x0) (0, 1546): Wna (SU#6400, 0) (0, 1547): Wna (SU#6404, 1) ]
dst.dbg.spill.i[0]: [ (0, 1443): Wna (SU#6136, 0x0) (0, 1539): Wna (SU#6136, 0x20) ]
_1.dbg.spill[0]: [ (0, 602): Wna (SU#2752, 0x0) (0, 603): Wna (SU#2752, 0x4000000000000aa0) ]
val.dbg.spill[0]: [ (0, 556): Wna (SU#2688, 0x0) (0, 557): Wna (SU#2688, 1) ]
self.dbg.spill8[0]: [ (0, 540): Wna (SU#2584, 0x0) (0, 567): Wna (SU#2584, 0x10) ]
dst.dbg.spill[0]: [ (0, 538): Wna (SU#2568, 0x0) (0, 568): Wna (SU#2568, 0x10) ]
: [ (0, 536): Wna (SU#2552, 0x0) (0, 571): Wna (SU#2552, 1) ]
old_size.dbg.spill[0]: [ (0, 534): Wna (SU#2536, 0x0) (0, 573): Wna (SU#2536, 1) ]
ptr.dbg.spill[0]: [ (0, 532): Wna (SU#2520, 0x0) (0, 575): Wna (SU#2520, 0x10) ]
f.dbg.spill[0]: [ (0, 1696): Wna (SU#7024, 0x0) (0, 1699): Wna (SU#7024, 0x20) ]
: [ (0, 505): Wna (HU#40, 0) (0, 507): Wna (HU#41, 0) (0, 1090): Wna (HU#41, 1) ]
ptr.dbg.spill[0]: [ (0, 430): Wna (SU#2504, 0x0) (0, 431): Wna (SU#2504, 0x10) ]
ptr.dbg.spill1[0]: [ (0, 428): Wna (SU#2488, 0x0) (0, 432): Wna (SU#2488, 0x10) ]
ptr.dbg.spill1[0]: [ (0, 408): Wna (SU#2464, 0x0) (0, 412): Wna (SU#2464, 0x10) ]
len.dbg.spill[0]: [ (0, 382): Wna (SU#2448, 0x0) (0, 383): Wna (SU#2448, 0) ]
layout[8]: [ (0, 376): Wna (SU#2400, 0x0) (0, 387): Wna (SU#2400, 32) ]
self6[0]: [ (0, 360): Wna (SU#2280, 0x0) (0, 418): Wna (SU#2280, 0x10) ]
self.dbg.spill14[0]: [ (0, 328): Wna (SU#2048, 0x0) (0, 397): Wna (SU#2048, 0x4000000000000908) ]
self.dbg.spill15[0]: [ (0, 326): Wna (SU#2032, 0x0) (0, 398): Wna (SU#2032, 0x4000000000000908) ]
self.dbg.spill17[0]: [ (0, 324): Wna (SU#2016, 0x0) (0, 400): Wna (SU#2016, 8) ]
ptr.dbg.spill23[0]: [ (0, 316): Wna (SU#1952, 0x0) (0, 406): Wna (SU#1952, 0x10) ]
v.dbg.spill[0]: [ (0, 314): Wna (SU#1936, 0x0) (0, 417): Wna (SU#1936, 0x10) ]
v.dbg.spill25[0]: [ (0, 312): Wna (SU#1928, 0x0) (0, 420): Wna (SU#1928, 0x10) ]
ptr.dbg.spill27[0]: [ (0, 310): Wna (SU#1912, 0x0) (0, 423): Wna (SU#1912, 0x10) ]
data.dbg.spill[0]: [ (0, 308): Wna (SU#1896, 0x0) (0, 424): Wna (SU#1896, 0x10) ]
ptr.dbg.spill28[8]: [ (0, 306): Wna (SU#1880, 0x0) (0, 426): Wna (SU#1880, 32) ]
ptr.dbg.spill28[0]: [ (0, 305): Wna (SU#1872, 0x0) (0, 425): Wna (SU#1872, 0x10) ]
self.dbg.spill[0]: [ (0, 297): Wna (SU#1856, 0x0) (0, 298): Wna (SU#1856, 0x1) ]
: [ (0, 295): Wna (SU#1840, 0x0) (0, 477): Wna (SU#1840, 32) ]
: [ (0, 294): Wna (SU#1832, 0x0) (0, 476): Wna (SU#1832, 0x10) ]
size.dbg.spill[0]: [ (0, 287): Wna (SU#1784, 0x0) (0, 299): Wna (SU#1784, 32) ]
align.dbg.spill[0]: [ (0, 285): Wna (SU#1768, 0x0) (0, 300): Wna (SU#1768, 8) ]
self.dbg.spill1[0]: [ (0, 283): Wna (SU#1752, 0x0) (0, 301): Wna (SU#1752, 8) ]
layout.dbg.spill[8]: [ (0, 281): Wna (SU#1736, 0x0) (0, 303): Wna (SU#1736, 32) ]
layout.dbg.spill[0]: [ (0, 280): Wna (SU#1728, 0x0) (0, 302): Wna (SU#1728, 8) ]
ptr.dbg.spill[8]: [ (0, 278): Wna (SU#1712, 0x0) (0, 482): Wna (SU#1712, 32) ]
pieces.dbg.spill.i14[0]: [ (0, 1429): Wna (SU#6040, 0x0) (0, 1515): Wna (SU#6040, 0x8000000000000b30) ]
ptr.dbg.spill[0]: [ (0, 277): Wna (SU#1704, 0x0) (0, 481): Wna (SU#1704, 0x10) ]
self.dbg.spill2[0]: [ (0, 275): Wna (SU#1688, 0x0) (0, 483): Wna (SU#1688, 0x10) ]
v.dbg.spill[0]: [ (0, 252): Wna (SU#1648, 0x0) (0, 253): Wna (SU#1648, 1) ]
value.dbg.spill[0]: [ (0, 250): Wna (SU#1632, 0x0) (0, 254): Wna (SU#1632, 1) ]
v.dbg.spill1[0]: [ (0, 248): Wna (SU#1616, 0x0) (0, 255): Wna (SU#1616, 1) ]
value.dbg.spill2[0]: [ (0, 246): Wna (SU#1600, 0x0) (0, 256): Wna (SU#1600, 1) ]
_3[24]: [ (0, 244): Wna (SU#1584, 0x0) (0, 267): Wna (SU#1584, 0) (0, 269): Wna (SU#1585, 0) ]
_3[16]: [ (0, 243): Wna (SU#1576, 0x0) (0, 263): Wna (SU#1576, 0) (0, 265): Wna (SU#1580, 0) ]
_3[8]: [ (0, 242): Wna (SU#1568, 0x0) (0, 261): Wna (SU#1568, 1) ]
_3[0]: [ (0, 241): Wna (SU#1560, 0x0) (0, 259): Wna (SU#1560, 1) ]
: [ (0, 239): Wna (SU#1544, 0x0) (0, 257): Wna (SU#1544, 1) ]
b[0]: [ (0, 237): Wna (SU#1528, 0x0) (0, 509): Wna (SU#1528, 0x10) ]
x.dbg.spill[0]: [ (0, 235): Wna (SU#1512, 0x0) (0, 508): Wna (SU#1512, 0x10) ]
self.dbg.spill[0]: [ (0, 233): Wna (SU#1504, 0x0) (0, 510): Wna (SU#1504, 0x40000000000005f8) ]
ptr.dbg.spill[0]: [ (0, 231): Wna (SU#1488, 0x0) (0, 512): Wna (SU#1488, 0x10) ]
self.dbg.spill4[0]: [ (0, 229): Wna (SU#1472, 0x0) (0, 513): Wna (SU#1472, 0x40000000000005f8) ]
src.dbg.spill[0]: [ (0, 227): Wna (SU#1456, 0x0) (0, 514): Wna (SU#1456, 0x4000000000000600) ]
ptr.dbg.spill5[0]: [ (0, 225): Wna (SU#1440, 0x0) (0, 515): Wna (SU#1440, 0x10) ]
dst.dbg.spill.i[0]: [ (0, 1125): Wna (SU#5000, 0x0) (0, 1199): Wna (SU#5000, 0x8000000000000000) ]
self.dbg.spill[0]: [ (0, 550): Wna (SU#2656, 0x0) (0, 561): Wna (SU#2656, 0x4000000000000548) ]
self.dbg.spill[0]: [ (0, 1105): Wna (SU#4904, 0x0) (0, 1114): Wna (SU#4904, 0x4000000000000cf8) ]
result[1]: [ (0, 1021): Wna (SU#4768, 0) (0, 1030): Wna (SU#4769, 0) ]
f.dbg.spill[0]: [ (0, 1018): Wna (SU#4752, 0x0) (0, 1022): Wna (SU#4752, 0x20) ]
ptr.dbg.spill[0]: [ (0, 410): Wna (SU#2472, 0x0) (0, 411): Wna (SU#2472, 0x10) ]
dst.dbg.spill.i3[0]: [ (0, 1387): Wna (SU#5744, 0x0) (0, 1522): Wna (SU#5744, 0x20) ]
self.dbg.spill[0]: [ (0, 926): Wna (SU#4712, 0x0) (0, 933): Wna (SU#4712, 0x28) ]
len.dbg.spill1[0]: [ (0, 380): Wna (SU#2432, 0x0) (0, 384): Wna (SU#2432, 0) ]
metadata.dbg.spill[0]: [ (0, 378): Wna (SU#2416, 0x0) (0, 385): Wna (SU#2416, 0) ]
: [ (0, 186): Wna (SU#1376, 0x0) (0, 202): Wna (SU#1376, 0) (0, 204): Wna (SU#1380, 0) ]
self.dbg.spill3[0]: [ (0, 922): Wna (SU#4680, 0x0) (0, 935): Wna (SU#4680, 0x8000000000000000) ]
layout[0]: [ (0, 375): Wna (SU#2392, 0x0) (0, 386): Wna (SU#2392, 8) ]
self.dbg.spill4[0]: [ (0, 919): Wna (SU#4664, 0x0) (0, 951): Wna (SU#4664, 0x28) ]
drop_flag[0]: [ (0, 181): Wna (SU#1352, 0x0) (0, 530): Wna (SU#1352, 0x10) ]
: [ (0, 209): Wna (SU#1344, 0) (0, 210): Wna (SU#1345, 0) ]
self.dbg.spill[0]: [ (0, 1376): Wna (SU#5672, 0x0) (0, 1377): Wna (SU#5672, 0x20) ]
val.dbg.spill1[0]: [ (0, 553): Wna (SU#2672, 0x0) (0, 559): Wna (SU#2672, 1) ]
self.dbg.spill3[0]: [ (0, 548): Wna (SU#2640, 0x0) (0, 562): Wna (SU#2640, 0x4000000000000548) ]
: [ (0, 345): Wna (SU#2168, 0x0) (0, 401): Wna (SU#2168, 8) ]
self.dbg.spill13.i[0]: [ (0, 1285): Wna (SU#5456, 0x0) (0, 1328): Wna (SU#5456, 0x10) ]
self.dbg.spill5[0]: [ (0, 546): Wna (SU#2624, 0x0) (0, 564): Wna (SU#2624, 0x10) ]
self.dbg.spill3[0]: [ (0, 1103): Wna (SU#4896, 0x0) (0, 1231): Wna (SU#4896, 0x20) ]
: [ (0, 501): Wna (HU#32, 0) (0, 503): Wna (HU#36, 0) (0, 796): CWacq (HU#32, 1073741823) (0, 1236): UWrel (HU#32, 0) (0, 1545): CWacq (HU#32, 1) (0, 1808): UWrel (HU#32, 0) ]
self.dbg.spill9[0]: [ (0, 340): Wna (SU#2136, 0x0) (0, 390): Wna (SU#2136, 0x4000000000000958) ]
self.dbg.spill[0]: [ (0, 343): Wna (SU#2152, 0x0) (0, 388): Wna (SU#2152, 0x1) ]
self.dbg.spill14.i[0]: [ (0, 1283): Wna (SU#5440, 0x0) (0, 1329): Wna (SU#5440, 0x10) ]
self.dbg.spill6[0]: [ (0, 544): Wna (SU#2608, 0x0) (0, 565): Wna (SU#2608, 0x10) ]
self.dbg.spill4[0]: [ (0, 1101): Wna (SU#4880, 0x0) (0, 1232): Wna (SU#4880, 0x20) ]
: [ (0, 497): Wna (HU#16, 1) (0, 570): UWrlx (HU#16, 2) (0, 1332): UWrel (HU#16, 1) ]
size.dbg.spill[0]: [ (0, 338): Wna (SU#2120, 0x0) (0, 392): Wna (SU#2120, 32) ]
dst.dbg.spill.i[0]: [ (0, 1281): Wna (SU#5424, 0x0) (0, 1330): Wna (SU#5424, 0x10) ]
: [ (0, 372): Wna (SU#2368, 0x0) (0, 435): Wna (SU#2368, 0x10) ]
self.dbg.spill7[0]: [ (0, 542): Wna (SU#2592, 0x0) (0, 566): Wna (SU#2592, 0x10) ]
self.dbg.spill5[0]: [ (0, 1099): Wna (SU#4864, 0x0) (0, 1233): Wna (SU#4864, 0x20) ]
raw_ptr[0]: [ (0, 370): Wna (SU#2352, 0x0) (0, 404): Wna (SU#2352, 0x10) ]
: [ (0, 177): Wna (SU#1312, 0x0) (0, 1756): Wna (SU#1312, 0x29) ]
self.dbg.spill1[0]: [ (0, 1363): Wna (SU#5640, 0x0) (0, 1367): Wna (SU#5640, 0x4000000000000548) ]
dst.dbg.spill[0]: [ (0, 1097): Wna (SU#4848, 0x0) (0, 1234): Wna (SU#4848, 0x20) ]
self.dbg.spill[0]: [ (0, 1180): Wna (SU#5392, 0x0) (0, 1187): Wna (SU#5392, 0x28) ]
can_unwind.dbg.spill.i[0]: [ (0, 938): Wna (SU#4615, 1) (0, 939): Wna (SU#4614, 0) (0, 940): Wna (SU#4613, 1) (0, 941): Wna (SU#4612, 0) (0, 942): Wna (SU#4611, 0) ]
_14[16]: [ (0, 175): Wna (SU#1296, 0x0) (0, 1722): Wna (SU#1296, 0x20) ]
self.dbg.spill3[0]: [ (0, 1361): Wna (SU#5624, 0x0) (0, 1369): Wna (SU#5624, 0x10) ]
self.dbg.spill11.i[0]: [ (0, 1289): Wna (SU#5480, 0x0) (0, 1326): Wna (SU#5480, 0x10) ]
dropping_struct.dbg.spill[0]: [ (0, 142): Wna (SU#1048, 0x0) (0, 594): Wna (SU#1048, 0x10) ]
guard.dbg.spill[0]: [ (0, 1178): Wna (SU#5376, 0x0) (0, 1188): Wna (SU#5376, 0x4000000000000d00) ]
layout5[8]: [ (0, 365): Wna (SU#2320, 0x0) (0, 396): Wna (SU#2320, 32) ]
_14[0]: [ (0, 173): Wna (SU#1280, 0x0) (0, 1723): Wna (SU#1280, 0) ]
self.dbg.spill4[0]: [ (0, 1359): Wna (SU#5608, 0x0) (0, 1370): Wna (SU#5608, 0x10) ]
order.dbg.spill[0]: [ (0, 1111): Wna (SU#4927, 1) (0, 1112): Wna (SU#4920, 1073741823) ]
_1.dbg.spill[0]: [ (0, 1092): Wna (SU#4816, 0x0) (0, 1093): Wna (SU#4816, 0x4000000000000cf8) ]
left_val.dbg.spill[0]: [ (0, 140): Wna (SU#1032, 0x0) (0, 1775): Wna (SU#1032, 0x29) ]
self.dbg.spill2[0]: [ (0, 1176): Wna (SU#5360, 0x0) (0, 1190): Wna (SU#5360, 0x8000000000000000) ]
self.dbg.spill[0]: [ (0, 1084): Wna (SU#4800, 0x0) (0, 1085): Wna (SU#4800, 0x4000000000000cf8) ]
right_val.dbg.spill[0]: [ (0, 138): Wna (SU#1016, 0x0) (0, 1776): Wna (SU#1016, 0x8000000000001b9e) ]
self.dbg.spill3[0]: [ (0, 1174): Wna (SU#5344, 0x0) (0, 1191): Wna (SU#5344, 0x8000000000000000) ]
self.dbg.spill.i[0]: [ (0, 1293): Wna (SU#5512, 0x0) (0, 1323): Wna (SU#5512, 0x4000000000000aa0) ]
self.dbg.spill[0]: [ (0, 577): Wna (SU#2704, 0x0) (0, 578): Wna (SU#2704, 0x4000000000000550) ]
_x[0]: [ (0, 596): Wna (SU#2720, 0x0) (0, 597): Wna (SU#2720, 0x10) ]
self7[0]: [ (0, 358): Wna (SU#2264, 0x0) (0, 415): Wna (SU#2264, 0x10) ]
: [ (0, 362): Wna (SU#2296, 0x0) (0, 421): Wna (SU#2296, 0x10) ]
val.dbg.spill.i[0]: [ (0, 1308): Wna (SU#5584, 0x0) (0, 1312): Wna (SU#5584, 1) ]
layout5[0]: [ (0, 364): Wna (SU#2312, 0x0) (0, 395): Wna (SU#2312, 8) ]
: [ (0, 906): Wna (SU#4600, 0x0) (0, 946): Wna (SU#4600, 0) ]
_14[8]: [ (0, 174): Wna (SU#1288, 0x0) (0, 1721): Wna (SU#1288, 0x29) ]
pieces.dbg.spill.i[0]: [ (0, 915): Wna (SU#4632, 0x0) (0, 936): Wna (SU#4632, 0x8000000000000b30) ]
: [ (0, 178): Wna (SU#1320, 0x0) (0, 1757): Wna (SU#1320, 0x20) ]
: [ (0, 373): Wna (SU#2376, 0x0) (0, 436): Wna (SU#2376, 32) ]
self.dbg.spill5[0]: [ (0, 917): Wna (SU#4648, 0x0) (0, 952): Wna (SU#4648, 0x28) ]
t.dbg.spill.i[0]: [ (0, 124): Wna (SU#912, 0x0) (0, 1754): Wna (SU#912, 0x29) ]
t.dbg.spill.i[8]: [ (0, 125): Wna (SU#920, 0x0) (0, 1755): Wna (SU#920, 0x20) ]
: [ (0, 1159): Wna (SU#5264, 0x0) (0, 1202): Wna (SU#5264, 0) ]
can_unwind.dbg.spill2.i[0]: [ (0, 1196): Wna (SU#5279, 1) (0, 1197): Wna (SU#5278, 0) (0, 1198): Wna (SU#5277, 0) ]
pieces.dbg.spill1.i[0]: [ (0, 1166): Wna (SU#5288, 0x0) (0, 1193): Wna (SU#5288, 0x8000000000000b70) ]
pieces.dbg.spill.i[0]: [ (0, 1168): Wna (SU#5304, 0x0) (0, 1192): Wna (SU#5304, 0x8000000000000b30) ]
order.dbg.spill[0]: [ (0, 1184): Wna (SU#5404, 0) (0, 1185): Wna (SU#5403, 1) (0, 1186): Wna (SU#5402, 0) ]
self.dbg.spill12.i[0]: [ (0, 1287): Wna (SU#5472, 0x0) (0, 1327): Wna (SU#5472, 0x10) ]
pieces.dbg.spill.i[0]: [ (0, 1301): Wna (SU#5544, 0x0) (0, 1317): Wna (SU#5544, 0x8000000000001748) ]
val.dbg.spill1.i[0]: [ (0, 1305): Wna (SU#5568, 0x0) (0, 1314): Wna (SU#5568, 1) ]
_1.dbg.spill[0]: [ (0, 1310): Wna (SU#5592, 0x0) (0, 1311): Wna (SU#5592, 0x4000000000000aa0) ]
value.dbg.spill2[0]: [ (0, 196): Wna (SU#1388, 0) (0, 197): Wna (SU#1385, 0) (0, 198): Wna (SU#1384, 0) ]
t.dbg.spill[0]: [ (0, 199): Wna (SU#1364, 0) (0, 205): Wna (SU#1365, 0) ]
t.dbg.spill.i[0]: [ (0, 663): Wna (SU#3200, 0x0) (0, 1077): Wna (SU#3200, 0x20) ]
t.dbg.spill.i[8]: [ (0, 664): Wna (SU#3208, 0x0) (0, 1078): Wna (SU#3208, 0) ]
self.dbg.spill[0]: [ (0, 672): Wna (SU#3272, 0x0) (0, 680): Wna (SU#3272, 0x4000000000000aa0) ]
_5[0]: [ (0, 674): Wna (SU#3288, 0x0) (0, 1035): Wna (SU#3288, 0) ]
_5[8]: [ (0, 675): Wna (SU#3296, 0x0) (0, 1033): Wna (SU#3296, 0x20) ]
_5[16]: [ (0, 676): Wna (SU#3304, 0x0) (0, 1034): Wna (SU#3304, 0) ]
: [ (0, 678): Wna (SU#3320, 0x0) (0, 1079): Wna (SU#3320, 0x20) ]
: [ (0, 679): Wna (SU#3328, 0x0) (0, 1080): Wna (SU#3328, 0) ]
self.dbg.spill4[0]: [ (0, 682): Wna (SU#3344, 0x0) (0, 693): Wna (SU#3344, 0x10) ]
self.dbg.spill3[0]: [ (0, 684): Wna (SU#3352, 0x0) (0, 692): Wna (SU#3352, 0x10) ]
self.dbg.spill1[0]: [ (0, 686): Wna (SU#3368, 0x0) (0, 690): Wna (SU#3368, 0x4000000000000aa0) ]
self.dbg.spill[0]: [ (0, 688): Wna (SU#3384, 0x0) (0, 689): Wna (SU#3384, 0x4000000000000aa0) ]
dst.dbg.spill.i[0]: [ (0, 711): Wna (SU#3480, 0x0) (0, 790): Wna (SU#3480, 0x20) ]
: [ (0, 745): Wna (SU#3748, 0x0) (0, 797): Wna (SU#3748, 0) ]
: [ (0, 747): Wna (SU#3760, 0x0) (0, 803): Wna (SU#3764, 0) (0, 804): Wna (SU#3760, 0) ]
pieces.dbg.spill1.i[0]: [ (0, 755): Wna (SU#3776, 0x0) (0, 783): Wna (SU#3776, 0x8000000000000aa0) ]
pieces.dbg.spill.i[0]: [ (0, 757): Wna (SU#3792, 0x0) (0, 782): Wna (SU#3792, 0x8000000000000ae8) ]
self.dbg.spill4[0]: [ (0, 759): Wna (SU#3808, 0x0) (0, 809): Wna (SU#3808, 0x4000000000000f28) ]
self.dbg.spill3[0]: [ (0, 761): Wna (SU#3824, 0x0) (0, 781): Wna (SU#3824, 0x20) ]
self.dbg.spill2[0]: [ (0, 763): Wna (SU#3840, 0x0) (0, 780): Wna (SU#3840, 0x20) ]
self.dbg.spill1[0]: [ (0, 765): Wna (SU#3856, 0x0) (0, 779): Wna (SU#3856, 0x20) ]
self.dbg.spill[0]: [ (0, 767): Wna (SU#3864, 0x0) (0, 778): Wna (SU#3864, 0x20) ]
: [ (0, 769): Wna (SU#3880, 0x0) (0, 807): Wna (SU#3880, 0) (0, 808): Wna (SU#3884, 0) ]
new.dbg.spill[0]: [ (0, 775): Wna (SU#3892, 1073741823) (0, 776): Wna (SU#3891, 2) (0, 777): Wna (SU#3890, 0) ]
can_unwind.dbg.spill.i[0]: [ (0, 784): Wna (SU#3773, 1) (0, 785): Wna (SU#3772, 0) (0, 786): Wna (SU#3771, 1) (0, 787): Wna (SU#3770, 0) (0, 788): Wna (SU#3769, 2) (0, 789): Wna (SU#3768, 0) ]
val.dbg.spill.i[0]: [ (0, 800): Wna (SU#3460, 0) (0, 802): Wna (SU#3457, 1) ]
dst.dbg.spill.i3[0]: [ (0, 820): Wna (SU#3968, 0x0) (0, 960): Wna (SU#3968, 0x28) ]
pieces.dbg.spill1.i14[0]: [ (0, 860): Wna (SU#4240, 0x0) (0, 954): Wna (SU#4240, 0x8000000000000b70) ]
pieces.dbg.spill.i15[0]: [ (0, 862): Wna (SU#4256, 0x0) (0, 953): Wna (SU#4256, 0x8000000000000b30) ]
dst.dbg.spill.i[0]: [ (0, 872): Wna (SU#4336, 0x0) (0, 943): Wna (SU#4336, 0x8000000000000000) ]
pieces.dbg.spill1.i[0]: [ (0, 913): Wna (SU#4616, 0x0) (0, 937): Wna (SU#4616, 0x8000000000000b70) ]
self.dbg.spill2[0]: [ (0, 924): Wna (SU#4696, 0x0) (0, 934): Wna (SU#4696, 0x8000000000000000) ]
order.dbg.spill[0]: [ (0, 931): Wna (SU#4726, 0) (0, 932): Wna (SU#4725, 0) (0, 948): Wna (SU#4722, 1) (0, 964): Wna (SU#4724, 0) (0, 965): Wna (SU#4723, 0) ]
can_unwind.dbg.spill.i13[0]: [ (0, 955): Wna (SU#4238, 1) (0, 956): Wna (SU#4237, 0) (0, 957): Wna (SU#4236, 1) (0, 958): Wna (SU#4235, 0) (0, 959): Wna (SU#4234, 0) (0, 963): Wna (SU#4233, 0) ]
_1.dbg.spill[0]: [ (0, 1028): Wna (SU#4776, 0x0) (0, 1029): Wna (SU#4776, 0x20) ]
self.dbg.spill2[0]: [ (0, 1082): Wna (SU#4792, 0x0) (0, 1087): Wna (SU#4792, 0x29) ]
can_unwind.dbg.spill.i[0]: [ (0, 1194): Wna (SU#5281, 1) (0, 1195): Wna (SU#5280, 0) ]
: [ (0, 1279): Wna (SU#5408, 0x0) (0, 1333): Wna (SU#5408, 2) ]
self.dbg.spill9.i[0]: [ (0, 1291): Wna (SU#5496, 0x0) (0, 1324): Wna (SU#5496, 0x4000000000000aa0) ]
pieces.dbg.spill4.i[0]: [ (0, 1297): Wna (SU#5528, 0x0) (0, 1320): Wna (SU#5528, 0x80000000000017e8) ]
can_unwind.dbg.spill.i[0]: [ (0, 1318): Wna (SU#5543, 1) (0, 1319): Wna (SU#5542, 0) ]
can_unwind.dbg.spill5.i[0]: [ (0, 1321): Wna (SU#5526, 1) (0, 1322): Wna (SU#5525, 0) ]
self.dbg.spill[0]: [ (0, 1365): Wna (SU#5656, 0x0) (0, 1366): Wna (SU#5656, 0x4000000000000548) ]
pieces.dbg.spill1.i13[0]: [ (0, 1427): Wna (SU#6024, 0x0) (0, 1516): Wna (SU#6024, 0x8000000000000b70) ]

Trace to (0, 1906):
[test_dropping_struct] main.rs: 19: let drop_flag = Arc::new(RwLock::new(false));
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 412: pub const fn new(v: bool) -> AtomicBool {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2194: Self {v: UnsafeCell::new(v)}
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] atomic.rs: 413: AtomicBool { v: UnsafeCell::new(v as u8) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 226: }
[test_dropping_struct] boxed.rs: 258: pub fn new(x: T) -> Self {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2194: Self {v: UnsafeCell::new(v)}
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] alloc.rs: 242: fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
[test_dropping_struct] alloc.rs: 242: fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
[test_dropping_struct] alloc.rs: 242: fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
[test_dropping_struct] alloc.rs: 242: fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
[test_dropping_struct] alignment.rs: 89: unsafe { mem::transmute::<usize, Alignment>(align) }
[test_dropping_struct] layout.rs: 122: unsafe { Layout { size, align: Alignment::new_unchecked(align) } }
[test_dropping_struct] layout.rs: 122: unsafe { Layout { size, align: Alignment::new_unchecked(align) } }
[test_dropping_struct] non_null.rs: 1484: pub const fn slice_from_raw_parts(data: NonNull<T>, len: usize) -> Self {
[test_dropping_struct] non_null.rs: 1484: pub const fn slice_from_raw_parts(data: NonNull<T>, len: usize) -> Self {
[test_dropping_struct] mod.rs: 889: pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {
[test_dropping_struct] metadata.rs: 128: metadata: <T as Pointee>::Metadata,
[test_dropping_struct] mod.rs: 768: fn from(t: T) -> T {
[test_dropping_struct] mod.rs: 768: fn from(t: T) -> T {
[test_dropping_struct] mod.rs: 768: fn from(t: T) -> T {
[test_dropping_struct] mod.rs: 768: fn from(t: T) -> T {
[test_dropping_struct] alloc.rs: 179: match layout.size() {
[test_dropping_struct] layout.rs: 131: self.size
[test_dropping_struct] layout.rs: 131: self.size
[test_dropping_struct] alloc.rs: 183: let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
[test_dropping_struct] alloc.rs: 183: let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
[test_dropping_struct] alloc.rs: 183: let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
[test_dropping_struct] alloc.rs: 183: let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
[test_dropping_struct] alloc.rs: 100: __rust_alloc(layout.size(), layout.align())
[test_dropping_struct] alloc.rs: 100: __rust_alloc(layout.size(), layout.align())
[test_dropping_struct] layout.rs: 144: self.align.as_usize()
[test_dropping_struct] layout.rs: 144: self.align.as_usize()
[test_dropping_struct] alignment.rs: 97: self.0 as usize
[test_dropping_struct] alignment.rs: 97: self.0 as usize
[test_dropping_struct] alloc.rs: 100: __rust_alloc(layout.size(), layout.align())
[test_dropping_struct] alloc.rs: 100: __rust_alloc(layout.size(), layout.align())
[test_dropping_struct] alloc.rs: 184: let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
[test_dropping_struct] alloc.rs: 184: let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
[test_dropping_struct] mut_ptr.rs: 51: const_eval_select((self as *mut u8,), const_impl, runtime_impl)
[test_dropping_struct] ub_checks.rs: 72: }
[test_dropping_struct] non_null.rs: 249: Some(unsafe { Self::new_unchecked(ptr) })
[test_dropping_struct] option.rs: 1246: Some(v) => Ok(v),
[test_dropping_struct] option.rs: 1246: Some(v) => Ok(v),
[test_dropping_struct] option.rs: 1246: Some(v) => Ok(v),
[test_dropping_struct] result.rs: 1977: Ok(v) => ControlFlow::Continue(v),
[test_dropping_struct] result.rs: 1977: Ok(v) => ControlFlow::Continue(v),
[test_dropping_struct] result.rs: 1977: Ok(v) => ControlFlow::Continue(v),
[test_dropping_struct] alloc.rs: 184: let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
[test_dropping_struct] alloc.rs: 184: let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] metadata.rs: 130: aggregate_raw_ptr(data_pointer, metadata)
[test_dropping_struct] metadata.rs: 130: aggregate_raw_ptr(data_pointer, metadata)
[test_dropping_struct] mut_ptr.rs: 51: const_eval_select((self as *mut u8,), const_impl, runtime_impl)
[test_dropping_struct] ub_checks.rs: 72: }
[test_dropping_struct] alloc.rs: 185: Ok(NonNull::slice_from_raw_parts(ptr, size))
[test_dropping_struct] alloc.rs: 185: Ok(NonNull::slice_from_raw_parts(ptr, size))
[test_dropping_struct] alloc.rs: 188: }
[test_dropping_struct] alloc.rs: 188: }
[test_dropping_struct] alloc.rs: 188: }
[test_dropping_struct] alloc.rs: 243: self.alloc_impl(layout, false)
[test_dropping_struct] alloc.rs: 243: self.alloc_impl(layout, false)
[test_dropping_struct] alloc.rs: 332: match Global.allocate(layout) {
[test_dropping_struct] alloc.rs: 333: Ok(ptr) => ptr.as_mut_ptr(),
[test_dropping_struct] alloc.rs: 333: Ok(ptr) => ptr.as_mut_ptr(),
[test_dropping_struct] alloc.rs: 333: Ok(ptr) => ptr.as_mut_ptr(),
[test_dropping_struct] alloc.rs: 333: Ok(ptr) => ptr.as_mut_ptr(),
[test_dropping_struct] non_null.rs: 476: unsafe { NonNull { pointer: self.as_ptr() as *mut U } }
[test_dropping_struct] alloc.rs: 336: }
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] boxed.rs: 260: Box::new(x)
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] manually_drop.rs: 74: ManuallyDrop { value }
[test_dropping_struct] boxed.rs: 1162: let ptr = addr_of_mut!(**b);
[test_dropping_struct] boxed.rs: 1162: let ptr = addr_of_mut!(**b);
[test_dropping_struct] boxed.rs: 1162: let ptr = addr_of_mut!(**b);
[test_dropping_struct] boxed.rs: 1163: let alloc = unsafe { ptr::read(&b.1) };
[test_dropping_struct] boxed.rs: 1163: let alloc = unsafe { ptr::read(&b.1) };
[test_dropping_struct] non_null.rs: 1798: unsafe { NonNull { pointer: reference as *mut T } }
[test_dropping_struct] sync.rs: 396: }
[test_dropping_struct] main.rs: 19: let drop_flag = Arc::new(RwLock::new(false));
[test_dropping_struct] atomic.rs: 2671: pub fn fetch_add(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2671: pub fn fetch_add(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2671: pub fn fetch_add(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 3342: unsafe fn atomic_add<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3342: unsafe fn atomic_add<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3342: unsafe fn atomic_add<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] sync.rs: 1837: unsafe { self.ptr.as_ref() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] sync.rs: 2117: let old_size = self.inner().strong.fetch_add(1, Relaxed);
[test_dropping_struct] atomic.rs: 2673: unsafe { atomic_add(self.v.get(), val, order) }
[test_dropping_struct] cell.rs: 2148: self as *const UnsafeCell<T> as *const T as *mut T
[test_dropping_struct] atomic.rs: 3346: Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
[test_dropping_struct] atomic.rs: 3346: Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
[test_dropping_struct] atomic.rs: 3346: Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
[test_dropping_struct] atomic.rs: 3346: Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
[test_dropping_struct] sync.rs: 2138: unsafe { Self::from_inner_in(self.ptr, self.alloc.clone()) }
[test_dropping_struct] sync.rs: 2138: unsafe { Self::from_inner_in(self.ptr, self.alloc.clone()) }
[test_dropping_struct] alloc.rs: 51: #[derive(Copy, Clone, Default, Debug)]
[test_dropping_struct] sync.rs: 2139: }
[test_dropping_struct] main.rs: 20: let dropping_struct = DroppingStruct(drop_flag.clone());
[test_dropping_struct] sync.rs: 1837: unsafe { self.ptr.as_ref() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] sync.rs: 2149: }
[test_dropping_struct] atomic.rs: 2636: current: $int_type,
[test_dropping_struct] atomic.rs: 2637: new: $int_type,
[test_dropping_struct] atomic.rs: 2638: success: Ordering,
[test_dropping_struct] atomic.rs: 2639: failure: Ordering) -> Result<$int_type, $int_type> {
[test_dropping_struct] atomic.rs: 2639: failure: Ordering) -> Result<$int_type, $int_type> {
[test_dropping_struct] rwlock.rs: 362: self.inner.write();
[test_dropping_struct] futex.rs: 153: if self.state.compare_exchange_weak(0, WRITE_LOCKED, Acquire, Relaxed).is_err() {
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3419: match (success, failure) {
[test_dropping_struct] atomic.rs: 3419: match (success, failure) {
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3439: if ok { Ok(val) } else { Err(val) }
[test_dropping_struct] atomic.rs: 3439: if ok { Ok(val) } else { Err(val) }
[test_dropping_struct] atomic.rs: 3440: }
[test_dropping_struct] atomic.rs: 3440: }
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] futex.rs: 153: if self.state.compare_exchange_weak(0, WRITE_LOCKED, Acquire, Relaxed).is_err() {
[test_dropping_struct] result.rs: 564: matches!(*self, Ok(_))
[test_dropping_struct] atomic.rs: 2419: pub fn load(&self, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 607: pub fn load(&self, order: Ordering) -> bool {
[test_dropping_struct] atomic.rs: 607: pub fn load(&self, order: Ordering) -> bool {
[test_dropping_struct] panicking.rs: 441: if GLOBAL_PANIC_COUNT.load(Ordering::Relaxed) & !ALWAYS_ABORT_FLAG == 0 {
[test_dropping_struct] atomic.rs: 2421: unsafe { atomic_load(self.v.get(), order) }
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3312: match order {
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3320: }
[test_dropping_struct] panicking.rs: 451: true
[test_dropping_struct] panicking.rs: 592: !panic_count::count_is_zero()
[test_dropping_struct] poison.rs: 43: let ret = Guard {
[test_dropping_struct] poison.rs: 65: self.failed.load(Ordering::Relaxed)
[test_dropping_struct] atomic.rs: 610: unsafe { atomic_load(self.v.get(), order) != 0 }
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3312: match order {
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] poison.rs: 47: if self.get() { Err(PoisonError::new(ret)) } else { Ok(ret) }
[test_dropping_struct] poison.rs: 47: if self.get() { Err(PoisonError::new(ret)) } else { Ok(ret) }
[test_dropping_struct] poison.rs: 48: }
[test_dropping_struct] poison.rs: 48: }
[test_dropping_struct] poison.rs: 48: }
[test_dropping_struct] poison.rs: 323: match result {
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] rwlock.rs: 592: poison::map_result(lock.poison.guard(), |guard| RwLockWriteGuard { lock, poison: guard })
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 328: }
[test_dropping_struct] rwlock.rs: 365: }
[test_dropping_struct] result.rs: 1100: match self {
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] main.rs: 11: *self.0.write().unwrap() = true;
[test_dropping_struct] main.rs: 11: *self.0.write().unwrap() = true;
[test_dropping_struct] rwlock.rs: 676: unsafe { &mut *self.lock.data.get() }
[test_dropping_struct] rwlock.rs: 676: unsafe { &mut *self.lock.data.get() }
[test_dropping_struct] rwlock.rs: 677: }
[test_dropping_struct] main.rs: 11: *self.0.write().unwrap() = true;
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] rwlock.rs: 724: self.lock.poison.done(&self.poison);
[test_dropping_struct] atomic.rs: 2419: pub fn load(&self, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 635: pub fn store(&self, val: bool, order: Ordering) {
[test_dropping_struct] atomic.rs: 635: pub fn store(&self, val: bool, order: Ordering) {
[test_dropping_struct] atomic.rs: 635: pub fn store(&self, val: bool, order: Ordering) {
[test_dropping_struct] atomic.rs: 635: pub fn store(&self, val: bool, order: Ordering) {
[test_dropping_struct] poison.rs: 53: if !guard.panicking && thread::panicking() {
[test_dropping_struct] panicking.rs: 441: if GLOBAL_PANIC_COUNT.load(Ordering::Relaxed) & !ALWAYS_ABORT_FLAG == 0 {
[test_dropping_struct] atomic.rs: 2421: unsafe { atomic_load(self.v.get(), order) }
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3312: match order {
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3320: }
[test_dropping_struct] poison.rs: 56: }
[test_dropping_struct] rwlock.rs: 727: self.lock.inner.write_unlock();
[test_dropping_struct] rwlock.rs: 727: self.lock.inner.write_unlock();
[test_dropping_struct] futex.rs: 160: let state = self.state.fetch_sub(WRITE_LOCKED, Release) - WRITE_LOCKED;
[test_dropping_struct] atomic.rs: 2703: unsafe { atomic_sub(self.v.get(), val, order) }
[test_dropping_struct] cell.rs: 2148: self as *const UnsafeCell<T> as *const T as *mut T
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] futex.rs: 160: let state = self.state.fetch_sub(WRITE_LOCKED, Release) - WRITE_LOCKED;
[test_dropping_struct] rwlock.rs: 729: }
[test_dropping_struct] mod.rs: 543: pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
[test_dropping_struct] main.rs: 12: }
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3652: pub fn fence(order: Ordering) {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] sync.rs: 1837: unsafe { self.ptr.as_ref() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] sync.rs: 2490: if self.inner().strong.fetch_sub(1, Release) != 1 {
[test_dropping_struct] atomic.rs: 2703: unsafe { atomic_sub(self.v.get(), val, order) }
[test_dropping_struct] cell.rs: 2148: self as *const UnsafeCell<T> as *const T as *mut T
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] mod.rs: 543: pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
[test_dropping_struct] mod.rs: 543: pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
[test_dropping_struct] mod.rs: 938: pub fn drop<T>(_x: T) {}
[test_dropping_struct] sync.rs: 1837: unsafe { self.ptr.as_ref() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] sync.rs: 2149: }
[test_dropping_struct] atomic.rs: 2419: pub fn load(&self, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2638: success: Ordering,
[test_dropping_struct] atomic.rs: 2639: failure: Ordering) -> Result<$int_type, $int_type> {
[test_dropping_struct] atomic.rs: 2639: failure: Ordering) -> Result<$int_type, $int_type> {
[test_dropping_struct] futex.rs: 79: let state = self.state.load(Relaxed);
[test_dropping_struct] atomic.rs: 2421: unsafe { atomic_load(self.v.get(), order) }
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3312: match order {
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3320: }
[test_dropping_struct] atomic.rs: 2421: unsafe { atomic_load(self.v.get(), order) }
[test_dropping_struct] futex.rs: 81: || self
[test_dropping_struct] futex.rs: 83: .compare_exchange_weak(state, state + READ_LOCKED, Acquire, Relaxed)
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3419: match (success, failure) {
[test_dropping_struct] atomic.rs: 3419: match (success, failure) {
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3423: (Acquire, Relaxed) => intrinsics::atomic_cxchgweak_acquire_relaxed(dst, old, new),
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3418: let (val, ok) = unsafe {
[test_dropping_struct] atomic.rs: 3439: if ok { Ok(val) } else { Err(val) }
[test_dropping_struct] atomic.rs: 3439: if ok { Ok(val) } else { Err(val) }
[test_dropping_struct] atomic.rs: 3440: }
[test_dropping_struct] atomic.rs: 3440: }
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] atomic.rs: 2642: atomic_compare_exchange_weak(self.v.get(), current, new, success, failure)
[test_dropping_struct] futex.rs: 81: || self
[test_dropping_struct] result.rs: 564: matches!(*self, Ok(_))
[test_dropping_struct] futex.rs: 88: }
[test_dropping_struct] atomic.rs: 607: pub fn load(&self, order: Ordering) -> bool {
[test_dropping_struct] poison.rs: 199: pub fn new(guard: T) -> PoisonError<T> {
[test_dropping_struct] rwlock.rs: 580: poison::map_result(lock.poison.borrow(), |()| RwLockReadGuard {
[test_dropping_struct] poison.rs: 65: self.failed.load(Ordering::Relaxed)
[test_dropping_struct] atomic.rs: 610: unsafe { atomic_load(self.v.get(), order) != 0 }
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] mod.rs: 340: pub const fn new_const<const N: usize>(pieces: &'a [&'static str; N]) -> Self {
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 37: can_unwind: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] panic_info.rs: 38: force_no_backtrace: bool,
[test_dropping_struct] atomic.rs: 3312: match order {
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] atomic.rs: 3313: Relaxed => intrinsics::atomic_load_relaxed(dst),
[test_dropping_struct] poison.rs: 37: if self.get() { Err(PoisonError::new(())) } else { Ok(()) }
[test_dropping_struct] rwlock.rs: 580: poison::map_result(lock.poison.borrow(), |()| RwLockReadGuard {
[test_dropping_struct] poison.rs: 323: match result {
[test_dropping_struct] rwlock.rs: 581: data: unsafe { NonNull::new_unchecked(lock.data.get()) },
[test_dropping_struct] cell.rs: 2148: self as *const UnsafeCell<T> as *const T as *mut T
[test_dropping_struct] mut_ptr.rs: 51: const_eval_select((self as *mut u8,), const_impl, runtime_impl)
[test_dropping_struct] ub_checks.rs: 72: }
[test_dropping_struct] rwlock.rs: 583: })
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 324: Ok(t) => Ok(f(t)),
[test_dropping_struct] poison.rs: 328: }
[test_dropping_struct] rwlock.rs: 584: }
[test_dropping_struct] rwlock.rs: 277: }
[test_dropping_struct] result.rs: 1100: match self {
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] result.rs: 1101: Ok(t) => t,
[test_dropping_struct] main.rs: 22: assert_eq!(*drop_flag.read().unwrap(), true);
[test_dropping_struct] main.rs: 22: assert_eq!(*drop_flag.read().unwrap(), true);
[test_dropping_struct] rwlock.rs: 658: unsafe { self.data.as_ref() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 402: unsafe { &*self.as_ptr().cast_const() }
[test_dropping_struct] non_null.rs: 351: self.pointer as *mut T
[test_dropping_struct] rwlock.rs: 659: }
[test_dropping_struct] main.rs: 22: assert_eq!(*drop_flag.read().unwrap(), true);
[test_dropping_struct] main.rs: 22: assert_eq!(*drop_flag.read().unwrap(), true);
[test_dropping_struct] main.rs: 22: assert_eq!(*drop_flag.read().unwrap(), true);
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 2701: pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] atomic.rs: 3359: unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
[test_dropping_struct] rwlock.rs: 716: self.inner_lock.read_unlock();
[test_dropping_struct] rwlock.rs: 716: self.inner_lock.read_unlock();
[test_dropping_struct] futex.rs: 92: let state = self.state.fetch_sub(READ_LOCKED, Release) - READ_LOCKED;
[test_dropping_struct] atomic.rs: 2703: unsafe { atomic_sub(self.v.get(), val, order) }
[test_dropping_struct] cell.rs: 2148: self as *const UnsafeCell<T> as *const T as *mut T
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] atomic.rs: 3365: Release => intrinsics::atomic_xsub_release(dst, val),
[test_dropping_struct] futex.rs: 92: let state = self.state.fetch_sub(READ_LOCKED, Release) - READ_LOCKED;
[test_dropping_struct] rwlock.rs: 718: }
[test_dropping_struct] mod.rs: 543: pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 412: pub const fn new(v: bool) -> AtomicBool {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2194: Self {v: UnsafeCell::new(v)}
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] futex.rs: 67: Self { state: AtomicU32::new(0), writer_notify: AtomicU32::new(0) }
[test_dropping_struct] atomic.rs: 413: AtomicBool { v: UnsafeCell::new(v as u8) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 225: RwLock { inner: sys::RwLock::new(), poison: poison::Flag::new(), data: UnsafeCell::new(t) }
[test_dropping_struct] rwlock.rs: 226: }
[test_dropping_struct] boxed.rs: 258: pub fn new(x: T) -> Self {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2193: pub const fn new(v: $int_type) -> Self {
[test_dropping_struct] cell.rs: 2078: pub const fn new(value: T) -> UnsafeCell<T> {
[test_dropping_struct] atomic.rs: 2194: Self {v: UnsafeCell::new(v)}
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
[test_dropping_struct] sync.rs: 390: let x: Box<_> = Box::new(ArcInner {
*** Verification unsuccessful.
Number of complete executions explored: 1
Total wall-clock time: 0.91s
