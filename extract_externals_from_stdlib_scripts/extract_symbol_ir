#!/usr/bin/env bash
set -euo pipefail

SYM="${1:?Usage: $0 SYMBOL_NAME}"

# Find the first .rlib containing the symbol
match=$(find . -type f \( -name '*.o' -o -name '*.rlib' \) -print0 \
  | xargs -0 -P"$(nproc)" -I{} sh -c '
      f="$1"; sym="$2"
      llvm-nm-18 --quiet --defined-only --print-file-name "$f" 2>/dev/null
    ' sh {} "$SYM" \
  | rg -F "$SYM" | grep '\.rlib:' | head -n1)

if [[ -z "$match" ]]; then
  echo "Symbol not found in any .rlib" >&2
  exit 1
fi

# Extract rlib path from match
rlib_path="${match%%:*}"
echo "Found symbol in: $rlib_path"

# Extract IR from rlib
outdir="${rlib_path%.rlib}.bcdir"
mkdir -p "$outdir"
tmp=$(mktemp -d)

# Extract only .o members into a temp dir
llvm-ar-18 t "$rlib_path" | rg '\.o$' | while read -r m; do
  llvm-ar-18 p "$rlib_path" "$m" > "$tmp/$m"
done

# Dump bitcode and disassemble
( cd "$tmp"
  find . -type f -name '*.o' -print0 | while IFS= read -r -d '' f; do
    if llvm-readelf-18 -S "$f" | rg -q '\.llvmbc'; then
      b="$outdir/${f#./}"; b="${b%.o}"
      mkdir -p "$(dirname "$b")"
      llvm-objcopy-18 --dump-section .llvmbc="${b}.bc" "$f"
      llvm-dis-18 "${b}.bc" -o "${b}.ll"
      echo "$rlib_path:${f#./} -> ${b}.bc  ${b}.ll"
    fi
  done
)
