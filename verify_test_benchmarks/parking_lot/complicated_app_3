#!/bin/bash
set -euo pipefail
set -x

# --- config ---
OUTPUT_DIR="$(pwd)"
LLVM_HOME=/usr/lib/llvm-18
CRATE=parking_lot

cargo clean
RUSTFLAGS="-C codegen-units=1 -C embed-bitcode=yes --emit=llvm-ir" \
rustup run RustMC cargo test --lib --no-run

cd target/debug/deps
rm -f *no-opt*

# Collect dependency IR from rlibs as .ll
TMP_BC_DIR="$(mktemp -d)"
TMP_LL_DIR="$(mktemp -d)"

# Extract .bc from .rlib and disassemble to .ll
find . -maxdepth 1 -type f -name 'lib*.rlib' -print0 | while IFS= read -r -d '' A; do
  ( "${LLVM_HOME}/bin/llvm-ar" t "$A" | grep -F ".bc" || true ) | while read -r M; do
    mkdir -p "$TMP_BC_DIR/$(basename "$A" .rlib)" "$TMP_LL_DIR/$(basename "$A" .rlib)"
    "${LLVM_HOME}/bin/llvm-ar" x "$A" "$M"
    mv -f "$M" "$TMP_BC_DIR/$(basename "$A" .rlib)/"
    # disassemble to .ll
    for bc in "$TMP_BC_DIR/$(basename "$A" .rlib)/"*.bc; do
      [ -e "$bc" ] || continue
      base="$(basename "$bc" .bc)"
      "${LLVM_HOME}/bin/llvm-dis" "$bc" -o "$TMP_LL_DIR/$(basename "$A" .rlib)/$base.ll"
    done
  done
done

# 2) .llvmbc sections from .o -> .ll
find . -maxdepth 1 -type f -name 'lib*.rlib' -print0 | while IFS= read -r -d '' A; do
  ( "${LLVM_HOME}/bin/llvm-ar" t "$A" | grep -F ".o" || true ) | while read -r O; do
    mkdir -p "$TMP_BC_DIR/$(basename "$A" .rlib)" "$TMP_LL_DIR/$(basename "$A" .rlib)"
    "${LLVM_HOME}/bin/llvm-ar" x "$A" "$O"
    OUTBC="$TMP_BC_DIR/$(basename "$A" .rlib)/$(basename "$A" .rlib).$O.bc"
    "${LLVM_HOME}/bin/llvm-objcopy" --dump-section .llvmbc="$OUTBC" "$O" 2>/dev/null || true
    rm -f "$O"
    if [ -s "$OUTBC" ]; then
      "${LLVM_HOME}/bin/llvm-dis" "$OUTBC" -o "$TMP_LL_DIR/$(basename "$A" .rlib)/$(basename "$OUTBC" .bc).ll"
    fi
  done
done

# Link all .ll (tests + crate CGUs + dep IR) into one .ll
shopt -s nullglob
HARNESS_LL=( "./${CRATE}-"*.ll )              # includes #[test] fns
CRATE_CGUS_LL=( "./${CRATE}-"*.rcgu.ll )      # optional, same crate CGUs
DEPS_LL=( "$TMP_LL_DIR"/*/*.ll )

# Use only your crateâ€™s harness + its CGUs + deps
"${LLVM_HOME}/bin/llvm-link" -S -o "$OUTPUT_DIR/$CRATE.whole.linked.ll" \
  "${HARNESS_LL[@]}" "${CRATE_CGUS_LL[@]}" "${DEPS_LL[@]}"

# Optional .bc too
"${LLVM_HOME}/bin/llvm-link" -o "$OUTPUT_DIR/$CRATE.whole.linked.bc" \
  "${HARNESS_LL[@]}" "${CRATE_CGUS_LL[@]}" "${DEPS_LL[@]}"

echo "Wrote:"
echo "  ${OUTPUT_DIR}/${CRATE}.whole.linked.ll"
echo "  ${OUTPUT_DIR}/${CRATE}.whole.linked.bc"


echo "output dir is: $OUTPUT_DIR"

cp "$OUTPUT_DIR/$CRATE.whole.linked.ll" "/home/ollie/Desktop/mixer/genmc-tool/combined_old.ll"
cp "$OUTPUT_DIR/$CRATE.whole.linked.bc" "/home/ollie/Desktop/mixer/genmc-tool/combined_old.bc"