#!/bin/bash
set -euo pipefail
OUTPUT_DIR="$(pwd)/linked"
CRATE="parking_lot"
LLVM_HOME=/usr/lib/llvm-18/bin

# 1) Compile tests + crate with embedded bitcode
RUSTFLAGS="--emit=llvm-bc,llvm-ir \
-Zpanic_abort_tests \
-C codegen-units=1 \
-C embed-bitcode=yes \
-C overflow-checks=off \
-C target-feature=-avx2 \
-C no-vectorize-slp \
-C no-vectorize-loops \
-C prefer-dynamic=no \
-C lto=no \
-C opt-level=3 \
-C debuginfo=2 \
-C llvm-args=--inline-threshold=9000 \
-C llvm-args=--bpf-expand-memcpy-in-order \
-C no-prepopulate-passes \
-C passes=ipsccp \
-C passes=globalopt \
-C passes=reassociate \
-C passes=argpromotion \
-C passes=typepromotion \
-C passes=lower-constant-intrinsics \
-C passes=memcpyopt \
-Z mir-opt-level=0 \
--target=x86_64-unknown-linux-gnu" \
rustup run RustMC cargo test --lib --no-run

# 2) Collect all .bc files and link them
mkdir -p "$OUTPUT_DIR"
cd target/debug/deps
rm -f *no-opt*
BC_FILES=(./${CRATE}-*.rcgu.bc ./*.bc)
echo "bc files: ${BC_FILES[*]}"
"${LLVM_HOME}/llvm-link" -S -o "$OUTPUT_DIR/$CRATE.linked.ll" "${BC_FILES[@]}"
"${LLVM_HOME}/llvm-link"     -o "$OUTPUT_DIR/$CRATE.linked.bc" "${BC_FILES[@]}"

echo "Linked IR in: $OUTPUT_DIR/${CRATE}.linked.ll"
echo "Linked bitcode in: $OUTPUT_DIR/${CRATE}.linked.bc"
